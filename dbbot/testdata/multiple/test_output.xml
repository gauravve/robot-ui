<?xml version="1.0" encoding="UTF-8"?>
<robot generated="20130409 15:06:56.309" generator="Robot trunk 20130226 (Python 2.7.4 on darwin)">
    <suite id="s1" name="Dryrun" source="/Users/asyrjasalo/eficode/robot/robotframework/atest/robot/cli/dryrun">
        <suite id="s1-s1" name="Dryrun" source="/Users/asyrjasalo/eficode/robot/robotframework/atest/robot/cli/dryrun/dryrun.txt">
            <kw name="atest_resource.Run Tests" timeout="" type="setup">
                <doc/>
                <arguments>
                    <arg>--runmode dryrun</arg>
                    <arg>cli/dryrun/dryrun.txt</arg>
                    <arg>cli/dryrun/more_tests.txt</arg>
                </arguments>
                <kw name="atest_resource.Run Tests Helper" timeout="" type="kw">
                    <doc/>
                    <arguments>
                        <arg>${options}</arg>
                        <arg>@{data list}</arg>
                    </arguments>
                    <kw name="${data string} = atest_resource.Set Variables And Get Datasources" timeout="" type="kw">
                        <doc/>
                        <arguments>
                            <arg>@{data list}</arg>
                        </arguments>
                        <kw name="BuiltIn.Set Suite Variable" timeout="" type="kw">
                            <doc>Makes a variable available everywhere within the scope of the current suite.</doc>
                            <arguments>
                                <arg>$SUITE</arg>
                                <arg>${NONE}</arg>
                            </arguments>
                            <msg level="INFO" timestamp="20130409 15:06:56.424">${SUITE} = None</msg>
                            <status endtime="20130409 15:06:56.424" starttime="20130409 15:06:56.423" status="PASS"/>
                        </kw>
                        <kw name="${name} = TestHelper.Get Output Name" timeout="" type="kw">
                            <doc/>
                            <arguments>
                                <arg>@{data list}</arg>
                            </arguments>
                            <msg level="INFO" timestamp="20130409 15:06:56.425">${name} = dryrun_more_tests</msg>
                            <status endtime="20130409 15:06:56.425" starttime="20130409 15:06:56.424" status="PASS"/>
                        </kw>
                        <kw name="atest_resource.Set Variables" timeout="" type="kw">
                            <doc/>
                            <arguments>
                                <arg>${name}</arg>
                            </arguments>
                            <kw name="${OUTDIR} = OperatingSystem.Join Path" timeout="" type="kw">
                                <doc>Joins the given path part(s) to the given base path.</doc>
                                <arguments>
                                    <arg>${OUTPUTDIR}</arg>
                                    <arg>output</arg>
                                    <arg>${name}</arg>
                                </arguments>
                                <msg level="INFO" timestamp="20130409 15:06:56.427">${OUTDIR} = /Users/asyrjasalo/eficode/robot/robotframework/atest/results/python/output/dryrun_more_tests</msg>
                                <status endtime="20130409 15:06:56.426" starttime="20130409 15:06:56.426" status="PASS"/>
                            </kw>
                            <kw name="BuiltIn.Set Global Variable" timeout="" type="kw">
                                <doc>Makes a variable available globally in all tests and suites.</doc>
                                <arguments>
                                    <arg>$OUTDIR</arg>
                                    <arg>${OUTDIR.encode('ascii', 'ignore').replace('?', '_') .replace('*', '_')}</arg>
                                </arguments>
                                <msg level="INFO" timestamp="20130409 15:06:56.428">${OUTDIR} = /Users/asyrjasalo/eficode/robot/robotframework/atest/results/python/output/dryrun_more_tests</msg>
                                <status endtime="20130409 15:06:56.428" starttime="20130409 15:06:56.427" status="PASS"/>
                            </kw>
                            <kw name="OperatingSystem.Create Directory" timeout="" type="kw">
                                <doc>Creates the specified directory.</doc>
                                <arguments>
                                    <arg>${OUTDIR}</arg>
                                </arguments>
                                <msg html="yes" level="INFO" timestamp="20130409 15:06:56.429">Created directory '&lt;a href=&quot;file:///Users/asyrjasalo/eficode/robot/robotframework/atest/results/python/output/dryrun_more_tests&quot;&gt;/Users/asyrjasalo/eficode/robot/robotframework/atest/results/python/output/dryrun_more_tests&lt;/a&gt;'</msg>
                                <status endtime="20130409 15:06:56.429" starttime="20130409 15:06:56.428" status="PASS"/>
                            </kw>
                            <kw name="BuiltIn.Set Suite Variable" timeout="" type="kw">
                                <doc>Makes a variable available everywhere within the scope of the current suite.</doc>
                                <arguments>
                                    <arg>$OUTFILE</arg>
                                    <arg>${OUTDIR}${/}output.xml</arg>
                                </arguments>
                                <msg level="INFO" timestamp="20130409 15:06:56.430">${OUTFILE} = /Users/asyrjasalo/eficode/robot/robotframework/atest/results/python/output/dryrun_more_tests/output.xml</msg>
                                <status endtime="20130409 15:06:56.430" starttime="20130409 15:06:56.429" status="PASS"/>
                            </kw>
                            <kw name="BuiltIn.Set Suite Variable" timeout="" type="kw">
                                <doc>Makes a variable available everywhere within the scope of the current suite.</doc>
                                <arguments>
                                    <arg>$STDOUT_FILE</arg>
                                    <arg>${OUTDIR}${/}stdout.txt</arg>
                                </arguments>
                                <msg level="INFO" timestamp="20130409 15:06:56.431">${STDOUT_FILE} = /Users/asyrjasalo/eficode/robot/robotframework/atest/results/python/output/dryrun_more_tests/stdout.txt</msg>
                                <status endtime="20130409 15:06:56.431" starttime="20130409 15:06:56.430" status="PASS"/>
                            </kw>
                            <kw name="BuiltIn.Set Suite Variable" timeout="" type="kw">
                                <doc>Makes a variable available everywhere within the scope of the current suite.</doc>
                                <arguments>
                                    <arg>$STDERR_FILE</arg>
                                    <arg>${OUTDIR}${/}stderr.txt</arg>
                                </arguments>
                                <msg level="INFO" timestamp="20130409 15:06:56.431">${STDERR_FILE} = /Users/asyrjasalo/eficode/robot/robotframework/atest/results/python/output/dryrun_more_tests/stderr.txt</msg>
                                <status endtime="20130409 15:06:56.432" starttime="20130409 15:06:56.431" status="PASS"/>
                            </kw>
                            <kw name="BuiltIn.Set Suite Variable" timeout="" type="kw">
                                <doc>Makes a variable available everywhere within the scope of the current suite.</doc>
                                <arguments>
                                    <arg>$SYSLOG_FILE</arg>
                                    <arg>${OUTDIR}${/}syslog.txt</arg>
                                </arguments>
                                <msg level="INFO" timestamp="20130409 15:06:56.432">${SYSLOG_FILE} = /Users/asyrjasalo/eficode/robot/robotframework/atest/results/python/output/dryrun_more_tests/syslog.txt</msg>
                                <status endtime="20130409 15:06:56.432" starttime="20130409 15:06:56.432" status="PASS"/>
                            </kw>
                            <kw name="OperatingSystem.Set Environment Variable" timeout="" type="kw">
                                <doc>Sets an environment variable to a specified value.</doc>
                                <arguments>
                                    <arg>ROBOT_SYSLOG_FILE</arg>
                                    <arg>${SYSLOG_FILE}</arg>
                                </arguments>
                                <msg level="INFO" timestamp="20130409 15:06:56.433">Environment variable 'ROBOT_SYSLOG_FILE' set to value '/Users/asyrjasalo/eficode/robot/robotframework/atest/results/python/output/dryrun_more_tests/syslog.txt'</msg>
                                <status endtime="20130409 15:06:56.433" starttime="20130409 15:06:56.433" status="PASS"/>
                            </kw>
                            <kw name="atest_resource.Set Runners" timeout="" type="kw">
                                <doc/>
                                <arguments/>
                                <kw name="${robot} = OperatingSystem.Join Path" timeout="" type="kw">
                                    <doc>Joins the given path part(s) to the given base path.</doc>
                                    <arguments>
                                        <arg>${ROBOTPATH}</arg>
                                        <arg>run.py</arg>
                                    </arguments>
                                    <msg level="INFO" timestamp="20130409 15:06:56.434">${robot} = /Users/asyrjasalo/eficode/robot/robotframework/src/robot/run.py</msg>
                                    <status endtime="20130409 15:06:56.434" starttime="20130409 15:06:56.434" status="PASS"/>
                                </kw>
                                <kw name="BuiltIn.Set Suite Variable" timeout="" type="kw">
                                    <doc>Makes a variable available everywhere within the scope of the current suite.</doc>
                                    <arguments>
                                        <arg>$ROBOT</arg>
                                        <arg>${INTERPRETER} ${robot}</arg>
                                    </arguments>
                                    <msg level="INFO" timestamp="20130409 15:06:56.435">${ROBOT} = python /Users/asyrjasalo/eficode/robot/robotframework/src/robot/run.py</msg>
                                    <status endtime="20130409 15:06:56.435" starttime="20130409 15:06:56.435" status="PASS"/>
                                </kw>
                                <kw name="${rebot} = OperatingSystem.Join Path" timeout="" type="kw">
                                    <doc>Joins the given path part(s) to the given base path.</doc>
                                    <arguments>
                                        <arg>${ROBOTPATH}</arg>
                                        <arg>rebot.py</arg>
                                    </arguments>
                                    <msg level="INFO" timestamp="20130409 15:06:56.436">${rebot} = /Users/asyrjasalo/eficode/robot/robotframework/src/robot/rebot.py</msg>
                                    <status endtime="20130409 15:06:56.436" starttime="20130409 15:06:56.435" status="PASS"/>
                                </kw>
                                <kw name="BuiltIn.Set Suite Variable" timeout="" type="kw">
                                    <doc>Makes a variable available everywhere within the scope of the current suite.</doc>
                                    <arguments>
                                        <arg>$REBOT</arg>
                                        <arg>${INTERPRETER} ${rebot}</arg>
                                    </arguments>
                                    <msg level="INFO" timestamp="20130409 15:06:56.436">${REBOT} = python /Users/asyrjasalo/eficode/robot/robotframework/src/robot/rebot.py</msg>
                                    <status endtime="20130409 15:06:56.436" starttime="20130409 15:06:56.436" status="PASS"/>
                                </kw>
                                <status endtime="20130409 15:06:56.436" starttime="20130409 15:06:56.433" status="PASS"/>
                            </kw>
                            <status endtime="20130409 15:06:56.437" starttime="20130409 15:06:56.425" status="PASS"/>
                        </kw>
                        <kw name="@{data list} = OperatingSystem.Join Paths" timeout="" type="kw">
                            <doc>Joins given paths with base and returns resulted paths.</doc>
                            <arguments>
                                <arg>${DATADIR}</arg>
                                <arg>@{data list}</arg>
                            </arguments>
                            <msg level="INFO" timestamp="20130409 15:06:56.437">@{data list} = [ /Users/asyrjasalo/eficode/robot/robotframework/atest/testdata/cli/dryrun/dryrun.txt | /Users/asyrjasalo/eficode/robot/robotframework/atest/testdata/cli/dryrun/more_tests.txt ]</msg>
                            <status endtime="20130409 15:06:56.437" starttime="20130409 15:06:56.437" status="PASS"/>
                        </kw>
                        <kw name="${data string} = BuiltIn.Catenate" timeout="" type="kw">
                            <doc>Catenates the given items together and returns the resulted string.</doc>
                            <arguments>
                                <arg>@{data list}</arg>
                            </arguments>
                            <msg level="INFO" timestamp="20130409 15:06:56.438">${data string} = /Users/asyrjasalo/eficode/robot/robotframework/atest/testdata/cli/dryrun/dryrun.txt /Users/asyrjasalo/eficode/robot/robotframework/atest/testdata/cli/dryrun/more_tests.txt</msg>
                            <status endtime="20130409 15:06:56.438" starttime="20130409 15:06:56.437" status="PASS"/>
                        </kw>
                        <msg level="INFO" timestamp="20130409 15:06:56.438">${data string} = /Users/asyrjasalo/eficode/robot/robotframework/atest/testdata/cli/dryrun/dryrun.txt /Users/asyrjasalo/eficode/robot/robotframework/atest/testdata/cli/dryrun/more_tests.txt</msg>
                        <status endtime="20130409 15:06:56.438" starttime="20130409 15:06:56.422" status="PASS"/>
                    </kw>
                    <kw name="${options} = BuiltIn.Catenate" timeout="" type="kw">
                        <doc>Catenates the given items together and returns the resulted string.</doc>
                        <arguments>
                            <arg>--MonitorMarkers OFF</arg>
                            <arg>${user options}</arg>
                            <arg>--variable interpreter:${INTERPRETER}</arg>
                            <arg>--pythonpath ${LIBPATH1}</arg>
                            <arg>--pythonpath ${LIBPATH2}</arg>
                        </arguments>
                        <msg level="INFO" timestamp="20130409 15:06:56.439">${options} = --MonitorMarkers OFF --runmode dryrun --variable interpreter:python --pythonpath /Users/asyrjasalo/eficode/robot/robotframework/atest/resources/../testresources/testlibs --pythonpath /Users/asyrjasalo...</msg>
                        <status endtime="20130409 15:06:56.439" starttime="20130409 15:06:56.438" status="PASS"/>
                    </kw>
                    <kw name="atest_resource.Run Helper" timeout="" type="kw">
                        <doc/>
                        <arguments>
                            <arg>${ROBOT}</arg>
                            <arg>${options}</arg>
                            <arg>${data string}</arg>
                        </arguments>
                        <kw name="OperatingSystem.Remove Files" timeout="" type="kw">
                            <doc>Uses `Remove File` to remove multiple files one-by-one.</doc>
                            <arguments>
                                <arg>${OUTFILE}</arg>
                                <arg>${OUTDIR}/*.xml</arg>
                                <arg>${OUTDIR}/*.html</arg>
                            </arguments>
                            <msg html="yes" level="INFO" timestamp="20130409 15:06:56.441">File '&lt;a href=&quot;file:///Users/asyrjasalo/eficode/robot/robotframework/atest/results/python/output/dryrun_more_tests/output.xml&quot;&gt;/Users/asyrjasalo/eficode/robot/robotframework/atest/results/python/output/dryrun_more_tests/output.xml&lt;/a&gt;' does not exist</msg>
                            <msg html="yes" level="INFO" timestamp="20130409 15:06:56.441">File '&lt;a href=&quot;file:///Users/asyrjasalo/eficode/robot/robotframework/atest/results/python/output/dryrun_more_tests/*.xml&quot;&gt;/Users/asyrjasalo/eficode/robot/robotframework/atest/results/python/output/dryrun_more_tests/*.xml&lt;/a&gt;' does not exist</msg>
                            <msg html="yes" level="INFO" timestamp="20130409 15:06:56.442">File '&lt;a href=&quot;file:///Users/asyrjasalo/eficode/robot/robotframework/atest/results/python/output/dryrun_more_tests/*.html&quot;&gt;/Users/asyrjasalo/eficode/robot/robotframework/atest/results/python/output/dryrun_more_tests/*.html&lt;/a&gt;' does not exist</msg>
                            <status endtime="20130409 15:06:56.442" starttime="20130409 15:06:56.440" status="PASS"/>
                        </kw>
                        <kw name="${cmd} = BuiltIn.Catenate" timeout="" type="kw">
                            <doc>Catenates the given items together and returns the resulted string.</doc>
                            <arguments>
                                <arg>${runner}</arg>
                                <arg>--monitorcolors OFF</arg>
                                <arg>--outputdir ${OUTDIR}</arg>
                                <arg>--output ${OUTFILE}</arg>
                                <arg>--report NONE</arg>
                                <arg>--log NONE</arg>
                                <arg>${options}</arg>
                                <arg>${data string}</arg>
                                <arg>1&gt;${STDOUTFILE}</arg>
                                <arg>2&gt;${STDERRFILE}</arg>
                            </arguments>
                            <msg level="INFO" timestamp="20130409 15:06:56.443">${cmd} = python /Users/asyrjasalo/eficode/robot/robotframework/src/robot/run.py --monitorcolors OFF --outputdir /Users/asyrjasalo/eficode/robot/robotframework/atest/results/python/output/dryrun_more_tests --ou...</msg>
                            <status endtime="20130409 15:06:56.443" starttime="20130409 15:06:56.442" status="PASS"/>
                        </kw>
                        <kw name="${rc} = OperatingSystem.Run And Return Rc" timeout="" type="kw">
                            <doc>Runs the given command in the system and returns the return code.</doc>
                            <arguments>
                                <arg>${cmd}</arg>
                            </arguments>
                            <msg level="INFO" timestamp="20130409 15:06:56.444">Running command 'python /Users/asyrjasalo/eficode/robot/robotframework/src/robot/run.py --monitorcolors OFF --outputdir /Users/asyrjasalo/eficode/robot/robotframework/atest/results/python/output/dryrun_more_tests --output /Users/asyrjasalo/eficode/robot/robotframework/atest/results/python/output/dryrun_more_tests/output.xml --report NONE --log NONE --MonitorMarkers OFF --runmode dryrun --variable interpreter:python --pythonpath /Users/asyrjasalo/eficode/robot/robotframework/atest/resources/../testresources/testlibs --pythonpath /Users/asyrjasalo/eficode/robot/robotframework/atest/resources/../testresources/listeners /Users/asyrjasalo/eficode/robot/robotframework/atest/testdata/cli/dryrun/dryrun.txt /Users/asyrjasalo/eficode/robot/robotframework/atest/testdata/cli/dryrun/more_tests.txt 1&gt;/Users/asyrjasalo/eficode/robot/robotframework/atest/results/python/output/dryrun_more_tests/stdout.txt 2&gt;/Users/asyrjasalo/eficode/robot/robotframework/atest/results/python/output/dryrun_more_tests/stderr.txt'</msg>
                            <msg level="INFO" timestamp="20130409 15:06:56.775">${rc} = 10</msg>
                            <status endtime="20130409 15:06:56.775" starttime="20130409 15:06:56.444" status="PASS"/>
                        </kw>
                        <kw name="BuiltIn.Log" timeout="" type="kw">
                            <doc>Logs the given message with the given level.</doc>
                            <arguments>
                                <arg>&lt;a href=&quot;file://${OUTDIR}&quot;&gt;${OUTDIR}&lt;/a&gt;</arg>
                                <arg>HTML</arg>
                            </arguments>
                            <msg html="yes" level="INFO" timestamp="20130409 15:06:56.776">&lt;a href=&quot;file:///Users/asyrjasalo/eficode/robot/robotframework/atest/results/python/output/dryrun_more_tests&quot;&gt;/Users/asyrjasalo/eficode/robot/robotframework/atest/results/python/output/dryrun_more_tests&lt;/a&gt;</msg>
                            <status endtime="20130409 15:06:56.776" starttime="20130409 15:06:56.776" status="PASS"/>
                        </kw>
                        <kw name="BuiltIn.Log" timeout="" type="kw">
                            <doc>Logs the given message with the given level.</doc>
                            <arguments>
                                <arg>&lt;a href=&quot;file://${OUTFILE}&quot;&gt;${OUTFILE}&lt;/a&gt;</arg>
                                <arg>HTML</arg>
                            </arguments>
                            <msg html="yes" level="INFO" timestamp="20130409 15:06:56.777">&lt;a href=&quot;file:///Users/asyrjasalo/eficode/robot/robotframework/atest/results/python/output/dryrun_more_tests/output.xml&quot;&gt;/Users/asyrjasalo/eficode/robot/robotframework/atest/results/python/output/dryrun_more_tests/output.xml&lt;/a&gt;</msg>
                            <status endtime="20130409 15:06:56.777" starttime="20130409 15:06:56.776" status="PASS"/>
                        </kw>
                        <kw name="BuiltIn.Log" timeout="" type="kw">
                            <doc>Logs the given message with the given level.</doc>
                            <arguments>
                                <arg>&lt;a href=&quot;file://${STDOUTFILE}&quot;&gt;${STDOUTFILE}&lt;/a&gt;</arg>
                                <arg>HTML</arg>
                            </arguments>
                            <msg html="yes" level="INFO" timestamp="20130409 15:06:56.777">&lt;a href=&quot;file:///Users/asyrjasalo/eficode/robot/robotframework/atest/results/python/output/dryrun_more_tests/stdout.txt&quot;&gt;/Users/asyrjasalo/eficode/robot/robotframework/atest/results/python/output/dryrun_more_tests/stdout.txt&lt;/a&gt;</msg>
                            <status endtime="20130409 15:06:56.778" starttime="20130409 15:06:56.777" status="PASS"/>
                        </kw>
                        <kw name="BuiltIn.Log" timeout="" type="kw">
                            <doc>Logs the given message with the given level.</doc>
                            <arguments>
                                <arg>&lt;a href=&quot;file://${STDERRFILE}&quot;&gt;${STDERRFILE}&lt;/a&gt;</arg>
                                <arg>HTML</arg>
                            </arguments>
                            <msg html="yes" level="INFO" timestamp="20130409 15:06:56.778">&lt;a href=&quot;file:///Users/asyrjasalo/eficode/robot/robotframework/atest/results/python/output/dryrun_more_tests/stderr.txt&quot;&gt;/Users/asyrjasalo/eficode/robot/robotframework/atest/results/python/output/dryrun_more_tests/stderr.txt&lt;/a&gt;</msg>
                            <status endtime="20130409 15:06:56.778" starttime="20130409 15:06:56.778" status="PASS"/>
                        </kw>
                        <kw name="BuiltIn.Log" timeout="" type="kw">
                            <doc>Logs the given message with the given level.</doc>
                            <arguments>
                                <arg>&lt;a href=&quot;file://${SYSLOGFILE}&quot;&gt;${SYSLOGFILE}&lt;/a&gt;</arg>
                                <arg>HTML</arg>
                            </arguments>
                            <msg html="yes" level="INFO" timestamp="20130409 15:06:56.779">&lt;a href=&quot;file:///Users/asyrjasalo/eficode/robot/robotframework/atest/results/python/output/dryrun_more_tests/syslog.txt&quot;&gt;/Users/asyrjasalo/eficode/robot/robotframework/atest/results/python/output/dryrun_more_tests/syslog.txt&lt;/a&gt;</msg>
                            <status endtime="20130409 15:06:56.779" starttime="20130409 15:06:56.779" status="PASS"/>
                        </kw>
                        <status endtime="20130409 15:06:56.779" starttime="20130409 15:06:56.439" status="PASS"/>
                    </kw>
                    <status endtime="20130409 15:06:56.779" starttime="20130409 15:06:56.421" status="PASS"/>
                </kw>
                <kw name="TestCheckerLibrary.Process Output" timeout="" type="kw">
                    <doc/>
                    <arguments>
                        <arg>${OUTFILE}</arg>
                    </arguments>
                    <msg level="INFO" timestamp="20130409 15:06:56.791">${SUITE} = Dryrun &amp; More Tests</msg>
                    <msg level="INFO" timestamp="20130409 15:06:56.792">${STATISTICS} = &lt;robot.model.statistics.Statistics object at 0x105118dd0&gt;</msg>
                    <msg level="INFO" timestamp="20130409 15:06:56.792">${ERRORS} = &lt;robot.result.executionerrors.ExecutionErrors object at 0x105118d90&gt;</msg>
                    <msg level="INFO" timestamp="20130409 15:06:56.792">Processing output '/Users/asyrjasalo/eficode/robot/robotframework/atest/results/python/output/dryrun_more_tests/output.xml'</msg>
                    <status endtime="20130409 15:06:56.792" starttime="20130409 15:06:56.780" status="PASS"/>
                </kw>
                <status endtime="20130409 15:06:56.792" starttime="20130409 15:06:56.420" status="PASS"/>
            </kw>
            <test id="s1-s1-t1" name="Passing keywords" timeout="">
                <kw name="${tc} = atest_resource.Check Test Case" timeout="" type="kw">
                    <doc/>
                    <arguments>
                        <arg>${TESTNAME}</arg>
                    </arguments>
                    <kw name="${test} = TestCheckerLibrary.Get Test From Suite" timeout="" type="kw">
                        <doc/>
                        <arguments>
                            <arg>${SUITE}</arg>
                            <arg>${name}</arg>
                        </arguments>
                        <msg level="INFO" timestamp="20130409 15:06:56.796">${test} = Passing keywords</msg>
                        <status endtime="20130409 15:06:56.795" starttime="20130409 15:06:56.795" status="PASS"/>
                    </kw>
                    <kw name="TestCheckerLibrary.Check Test Status" timeout="" type="kw">
                        <doc>Verifies that test's status and message are as expected.</doc>
                        <arguments>
                            <arg>${test}</arg>
                            <arg>${status}</arg>
                            <arg>${message}</arg>
                        </arguments>
                        <status endtime="20130409 15:06:56.796" starttime="20130409 15:06:56.796" status="PASS"/>
                    </kw>
                    <msg level="INFO" timestamp="20130409 15:06:56.796">${tc} = Passing keywords</msg>
                    <status endtime="20130409 15:06:56.796" starttime="20130409 15:06:56.794" status="PASS"/>
                </kw>
                <kw name="Should have correct number of keywords" timeout="" type="kw">
                    <doc/>
                    <arguments>
                        <arg>${tc}</arg>
                        <arg>3</arg>
                    </arguments>
                    <kw name="BuiltIn.Log" timeout="" type="kw">
                        <doc>Logs the given message with the given level.</doc>
                        <arguments>
                            <arg>${test or uk.kws}</arg>
                        </arguments>
                        <msg level="INFO" timestamp="20130409 15:06:56.798">[&lt;TestCheckerLibrary.NoSlotsKeyword object at 0x1050dbc30&gt;, &lt;TestCheckerLibrary.NoSlotsKeyword object at 0x1050dbd70&gt;, &lt;TestCheckerLibrary.NoSlotsKeyword object at 0x1050dbe10&gt;]</msg>
                        <status endtime="20130409 15:06:56.798" starttime="20130409 15:06:56.798" status="PASS"/>
                    </kw>
                    <kw name="BuiltIn.Should Be Equal As Integers" timeout="" type="kw">
                        <doc>Fails if objects are unequal after converting them to integers.</doc>
                        <arguments>
                            <arg>${test or uk.kw_count}</arg>
                            <arg>${exp number of kws}</arg>
                        </arguments>
                        <msg level="INFO" timestamp="20130409 15:06:56.799">Argument types are:
&lt;type 'int'&gt;
&lt;type 'unicode'&gt;</msg>
                        <status endtime="20130409 15:06:56.799" starttime="20130409 15:06:56.799" status="PASS"/>
                    </kw>
                    <status endtime="20130409 15:06:56.799" starttime="20130409 15:06:56.797" status="PASS"/>
                </kw>
                <kw name="Name and status should be" timeout="" type="kw">
                    <doc/>
                    <arguments>
                        <arg>${tc.kws[0]}</arg>
                        <arg>BuiltIn.Log</arg>
                        <arg>NOT_RUN</arg>
                    </arguments>
                    <kw name="BuiltIn.Should Be Equal" timeout="" type="kw">
                        <doc>Fails if the given objects are unequal.</doc>
                        <arguments>
                            <arg>${kw.name}</arg>
                            <arg>${name}</arg>
                        </arguments>
                        <msg level="INFO" timestamp="20130409 15:06:56.801">Argument types are:
&lt;type 'str'&gt;
&lt;type 'unicode'&gt;</msg>
                        <status endtime="20130409 15:06:56.801" starttime="20130409 15:06:56.801" status="PASS"/>
                    </kw>
                    <kw name="BuiltIn.Should Be Equal" timeout="" type="kw">
                        <doc>Fails if the given objects are unequal.</doc>
                        <arguments>
                            <arg>${kw.status}</arg>
                            <arg>${status}</arg>
                        </arguments>
                        <msg level="INFO" timestamp="20130409 15:06:56.802">Argument types are:
&lt;type 'str'&gt;
&lt;type 'unicode'&gt;</msg>
                        <status endtime="20130409 15:06:56.802" starttime="20130409 15:06:56.801" status="PASS"/>
                    </kw>
                    <status endtime="20130409 15:06:56.802" starttime="20130409 15:06:56.799" status="PASS"/>
                </kw>
                <kw name="Name and status should be" timeout="" type="kw">
                    <doc/>
                    <arguments>
                        <arg>${tc.kws[1]}</arg>
                        <arg>\${contents} = OperatingSystem.List Directory</arg>
                        <arg>NOT_RUN</arg>
                    </arguments>
                    <kw name="BuiltIn.Should Be Equal" timeout="" type="kw">
                        <doc>Fails if the given objects are unequal.</doc>
                        <arguments>
                            <arg>${kw.name}</arg>
                            <arg>${name}</arg>
                        </arguments>
                        <msg level="INFO" timestamp="20130409 15:06:56.804">Argument types are:
&lt;type 'str'&gt;
&lt;type 'unicode'&gt;</msg>
                        <status endtime="20130409 15:06:56.804" starttime="20130409 15:06:56.803" status="PASS"/>
                    </kw>
                    <kw name="BuiltIn.Should Be Equal" timeout="" type="kw">
                        <doc>Fails if the given objects are unequal.</doc>
                        <arguments>
                            <arg>${kw.status}</arg>
                            <arg>${status}</arg>
                        </arguments>
                        <msg level="INFO" timestamp="20130409 15:06:56.805">Argument types are:
&lt;type 'str'&gt;
&lt;type 'unicode'&gt;</msg>
                        <status endtime="20130409 15:06:56.805" starttime="20130409 15:06:56.804" status="PASS"/>
                    </kw>
                    <status endtime="20130409 15:06:56.805" starttime="20130409 15:06:56.802" status="PASS"/>
                </kw>
                <kw name="Name and status should be" timeout="" type="kw">
                    <doc/>
                    <arguments>
                        <arg>${tc.kws[2]}</arg>
                        <arg>resource.Simple UK</arg>
                        <arg>PASS</arg>
                    </arguments>
                    <kw name="BuiltIn.Should Be Equal" timeout="" type="kw">
                        <doc>Fails if the given objects are unequal.</doc>
                        <arguments>
                            <arg>${kw.name}</arg>
                            <arg>${name}</arg>
                        </arguments>
                        <msg level="INFO" timestamp="20130409 15:06:56.807">Argument types are:
&lt;type 'str'&gt;
&lt;type 'unicode'&gt;</msg>
                        <status endtime="20130409 15:06:56.807" starttime="20130409 15:06:56.806" status="PASS"/>
                    </kw>
                    <kw name="BuiltIn.Should Be Equal" timeout="" type="kw">
                        <doc>Fails if the given objects are unequal.</doc>
                        <arguments>
                            <arg>${kw.status}</arg>
                            <arg>${status}</arg>
                        </arguments>
                        <msg level="INFO" timestamp="20130409 15:06:56.807">Argument types are:
&lt;type 'str'&gt;
&lt;type 'unicode'&gt;</msg>
                        <status endtime="20130409 15:06:56.807" starttime="20130409 15:06:56.807" status="PASS"/>
                    </kw>
                    <status endtime="20130409 15:06:56.808" starttime="20130409 15:06:56.805" status="PASS"/>
                </kw>
                <kw name="Name and status should be" timeout="" type="kw">
                    <doc/>
                    <arguments>
                        <arg>${tc.kws[2].kws[0]}</arg>
                        <arg>BuiltIn.Log</arg>
                        <arg>NOT_RUN</arg>
                    </arguments>
                    <kw name="BuiltIn.Should Be Equal" timeout="" type="kw">
                        <doc>Fails if the given objects are unequal.</doc>
                        <arguments>
                            <arg>${kw.name}</arg>
                            <arg>${name}</arg>
                        </arguments>
                        <msg level="INFO" timestamp="20130409 15:06:56.809">Argument types are:
&lt;type 'str'&gt;
&lt;type 'unicode'&gt;</msg>
                        <status endtime="20130409 15:06:56.809" starttime="20130409 15:06:56.809" status="PASS"/>
                    </kw>
                    <kw name="BuiltIn.Should Be Equal" timeout="" type="kw">
                        <doc>Fails if the given objects are unequal.</doc>
                        <arguments>
                            <arg>${kw.status}</arg>
                            <arg>${status}</arg>
                        </arguments>
                        <msg level="INFO" timestamp="20130409 15:06:56.810">Argument types are:
&lt;type 'str'&gt;
&lt;type 'unicode'&gt;</msg>
                        <status endtime="20130409 15:06:56.810" starttime="20130409 15:06:56.810" status="PASS"/>
                    </kw>
                    <status endtime="20130409 15:06:56.810" starttime="20130409 15:06:56.808" status="PASS"/>
                </kw>
                <doc/>
                <tags>
                    <tag>jybot</tag>
                    <tag>pybot</tag>
                    <tag>regression</tag>
                </tags>
                <status critical="yes" endtime="20130409 15:06:56.811" starttime="20130409 15:06:56.793" status="PASS"/>
            </test>
            <test id="s1-s1-t2" name="Keywords with embedded arguments" timeout="">
                <kw name="${tc} = atest_resource.Check Test Case" timeout="" type="kw">
                    <doc/>
                    <arguments>
                        <arg>${TESTNAME}</arg>
                    </arguments>
                    <kw name="${test} = TestCheckerLibrary.Get Test From Suite" timeout="" type="kw">
                        <doc/>
                        <arguments>
                            <arg>${SUITE}</arg>
                            <arg>${name}</arg>
                        </arguments>
                        <msg level="INFO" timestamp="20130409 15:06:56.814">${test} = Keywords with embedded arguments</msg>
                        <status endtime="20130409 15:06:56.814" starttime="20130409 15:06:56.813" status="PASS"/>
                    </kw>
                    <kw name="TestCheckerLibrary.Check Test Status" timeout="" type="kw">
                        <doc>Verifies that test's status and message are as expected.</doc>
                        <arguments>
                            <arg>${test}</arg>
                            <arg>${status}</arg>
                            <arg>${message}</arg>
                        </arguments>
                        <status endtime="20130409 15:06:56.815" starttime="20130409 15:06:56.814" status="PASS"/>
                    </kw>
                    <msg level="INFO" timestamp="20130409 15:06:56.815">${tc} = Keywords with embedded arguments</msg>
                    <status endtime="20130409 15:06:56.815" starttime="20130409 15:06:56.812" status="PASS"/>
                </kw>
                <kw name="Should have correct number of keywords" timeout="" type="kw">
                    <doc/>
                    <arguments>
                        <arg>${tc}</arg>
                        <arg>2</arg>
                    </arguments>
                    <kw name="BuiltIn.Log" timeout="" type="kw">
                        <doc>Logs the given message with the given level.</doc>
                        <arguments>
                            <arg>${test or uk.kws}</arg>
                        </arguments>
                        <msg level="INFO" timestamp="20130409 15:06:56.816">[&lt;TestCheckerLibrary.NoSlotsKeyword object at 0x1050dbf50&gt;, &lt;TestCheckerLibrary.NoSlotsKeyword object at 0x1051330f0&gt;]</msg>
                        <status endtime="20130409 15:06:56.816" starttime="20130409 15:06:56.816" status="PASS"/>
                    </kw>
                    <kw name="BuiltIn.Should Be Equal As Integers" timeout="" type="kw">
                        <doc>Fails if objects are unequal after converting them to integers.</doc>
                        <arguments>
                            <arg>${test or uk.kw_count}</arg>
                            <arg>${exp number of kws}</arg>
                        </arguments>
                        <msg level="INFO" timestamp="20130409 15:06:56.817">Argument types are:
&lt;type 'int'&gt;
&lt;type 'unicode'&gt;</msg>
                        <status endtime="20130409 15:06:56.817" starttime="20130409 15:06:56.817" status="PASS"/>
                    </kw>
                    <status endtime="20130409 15:06:56.817" starttime="20130409 15:06:56.815" status="PASS"/>
                </kw>
                <kw name="Name and status should be" timeout="" type="kw">
                    <doc/>
                    <arguments>
                        <arg>${tc.kws[0]}</arg>
                        <arg>Embedded arguments here</arg>
                        <arg>PASS</arg>
                    </arguments>
                    <kw name="BuiltIn.Should Be Equal" timeout="" type="kw">
                        <doc>Fails if the given objects are unequal.</doc>
                        <arguments>
                            <arg>${kw.name}</arg>
                            <arg>${name}</arg>
                        </arguments>
                        <msg level="INFO" timestamp="20130409 15:06:56.819">Argument types are:
&lt;type 'str'&gt;
&lt;type 'unicode'&gt;</msg>
                        <status endtime="20130409 15:06:56.819" starttime="20130409 15:06:56.819" status="PASS"/>
                    </kw>
                    <kw name="BuiltIn.Should Be Equal" timeout="" type="kw">
                        <doc>Fails if the given objects are unequal.</doc>
                        <arguments>
                            <arg>${kw.status}</arg>
                            <arg>${status}</arg>
                        </arguments>
                        <msg level="INFO" timestamp="20130409 15:06:56.820">Argument types are:
&lt;type 'str'&gt;
&lt;type 'unicode'&gt;</msg>
                        <status endtime="20130409 15:06:56.820" starttime="20130409 15:06:56.819" status="PASS"/>
                    </kw>
                    <status endtime="20130409 15:06:56.820" starttime="20130409 15:06:56.817" status="PASS"/>
                </kw>
                <kw name="Name and status should be" timeout="" type="kw">
                    <doc/>
                    <arguments>
                        <arg>${tc.kws[0].kws[0]}</arg>
                        <arg>BuiltIn.No Operation</arg>
                        <arg>NOT_RUN</arg>
                    </arguments>
                    <kw name="BuiltIn.Should Be Equal" timeout="" type="kw">
                        <doc>Fails if the given objects are unequal.</doc>
                        <arguments>
                            <arg>${kw.name}</arg>
                            <arg>${name}</arg>
                        </arguments>
                        <msg level="INFO" timestamp="20130409 15:06:56.822">Argument types are:
&lt;type 'str'&gt;
&lt;type 'unicode'&gt;</msg>
                        <status endtime="20130409 15:06:56.822" starttime="20130409 15:06:56.821" status="PASS"/>
                    </kw>
                    <kw name="BuiltIn.Should Be Equal" timeout="" type="kw">
                        <doc>Fails if the given objects are unequal.</doc>
                        <arguments>
                            <arg>${kw.status}</arg>
                            <arg>${status}</arg>
                        </arguments>
                        <msg level="INFO" timestamp="20130409 15:06:56.823">Argument types are:
&lt;type 'str'&gt;
&lt;type 'unicode'&gt;</msg>
                        <status endtime="20130409 15:06:56.823" starttime="20130409 15:06:56.822" status="PASS"/>
                    </kw>
                    <status endtime="20130409 15:06:56.823" starttime="20130409 15:06:56.820" status="PASS"/>
                </kw>
                <kw name="Name and status should be" timeout="" type="kw">
                    <doc/>
                    <arguments>
                        <arg>${tc.kws[1]}</arg>
                        <arg>Embedded args rock here</arg>
                        <arg>PASS</arg>
                    </arguments>
                    <kw name="BuiltIn.Should Be Equal" timeout="" type="kw">
                        <doc>Fails if the given objects are unequal.</doc>
                        <arguments>
                            <arg>${kw.name}</arg>
                            <arg>${name}</arg>
                        </arguments>
                        <msg level="INFO" timestamp="20130409 15:06:56.825">Argument types are:
&lt;type 'str'&gt;
&lt;type 'unicode'&gt;</msg>
                        <status endtime="20130409 15:06:56.825" starttime="20130409 15:06:56.824" status="PASS"/>
                    </kw>
                    <kw name="BuiltIn.Should Be Equal" timeout="" type="kw">
                        <doc>Fails if the given objects are unequal.</doc>
                        <arguments>
                            <arg>${kw.status}</arg>
                            <arg>${status}</arg>
                        </arguments>
                        <msg level="INFO" timestamp="20130409 15:06:56.825">Argument types are:
&lt;type 'str'&gt;
&lt;type 'unicode'&gt;</msg>
                        <status endtime="20130409 15:06:56.825" starttime="20130409 15:06:56.825" status="PASS"/>
                    </kw>
                    <status endtime="20130409 15:06:56.826" starttime="20130409 15:06:56.823" status="PASS"/>
                </kw>
                <kw name="Name and status should be" timeout="" type="kw">
                    <doc/>
                    <arguments>
                        <arg>${tc.kws[1].kws[0]}</arg>
                        <arg>BuiltIn.No Operation</arg>
                        <arg>NOT_RUN</arg>
                    </arguments>
                    <kw name="BuiltIn.Should Be Equal" timeout="" type="kw">
                        <doc>Fails if the given objects are unequal.</doc>
                        <arguments>
                            <arg>${kw.name}</arg>
                            <arg>${name}</arg>
                        </arguments>
                        <msg level="INFO" timestamp="20130409 15:06:56.828">Argument types are:
&lt;type 'str'&gt;
&lt;type 'unicode'&gt;</msg>
                        <status endtime="20130409 15:06:56.828" starttime="20130409 15:06:56.827" status="PASS"/>
                    </kw>
                    <kw name="BuiltIn.Should Be Equal" timeout="" type="kw">
                        <doc>Fails if the given objects are unequal.</doc>
                        <arguments>
                            <arg>${kw.status}</arg>
                            <arg>${status}</arg>
                        </arguments>
                        <msg level="INFO" timestamp="20130409 15:06:56.829">Argument types are:
&lt;type 'str'&gt;
&lt;type 'unicode'&gt;</msg>
                        <status endtime="20130409 15:06:56.829" starttime="20130409 15:06:56.828" status="PASS"/>
                    </kw>
                    <status endtime="20130409 15:06:56.829" starttime="20130409 15:06:56.826" status="PASS"/>
                </kw>
                <doc/>
                <tags>
                    <tag>jybot</tag>
                    <tag>pybot</tag>
                    <tag>regression</tag>
                </tags>
                <status critical="yes" endtime="20130409 15:06:56.829" starttime="20130409 15:06:56.811" status="PASS"/>
            </test>
            <test id="s1-s1-t3" name="Keywords that would fail" timeout="">
                <kw name="${tc} = atest_resource.Check Test Case" timeout="" type="kw">
                    <doc/>
                    <arguments>
                        <arg>${TESTNAME}</arg>
                    </arguments>
                    <kw name="${test} = TestCheckerLibrary.Get Test From Suite" timeout="" type="kw">
                        <doc/>
                        <arguments>
                            <arg>${SUITE}</arg>
                            <arg>${name}</arg>
                        </arguments>
                        <msg level="INFO" timestamp="20130409 15:06:56.835">${test} = Keywords that would fail</msg>
                        <status endtime="20130409 15:06:56.835" starttime="20130409 15:06:56.834" status="PASS"/>
                    </kw>
                    <kw name="TestCheckerLibrary.Check Test Status" timeout="" type="kw">
                        <doc>Verifies that test's status and message are as expected.</doc>
                        <arguments>
                            <arg>${test}</arg>
                            <arg>${status}</arg>
                            <arg>${message}</arg>
                        </arguments>
                        <status endtime="20130409 15:06:56.836" starttime="20130409 15:06:56.836" status="PASS"/>
                    </kw>
                    <msg level="INFO" timestamp="20130409 15:06:56.837">${tc} = Keywords that would fail</msg>
                    <status endtime="20130409 15:06:56.837" starttime="20130409 15:06:56.832" status="PASS"/>
                </kw>
                <kw name="Should have correct number of keywords" timeout="" type="kw">
                    <doc/>
                    <arguments>
                        <arg>${tc}</arg>
                        <arg>3</arg>
                    </arguments>
                    <kw name="BuiltIn.Log" timeout="" type="kw">
                        <doc>Logs the given message with the given level.</doc>
                        <arguments>
                            <arg>${test or uk.kws}</arg>
                        </arguments>
                        <msg level="INFO" timestamp="20130409 15:06:56.840">[&lt;TestCheckerLibrary.NoSlotsKeyword object at 0x105133230&gt;, &lt;TestCheckerLibrary.NoSlotsKeyword object at 0x1051332d0&gt;, &lt;TestCheckerLibrary.NoSlotsKeyword object at 0x1051334b0&gt;]</msg>
                        <status endtime="20130409 15:06:56.840" starttime="20130409 15:06:56.839" status="PASS"/>
                    </kw>
                    <kw name="BuiltIn.Should Be Equal As Integers" timeout="" type="kw">
                        <doc>Fails if objects are unequal after converting them to integers.</doc>
                        <arguments>
                            <arg>${test or uk.kw_count}</arg>
                            <arg>${exp number of kws}</arg>
                        </arguments>
                        <msg level="INFO" timestamp="20130409 15:06:56.842">Argument types are:
&lt;type 'int'&gt;
&lt;type 'unicode'&gt;</msg>
                        <status endtime="20130409 15:06:56.842" starttime="20130409 15:06:56.841" status="PASS"/>
                    </kw>
                    <status endtime="20130409 15:06:56.842" starttime="20130409 15:06:56.837" status="PASS"/>
                </kw>
                <kw name="Name and status should be" timeout="" type="kw">
                    <doc/>
                    <arguments>
                        <arg>${tc.kws[0]}</arg>
                        <arg>BuiltIn.Fail</arg>
                        <arg>NOT_RUN</arg>
                    </arguments>
                    <kw name="BuiltIn.Should Be Equal" timeout="" type="kw">
                        <doc>Fails if the given objects are unequal.</doc>
                        <arguments>
                            <arg>${kw.name}</arg>
                            <arg>${name}</arg>
                        </arguments>
                        <msg level="INFO" timestamp="20130409 15:06:56.845">Argument types are:
&lt;type 'str'&gt;
&lt;type 'unicode'&gt;</msg>
                        <status endtime="20130409 15:06:56.845" starttime="20130409 15:06:56.844" status="PASS"/>
                    </kw>
                    <kw name="BuiltIn.Should Be Equal" timeout="" type="kw">
                        <doc>Fails if the given objects are unequal.</doc>
                        <arguments>
                            <arg>${kw.status}</arg>
                            <arg>${status}</arg>
                        </arguments>
                        <msg level="INFO" timestamp="20130409 15:06:56.846">Argument types are:
&lt;type 'str'&gt;
&lt;type 'unicode'&gt;</msg>
                        <status endtime="20130409 15:06:56.846" starttime="20130409 15:06:56.845" status="PASS"/>
                    </kw>
                    <status endtime="20130409 15:06:56.847" starttime="20130409 15:06:56.842" status="PASS"/>
                </kw>
                <kw name="Name and status should be" timeout="" type="kw">
                    <doc/>
                    <arguments>
                        <arg>${tc.kws[1]}</arg>
                        <arg>resource.Fail In UK</arg>
                        <arg>PASS</arg>
                    </arguments>
                    <kw name="BuiltIn.Should Be Equal" timeout="" type="kw">
                        <doc>Fails if the given objects are unequal.</doc>
                        <arguments>
                            <arg>${kw.name}</arg>
                            <arg>${name}</arg>
                        </arguments>
                        <msg level="INFO" timestamp="20130409 15:06:56.849">Argument types are:
&lt;type 'str'&gt;
&lt;type 'unicode'&gt;</msg>
                        <status endtime="20130409 15:06:56.849" starttime="20130409 15:06:56.848" status="PASS"/>
                    </kw>
                    <kw name="BuiltIn.Should Be Equal" timeout="" type="kw">
                        <doc>Fails if the given objects are unequal.</doc>
                        <arguments>
                            <arg>${kw.status}</arg>
                            <arg>${status}</arg>
                        </arguments>
                        <msg level="INFO" timestamp="20130409 15:06:56.850">Argument types are:
&lt;type 'str'&gt;
&lt;type 'unicode'&gt;</msg>
                        <status endtime="20130409 15:06:56.850" starttime="20130409 15:06:56.849" status="PASS"/>
                    </kw>
                    <status endtime="20130409 15:06:56.850" starttime="20130409 15:06:56.847" status="PASS"/>
                </kw>
                <kw name="Should have correct number of keywords" timeout="" type="kw">
                    <doc/>
                    <arguments>
                        <arg>${tc.kws[1]}</arg>
                        <arg>2</arg>
                    </arguments>
                    <kw name="BuiltIn.Log" timeout="" type="kw">
                        <doc>Logs the given message with the given level.</doc>
                        <arguments>
                            <arg>${test or uk.kws}</arg>
                        </arguments>
                        <msg level="INFO" timestamp="20130409 15:06:56.852">[BuiltIn.Fail, BuiltIn.Fail]</msg>
                        <status endtime="20130409 15:06:56.852" starttime="20130409 15:06:56.852" status="PASS"/>
                    </kw>
                    <kw name="BuiltIn.Should Be Equal As Integers" timeout="" type="kw">
                        <doc>Fails if objects are unequal after converting them to integers.</doc>
                        <arguments>
                            <arg>${test or uk.kw_count}</arg>
                            <arg>${exp number of kws}</arg>
                        </arguments>
                        <msg level="INFO" timestamp="20130409 15:06:56.853">Argument types are:
&lt;type 'int'&gt;
&lt;type 'unicode'&gt;</msg>
                        <status endtime="20130409 15:06:56.853" starttime="20130409 15:06:56.853" status="PASS"/>
                    </kw>
                    <status endtime="20130409 15:06:56.853" starttime="20130409 15:06:56.850" status="PASS"/>
                </kw>
                <kw name="Name and status should be" timeout="" type="kw">
                    <doc/>
                    <arguments>
                        <arg>${tc.kws[1].kws[0]}</arg>
                        <arg>BuiltIn.Fail</arg>
                        <arg>NOT_RUN</arg>
                    </arguments>
                    <kw name="BuiltIn.Should Be Equal" timeout="" type="kw">
                        <doc>Fails if the given objects are unequal.</doc>
                        <arguments>
                            <arg>${kw.name}</arg>
                            <arg>${name}</arg>
                        </arguments>
                        <msg level="INFO" timestamp="20130409 15:06:56.855">Argument types are:
&lt;type 'str'&gt;
&lt;type 'unicode'&gt;</msg>
                        <status endtime="20130409 15:06:56.855" starttime="20130409 15:06:56.855" status="PASS"/>
                    </kw>
                    <kw name="BuiltIn.Should Be Equal" timeout="" type="kw">
                        <doc>Fails if the given objects are unequal.</doc>
                        <arguments>
                            <arg>${kw.status}</arg>
                            <arg>${status}</arg>
                        </arguments>
                        <msg level="INFO" timestamp="20130409 15:06:56.856">Argument types are:
&lt;type 'str'&gt;
&lt;type 'unicode'&gt;</msg>
                        <status endtime="20130409 15:06:56.856" starttime="20130409 15:06:56.856" status="PASS"/>
                    </kw>
                    <status endtime="20130409 15:06:56.856" starttime="20130409 15:06:56.854" status="PASS"/>
                </kw>
                <kw name="Name and status should be" timeout="" type="kw">
                    <doc/>
                    <arguments>
                        <arg>${tc.kws[1].kws[1]}</arg>
                        <arg>BuiltIn.Fail</arg>
                        <arg>NOT_RUN</arg>
                    </arguments>
                    <kw name="BuiltIn.Should Be Equal" timeout="" type="kw">
                        <doc>Fails if the given objects are unequal.</doc>
                        <arguments>
                            <arg>${kw.name}</arg>
                            <arg>${name}</arg>
                        </arguments>
                        <msg level="INFO" timestamp="20130409 15:06:56.858">Argument types are:
&lt;type 'str'&gt;
&lt;type 'unicode'&gt;</msg>
                        <status endtime="20130409 15:06:56.858" starttime="20130409 15:06:56.858" status="PASS"/>
                    </kw>
                    <kw name="BuiltIn.Should Be Equal" timeout="" type="kw">
                        <doc>Fails if the given objects are unequal.</doc>
                        <arguments>
                            <arg>${kw.status}</arg>
                            <arg>${status}</arg>
                        </arguments>
                        <msg level="INFO" timestamp="20130409 15:06:56.859">Argument types are:
&lt;type 'str'&gt;
&lt;type 'unicode'&gt;</msg>
                        <status endtime="20130409 15:06:56.859" starttime="20130409 15:06:56.858" status="PASS"/>
                    </kw>
                    <status endtime="20130409 15:06:56.859" starttime="20130409 15:06:56.856" status="PASS"/>
                </kw>
                <doc/>
                <tags>
                    <tag>jybot</tag>
                    <tag>pybot</tag>
                    <tag>regression</tag>
                </tags>
                <status critical="yes" endtime="20130409 15:06:56.859" starttime="20130409 15:06:56.830" status="PASS"/>
            </test>
            <test id="s1-s1-t4" name="Scalar variables are not checked in keyword arguments" timeout="">
                <kw name="${tc} = atest_resource.Check Test Case" timeout="" type="kw">
                    <doc/>
                    <arguments>
                        <arg>${TESTNAME}</arg>
                    </arguments>
                    <kw name="${test} = TestCheckerLibrary.Get Test From Suite" timeout="" type="kw">
                        <doc/>
                        <arguments>
                            <arg>${SUITE}</arg>
                            <arg>${name}</arg>
                        </arguments>
                        <msg level="INFO" timestamp="20130409 15:06:56.863">${test} = Scalar variables are not checked in keyword arguments</msg>
                        <status endtime="20130409 15:06:56.863" starttime="20130409 15:06:56.862" status="PASS"/>
                    </kw>
                    <kw name="TestCheckerLibrary.Check Test Status" timeout="" type="kw">
                        <doc>Verifies that test's status and message are as expected.</doc>
                        <arguments>
                            <arg>${test}</arg>
                            <arg>${status}</arg>
                            <arg>${message}</arg>
                        </arguments>
                        <status endtime="20130409 15:06:56.864" starttime="20130409 15:06:56.863" status="PASS"/>
                    </kw>
                    <msg level="INFO" timestamp="20130409 15:06:56.864">${tc} = Scalar variables are not checked in keyword arguments</msg>
                    <status endtime="20130409 15:06:56.864" starttime="20130409 15:06:56.861" status="PASS"/>
                </kw>
                <kw name="Name and status should be" timeout="" type="kw">
                    <doc/>
                    <arguments>
                        <arg>${tc.kws[0]}</arg>
                        <arg>BuiltIn.Log</arg>
                        <arg>NOT_RUN</arg>
                    </arguments>
                    <kw name="BuiltIn.Should Be Equal" timeout="" type="kw">
                        <doc>Fails if the given objects are unequal.</doc>
                        <arguments>
                            <arg>${kw.name}</arg>
                            <arg>${name}</arg>
                        </arguments>
                        <msg level="INFO" timestamp="20130409 15:06:56.866">Argument types are:
&lt;type 'str'&gt;
&lt;type 'unicode'&gt;</msg>
                        <status endtime="20130409 15:06:56.866" starttime="20130409 15:06:56.866" status="PASS"/>
                    </kw>
                    <kw name="BuiltIn.Should Be Equal" timeout="" type="kw">
                        <doc>Fails if the given objects are unequal.</doc>
                        <arguments>
                            <arg>${kw.status}</arg>
                            <arg>${status}</arg>
                        </arguments>
                        <msg level="INFO" timestamp="20130409 15:06:56.867">Argument types are:
&lt;type 'str'&gt;
&lt;type 'unicode'&gt;</msg>
                        <status endtime="20130409 15:06:56.867" starttime="20130409 15:06:56.866" status="PASS"/>
                    </kw>
                    <status endtime="20130409 15:06:56.867" starttime="20130409 15:06:56.864" status="PASS"/>
                </kw>
                <kw name="Name and status should be" timeout="" type="kw">
                    <doc/>
                    <arguments>
                        <arg>${tc.kws[1]}</arg>
                        <arg>BuiltIn.Log</arg>
                        <arg>NOT_RUN</arg>
                    </arguments>
                    <kw name="BuiltIn.Should Be Equal" timeout="" type="kw">
                        <doc>Fails if the given objects are unequal.</doc>
                        <arguments>
                            <arg>${kw.name}</arg>
                            <arg>${name}</arg>
                        </arguments>
                        <msg level="INFO" timestamp="20130409 15:06:56.869">Argument types are:
&lt;type 'str'&gt;
&lt;type 'unicode'&gt;</msg>
                        <status endtime="20130409 15:06:56.869" starttime="20130409 15:06:56.869" status="PASS"/>
                    </kw>
                    <kw name="BuiltIn.Should Be Equal" timeout="" type="kw">
                        <doc>Fails if the given objects are unequal.</doc>
                        <arguments>
                            <arg>${kw.status}</arg>
                            <arg>${status}</arg>
                        </arguments>
                        <msg level="INFO" timestamp="20130409 15:06:56.870">Argument types are:
&lt;type 'str'&gt;
&lt;type 'unicode'&gt;</msg>
                        <status endtime="20130409 15:06:56.870" starttime="20130409 15:06:56.870" status="PASS"/>
                    </kw>
                    <status endtime="20130409 15:06:56.870" starttime="20130409 15:06:56.867" status="PASS"/>
                </kw>
                <doc>Variables are too often set somehow dynamically that we cannot expect them to always exist.</doc>
                <tags>
                    <tag>jybot</tag>
                    <tag>pybot</tag>
                    <tag>regression</tag>
                </tags>
                <status critical="yes" endtime="20130409 15:06:56.870" starttime="20130409 15:06:56.860" status="PASS"/>
            </test>
            <test id="s1-s1-t5" name="List variables are not checked in keyword arguments" timeout="">
                <kw name="atest_resource.Check Test Case" timeout="" type="kw">
                    <doc/>
                    <arguments>
                        <arg>${TESTNAME}</arg>
                    </arguments>
                    <kw name="${test} = TestCheckerLibrary.Get Test From Suite" timeout="" type="kw">
                        <doc/>
                        <arguments>
                            <arg>${SUITE}</arg>
                            <arg>${name}</arg>
                        </arguments>
                        <msg level="INFO" timestamp="20130409 15:06:56.874">${test} = List variables are not checked in keyword arguments</msg>
                        <status endtime="20130409 15:06:56.874" starttime="20130409 15:06:56.873" status="PASS"/>
                    </kw>
                    <kw name="TestCheckerLibrary.Check Test Status" timeout="" type="kw">
                        <doc>Verifies that test's status and message are as expected.</doc>
                        <arguments>
                            <arg>${test}</arg>
                            <arg>${status}</arg>
                            <arg>${message}</arg>
                        </arguments>
                        <status endtime="20130409 15:06:56.874" starttime="20130409 15:06:56.874" status="PASS"/>
                    </kw>
                    <status endtime="20130409 15:06:56.875" starttime="20130409 15:06:56.872" status="PASS"/>
                </kw>
                <doc>See the doc of the previous test</doc>
                <tags>
                    <tag>jybot</tag>
                    <tag>pybot</tag>
                    <tag>regression</tag>
                </tags>
                <status critical="yes" endtime="20130409 15:06:56.875" starttime="20130409 15:06:56.871" status="PASS"/>
            </test>
            <test id="s1-s1-t6" name="Variables are not checked in when arguments are embedded" timeout="">
                <kw name="${tc} = atest_resource.Check Test Case" timeout="" type="kw">
                    <doc/>
                    <arguments>
                        <arg>${TESTNAME}</arg>
                    </arguments>
                    <kw name="${test} = TestCheckerLibrary.Get Test From Suite" timeout="" type="kw">
                        <doc/>
                        <arguments>
                            <arg>${SUITE}</arg>
                            <arg>${name}</arg>
                        </arguments>
                        <msg level="INFO" timestamp="20130409 15:06:56.878">${test} = Variables are not checked in when arguments are embedded</msg>
                        <status endtime="20130409 15:06:56.878" starttime="20130409 15:06:56.877" status="PASS"/>
                    </kw>
                    <kw name="TestCheckerLibrary.Check Test Status" timeout="" type="kw">
                        <doc>Verifies that test's status and message are as expected.</doc>
                        <arguments>
                            <arg>${test}</arg>
                            <arg>${status}</arg>
                            <arg>${message}</arg>
                        </arguments>
                        <status endtime="20130409 15:06:56.879" starttime="20130409 15:06:56.879" status="PASS"/>
                    </kw>
                    <msg level="INFO" timestamp="20130409 15:06:56.879">${tc} = Variables are not checked in when arguments are embedded</msg>
                    <status endtime="20130409 15:06:56.879" starttime="20130409 15:06:56.876" status="PASS"/>
                </kw>
                <kw name="Name and status should be" timeout="" type="kw">
                    <doc/>
                    <arguments>
                        <arg>${tc.kws[0]}</arg>
                        <arg>Embedded \${TESTNAME} here</arg>
                        <arg>PASS</arg>
                    </arguments>
                    <kw name="BuiltIn.Should Be Equal" timeout="" type="kw">
                        <doc>Fails if the given objects are unequal.</doc>
                        <arguments>
                            <arg>${kw.name}</arg>
                            <arg>${name}</arg>
                        </arguments>
                        <msg level="INFO" timestamp="20130409 15:06:56.882">Argument types are:
&lt;type 'str'&gt;
&lt;type 'unicode'&gt;</msg>
                        <status endtime="20130409 15:06:56.882" starttime="20130409 15:06:56.881" status="PASS"/>
                    </kw>
                    <kw name="BuiltIn.Should Be Equal" timeout="" type="kw">
                        <doc>Fails if the given objects are unequal.</doc>
                        <arguments>
                            <arg>${kw.status}</arg>
                            <arg>${status}</arg>
                        </arguments>
                        <msg level="INFO" timestamp="20130409 15:06:56.883">Argument types are:
&lt;type 'str'&gt;
&lt;type 'unicode'&gt;</msg>
                        <status endtime="20130409 15:06:56.883" starttime="20130409 15:06:56.882" status="PASS"/>
                    </kw>
                    <status endtime="20130409 15:06:56.883" starttime="20130409 15:06:56.880" status="PASS"/>
                </kw>
                <kw name="Name and status should be" timeout="" type="kw">
                    <doc/>
                    <arguments>
                        <arg>${tc.kws[0].kws[0]}</arg>
                        <arg>BuiltIn.No Operation</arg>
                        <arg>NOT_RUN</arg>
                    </arguments>
                    <kw name="BuiltIn.Should Be Equal" timeout="" type="kw">
                        <doc>Fails if the given objects are unequal.</doc>
                        <arguments>
                            <arg>${kw.name}</arg>
                            <arg>${name}</arg>
                        </arguments>
                        <msg level="INFO" timestamp="20130409 15:06:56.886">Argument types are:
&lt;type 'str'&gt;
&lt;type 'unicode'&gt;</msg>
                        <status endtime="20130409 15:06:56.886" starttime="20130409 15:06:56.885" status="PASS"/>
                    </kw>
                    <kw name="BuiltIn.Should Be Equal" timeout="" type="kw">
                        <doc>Fails if the given objects are unequal.</doc>
                        <arguments>
                            <arg>${kw.status}</arg>
                            <arg>${status}</arg>
                        </arguments>
                        <msg level="INFO" timestamp="20130409 15:06:56.887">Argument types are:
&lt;type 'str'&gt;
&lt;type 'unicode'&gt;</msg>
                        <status endtime="20130409 15:06:56.887" starttime="20130409 15:06:56.886" status="PASS"/>
                    </kw>
                    <status endtime="20130409 15:06:56.887" starttime="20130409 15:06:56.883" status="PASS"/>
                </kw>
                <kw name="Name and status should be" timeout="" type="kw">
                    <doc/>
                    <arguments>
                        <arg>${tc.kws[1]}</arg>
                        <arg>Embedded \${nonex} here</arg>
                        <arg>PASS</arg>
                    </arguments>
                    <kw name="BuiltIn.Should Be Equal" timeout="" type="kw">
                        <doc>Fails if the given objects are unequal.</doc>
                        <arguments>
                            <arg>${kw.name}</arg>
                            <arg>${name}</arg>
                        </arguments>
                        <msg level="INFO" timestamp="20130409 15:06:56.889">Argument types are:
&lt;type 'str'&gt;
&lt;type 'unicode'&gt;</msg>
                        <status endtime="20130409 15:06:56.889" starttime="20130409 15:06:56.889" status="PASS"/>
                    </kw>
                    <kw name="BuiltIn.Should Be Equal" timeout="" type="kw">
                        <doc>Fails if the given objects are unequal.</doc>
                        <arguments>
                            <arg>${kw.status}</arg>
                            <arg>${status}</arg>
                        </arguments>
                        <msg level="INFO" timestamp="20130409 15:06:56.890">Argument types are:
&lt;type 'str'&gt;
&lt;type 'unicode'&gt;</msg>
                        <status endtime="20130409 15:06:56.890" starttime="20130409 15:06:56.889" status="PASS"/>
                    </kw>
                    <status endtime="20130409 15:06:56.890" starttime="20130409 15:06:56.887" status="PASS"/>
                </kw>
                <kw name="Name and status should be" timeout="" type="kw">
                    <doc/>
                    <arguments>
                        <arg>${tc.kws[1].kws[0]}</arg>
                        <arg>BuiltIn.No Operation</arg>
                        <arg>NOT_RUN</arg>
                    </arguments>
                    <kw name="BuiltIn.Should Be Equal" timeout="" type="kw">
                        <doc>Fails if the given objects are unequal.</doc>
                        <arguments>
                            <arg>${kw.name}</arg>
                            <arg>${name}</arg>
                        </arguments>
                        <msg level="INFO" timestamp="20130409 15:06:56.892">Argument types are:
&lt;type 'str'&gt;
&lt;type 'unicode'&gt;</msg>
                        <status endtime="20130409 15:06:56.892" starttime="20130409 15:06:56.892" status="PASS"/>
                    </kw>
                    <kw name="BuiltIn.Should Be Equal" timeout="" type="kw">
                        <doc>Fails if the given objects are unequal.</doc>
                        <arguments>
                            <arg>${kw.status}</arg>
                            <arg>${status}</arg>
                        </arguments>
                        <msg level="INFO" timestamp="20130409 15:06:56.893">Argument types are:
&lt;type 'str'&gt;
&lt;type 'unicode'&gt;</msg>
                        <status endtime="20130409 15:06:56.894" starttime="20130409 15:06:56.893" status="PASS"/>
                    </kw>
                    <status endtime="20130409 15:06:56.894" starttime="20130409 15:06:56.890" status="PASS"/>
                </kw>
                <doc>See the doc of the previous test</doc>
                <tags>
                    <tag>jybot</tag>
                    <tag>pybot</tag>
                    <tag>regression</tag>
                </tags>
                <status critical="yes" endtime="20130409 15:06:56.894" starttime="20130409 15:06:56.875" status="PASS"/>
            </test>
            <test id="s1-s1-t7" name="User keyword return value" timeout="">
                <kw name="atest_resource.Check Test Case" timeout="" type="kw">
                    <doc/>
                    <arguments>
                        <arg>${TESTNAME}</arg>
                    </arguments>
                    <kw name="${test} = TestCheckerLibrary.Get Test From Suite" timeout="" type="kw">
                        <doc/>
                        <arguments>
                            <arg>${SUITE}</arg>
                            <arg>${name}</arg>
                        </arguments>
                        <msg level="INFO" timestamp="20130409 15:06:56.898">${test} = User keyword return value</msg>
                        <status endtime="20130409 15:06:56.898" starttime="20130409 15:06:56.897" status="PASS"/>
                    </kw>
                    <kw name="TestCheckerLibrary.Check Test Status" timeout="" type="kw">
                        <doc>Verifies that test's status and message are as expected.</doc>
                        <arguments>
                            <arg>${test}</arg>
                            <arg>${status}</arg>
                            <arg>${message}</arg>
                        </arguments>
                        <status endtime="20130409 15:06:56.898" starttime="20130409 15:06:56.898" status="PASS"/>
                    </kw>
                    <status endtime="20130409 15:06:56.898" starttime="20130409 15:06:56.896" status="PASS"/>
                </kw>
                <doc/>
                <tags>
                    <tag>jybot</tag>
                    <tag>pybot</tag>
                    <tag>regression</tag>
                </tags>
                <status critical="yes" endtime="20130409 15:06:56.899" starttime="20130409 15:06:56.894" status="PASS"/>
            </test>
            <test id="s1-s1-t8" name="Test Setup and Teardown" timeout="">
                <kw name="${tc} = atest_resource.Check Test Case" timeout="" type="kw">
                    <doc/>
                    <arguments>
                        <arg>${TESTNAME}</arg>
                    </arguments>
                    <kw name="${test} = TestCheckerLibrary.Get Test From Suite" timeout="" type="kw">
                        <doc/>
                        <arguments>
                            <arg>${SUITE}</arg>
                            <arg>${name}</arg>
                        </arguments>
                        <msg level="INFO" timestamp="20130409 15:06:56.902">${test} = Test Setup And Teardown</msg>
                        <status endtime="20130409 15:06:56.902" starttime="20130409 15:06:56.901" status="PASS"/>
                    </kw>
                    <kw name="TestCheckerLibrary.Check Test Status" timeout="" type="kw">
                        <doc>Verifies that test's status and message are as expected.</doc>
                        <arguments>
                            <arg>${test}</arg>
                            <arg>${status}</arg>
                            <arg>${message}</arg>
                        </arguments>
                        <status endtime="20130409 15:06:56.903" starttime="20130409 15:06:56.903" status="PASS"/>
                    </kw>
                    <msg level="INFO" timestamp="20130409 15:06:56.903">${tc} = Test Setup And Teardown</msg>
                    <status endtime="20130409 15:06:56.903" starttime="20130409 15:06:56.900" status="PASS"/>
                </kw>
                <kw name="Should have correct number of keywords" timeout="" type="kw">
                    <doc/>
                    <arguments>
                        <arg>${tc}</arg>
                        <arg>1</arg>
                    </arguments>
                    <kw name="BuiltIn.Log" timeout="" type="kw">
                        <doc>Logs the given message with the given level.</doc>
                        <arguments>
                            <arg>${test or uk.kws}</arg>
                        </arguments>
                        <msg level="INFO" timestamp="20130409 15:06:56.905">[&lt;TestCheckerLibrary.NoSlotsKeyword object at 0x105133eb0&gt;]</msg>
                        <status endtime="20130409 15:06:56.905" starttime="20130409 15:06:56.905" status="PASS"/>
                    </kw>
                    <kw name="BuiltIn.Should Be Equal As Integers" timeout="" type="kw">
                        <doc>Fails if objects are unequal after converting them to integers.</doc>
                        <arguments>
                            <arg>${test or uk.kw_count}</arg>
                            <arg>${exp number of kws}</arg>
                        </arguments>
                        <msg level="INFO" timestamp="20130409 15:06:56.906">Argument types are:
&lt;type 'int'&gt;
&lt;type 'unicode'&gt;</msg>
                        <status endtime="20130409 15:06:56.906" starttime="20130409 15:06:56.905" status="PASS"/>
                    </kw>
                    <status endtime="20130409 15:06:56.906" starttime="20130409 15:06:56.904" status="PASS"/>
                </kw>
                <kw name="BuiltIn.Should Be Equal" timeout="" type="kw">
                    <doc>Fails if the given objects are unequal.</doc>
                    <arguments>
                        <arg>${tc.setup.name}</arg>
                        <arg>BuiltIn.Log</arg>
                    </arguments>
                    <msg level="INFO" timestamp="20130409 15:06:56.907">Argument types are:
&lt;type 'str'&gt;
&lt;type 'unicode'&gt;</msg>
                    <status endtime="20130409 15:06:56.907" starttime="20130409 15:06:56.907" status="PASS"/>
                </kw>
                <kw name="BuiltIn.Should Be Equal" timeout="" type="kw">
                    <doc>Fails if the given objects are unequal.</doc>
                    <arguments>
                        <arg>${tc.teardown.name}</arg>
                        <arg>Does not exist</arg>
                    </arguments>
                    <msg level="INFO" timestamp="20130409 15:06:56.908">Argument types are:
&lt;type 'str'&gt;
&lt;type 'unicode'&gt;</msg>
                    <status endtime="20130409 15:06:56.908" starttime="20130409 15:06:56.908" status="PASS"/>
                </kw>
                <doc/>
                <tags>
                    <tag>jybot</tag>
                    <tag>pybot</tag>
                    <tag>regression</tag>
                </tags>
                <status critical="yes" endtime="20130409 15:06:56.908" starttime="20130409 15:06:56.899" status="PASS"/>
            </test>
            <test id="s1-s1-t9" name="Keyword Teardown" timeout="">
                <kw name="${tc} = atest_resource.Check Test Case" timeout="" type="kw">
                    <doc/>
                    <arguments>
                        <arg>${TESTNAME}</arg>
                    </arguments>
                    <kw name="${test} = TestCheckerLibrary.Get Test From Suite" timeout="" type="kw">
                        <doc/>
                        <arguments>
                            <arg>${SUITE}</arg>
                            <arg>${name}</arg>
                        </arguments>
                        <msg level="INFO" timestamp="20130409 15:06:56.911">${test} = Keyword Teardown</msg>
                        <status endtime="20130409 15:06:56.911" starttime="20130409 15:06:56.911" status="PASS"/>
                    </kw>
                    <kw name="TestCheckerLibrary.Check Test Status" timeout="" type="kw">
                        <doc>Verifies that test's status and message are as expected.</doc>
                        <arguments>
                            <arg>${test}</arg>
                            <arg>${status}</arg>
                            <arg>${message}</arg>
                        </arguments>
                        <status endtime="20130409 15:06:56.912" starttime="20130409 15:06:56.912" status="PASS"/>
                    </kw>
                    <msg level="INFO" timestamp="20130409 15:06:56.912">${tc} = Keyword Teardown</msg>
                    <status endtime="20130409 15:06:56.912" starttime="20130409 15:06:56.910" status="PASS"/>
                </kw>
                <kw name="Should have correct number of keywords" timeout="" type="kw">
                    <doc/>
                    <arguments>
                        <arg>${tc}</arg>
                        <arg>1</arg>
                    </arguments>
                    <kw name="BuiltIn.Log" timeout="" type="kw">
                        <doc>Logs the given message with the given level.</doc>
                        <arguments>
                            <arg>${test or uk.kws}</arg>
                        </arguments>
                        <msg level="INFO" timestamp="20130409 15:06:56.914">[&lt;TestCheckerLibrary.NoSlotsKeyword object at 0x1051360f0&gt;]</msg>
                        <status endtime="20130409 15:06:56.914" starttime="20130409 15:06:56.913" status="PASS"/>
                    </kw>
                    <kw name="BuiltIn.Should Be Equal As Integers" timeout="" type="kw">
                        <doc>Fails if objects are unequal after converting them to integers.</doc>
                        <arguments>
                            <arg>${test or uk.kw_count}</arg>
                            <arg>${exp number of kws}</arg>
                        </arguments>
                        <msg level="INFO" timestamp="20130409 15:06:56.915">Argument types are:
&lt;type 'int'&gt;
&lt;type 'unicode'&gt;</msg>
                        <status endtime="20130409 15:06:56.915" starttime="20130409 15:06:56.914" status="PASS"/>
                    </kw>
                    <status endtime="20130409 15:06:56.915" starttime="20130409 15:06:56.913" status="PASS"/>
                </kw>
                <kw name="BuiltIn.Should Be Equal" timeout="" type="kw">
                    <doc>Fails if the given objects are unequal.</doc>
                    <arguments>
                        <arg>${tc.kws[0].kws[1].name}</arg>
                        <arg>Does not exist</arg>
                    </arguments>
                    <msg level="INFO" timestamp="20130409 15:06:56.916">Argument types are:
&lt;type 'str'&gt;
&lt;type 'unicode'&gt;</msg>
                    <status endtime="20130409 15:06:56.916" starttime="20130409 15:06:56.915" status="PASS"/>
                </kw>
                <doc/>
                <tags>
                    <tag>jybot</tag>
                    <tag>pybot</tag>
                    <tag>regression</tag>
                </tags>
                <status critical="yes" endtime="20130409 15:06:56.916" starttime="20130409 15:06:56.909" status="PASS"/>
            </test>
            <test id="s1-s1-t10" name="For Loops" timeout="">
                <kw name="${tc} = atest_resource.Check Test Case" timeout="" type="kw">
                    <doc/>
                    <arguments>
                        <arg>${TESTNAME}</arg>
                    </arguments>
                    <kw name="${test} = TestCheckerLibrary.Get Test From Suite" timeout="" type="kw">
                        <doc/>
                        <arguments>
                            <arg>${SUITE}</arg>
                            <arg>${name}</arg>
                        </arguments>
                        <msg level="INFO" timestamp="20130409 15:06:56.919">${test} = For Loops</msg>
                        <status endtime="20130409 15:06:56.919" starttime="20130409 15:06:56.918" status="PASS"/>
                    </kw>
                    <kw name="TestCheckerLibrary.Check Test Status" timeout="" type="kw">
                        <doc>Verifies that test's status and message are as expected.</doc>
                        <arguments>
                            <arg>${test}</arg>
                            <arg>${status}</arg>
                            <arg>${message}</arg>
                        </arguments>
                        <status endtime="20130409 15:06:56.920" starttime="20130409 15:06:56.920" status="PASS"/>
                    </kw>
                    <msg level="INFO" timestamp="20130409 15:06:56.920">${tc} = For Loops</msg>
                    <status endtime="20130409 15:06:56.920" starttime="20130409 15:06:56.917" status="PASS"/>
                </kw>
                <kw name="Should have correct number of keywords" timeout="" type="kw">
                    <doc/>
                    <arguments>
                        <arg>${tc}</arg>
                        <arg>3</arg>
                    </arguments>
                    <kw name="BuiltIn.Log" timeout="" type="kw">
                        <doc>Logs the given message with the given level.</doc>
                        <arguments>
                            <arg>${test or uk.kws}</arg>
                        </arguments>
                        <msg level="INFO" timestamp="20130409 15:06:56.922">[&lt;TestCheckerLibrary.NoSlotsKeyword object at 0x1051362d0&gt;, &lt;TestCheckerLibrary.NoSlotsKeyword object at 0x1051365f0&gt;, &lt;TestCheckerLibrary.NoSlotsKeyword object at 0x1051369b0&gt;]</msg>
                        <status endtime="20130409 15:06:56.922" starttime="20130409 15:06:56.922" status="PASS"/>
                    </kw>
                    <kw name="BuiltIn.Should Be Equal As Integers" timeout="" type="kw">
                        <doc>Fails if objects are unequal after converting them to integers.</doc>
                        <arguments>
                            <arg>${test or uk.kw_count}</arg>
                            <arg>${exp number of kws}</arg>
                        </arguments>
                        <msg level="INFO" timestamp="20130409 15:06:56.923">Argument types are:
&lt;type 'int'&gt;
&lt;type 'unicode'&gt;</msg>
                        <status endtime="20130409 15:06:56.924" starttime="20130409 15:06:56.923" status="PASS"/>
                    </kw>
                    <status endtime="20130409 15:06:56.924" starttime="20130409 15:06:56.921" status="PASS"/>
                </kw>
                <kw name="Should have correct number of keywords" timeout="" type="kw">
                    <doc/>
                    <arguments>
                        <arg>${tc.kws[0]}</arg>
                        <arg>1</arg>
                    </arguments>
                    <kw name="BuiltIn.Log" timeout="" type="kw">
                        <doc>Logs the given message with the given level.</doc>
                        <arguments>
                            <arg>${test or uk.kws}</arg>
                        </arguments>
                        <msg level="INFO" timestamp="20130409 15:06:56.926">[${i} = ${i}]</msg>
                        <status endtime="20130409 15:06:56.926" starttime="20130409 15:06:56.925" status="PASS"/>
                    </kw>
                    <kw name="BuiltIn.Should Be Equal As Integers" timeout="" type="kw">
                        <doc>Fails if objects are unequal after converting them to integers.</doc>
                        <arguments>
                            <arg>${test or uk.kw_count}</arg>
                            <arg>${exp number of kws}</arg>
                        </arguments>
                        <msg level="INFO" timestamp="20130409 15:06:56.927">Argument types are:
&lt;type 'int'&gt;
&lt;type 'unicode'&gt;</msg>
                        <status endtime="20130409 15:06:56.927" starttime="20130409 15:06:56.927" status="PASS"/>
                    </kw>
                    <status endtime="20130409 15:06:56.928" starttime="20130409 15:06:56.924" status="PASS"/>
                </kw>
                <kw name="Should have correct number of keywords" timeout="" type="kw">
                    <doc/>
                    <arguments>
                        <arg>${tc.kws[0].kws[0]}</arg>
                        <arg>2</arg>
                    </arguments>
                    <kw name="BuiltIn.Log" timeout="" type="kw">
                        <doc>Logs the given message with the given level.</doc>
                        <arguments>
                            <arg>${test or uk.kws}</arg>
                        </arguments>
                        <msg level="INFO" timestamp="20130409 15:06:56.930">[BuiltIn.Log, resource.Simple UK]</msg>
                        <status endtime="20130409 15:06:56.930" starttime="20130409 15:06:56.929" status="PASS"/>
                    </kw>
                    <kw name="BuiltIn.Should Be Equal As Integers" timeout="" type="kw">
                        <doc>Fails if objects are unequal after converting them to integers.</doc>
                        <arguments>
                            <arg>${test or uk.kw_count}</arg>
                            <arg>${exp number of kws}</arg>
                        </arguments>
                        <msg level="INFO" timestamp="20130409 15:06:56.930">Argument types are:
&lt;type 'int'&gt;
&lt;type 'unicode'&gt;</msg>
                        <status endtime="20130409 15:06:56.931" starttime="20130409 15:06:56.930" status="PASS"/>
                    </kw>
                    <status endtime="20130409 15:06:56.931" starttime="20130409 15:06:56.928" status="PASS"/>
                </kw>
                <kw name="Should have correct number of keywords" timeout="" type="kw">
                    <doc/>
                    <arguments>
                        <arg>${tc.kws[1]}</arg>
                        <arg>3</arg>
                    </arguments>
                    <kw name="BuiltIn.Log" timeout="" type="kw">
                        <doc>Logs the given message with the given level.</doc>
                        <arguments>
                            <arg>${test or uk.kws}</arg>
                        </arguments>
                        <msg level="INFO" timestamp="20130409 15:06:56.933">[@{list} = BuiltIn.Create List, ${i} | ${j} | ${k} IN [ @{list} ], BuiltIn.Fail]</msg>
                        <status endtime="20130409 15:06:56.933" starttime="20130409 15:06:56.932" status="PASS"/>
                    </kw>
                    <kw name="BuiltIn.Should Be Equal As Integers" timeout="" type="kw">
                        <doc>Fails if objects are unequal after converting them to integers.</doc>
                        <arguments>
                            <arg>${test or uk.kw_count}</arg>
                            <arg>${exp number of kws}</arg>
                        </arguments>
                        <msg level="INFO" timestamp="20130409 15:06:56.934">Argument types are:
&lt;type 'int'&gt;
&lt;type 'unicode'&gt;</msg>
                        <status endtime="20130409 15:06:56.934" starttime="20130409 15:06:56.933" status="PASS"/>
                    </kw>
                    <status endtime="20130409 15:06:56.934" starttime="20130409 15:06:56.931" status="PASS"/>
                </kw>
                <kw name="Should have correct number of keywords" timeout="" type="kw">
                    <doc/>
                    <arguments>
                        <arg>${tc.kws[1].kws[1]}</arg>
                        <arg>1</arg>
                    </arguments>
                    <kw name="BuiltIn.Log" timeout="" type="kw">
                        <doc>Logs the given message with the given level.</doc>
                        <arguments>
                            <arg>${test or uk.kws}</arg>
                        </arguments>
                        <msg level="INFO" timestamp="20130409 15:06:56.936">[${i} = ${i}, ${j} = ${j}, ${k} = ${k}]</msg>
                        <status endtime="20130409 15:06:56.936" starttime="20130409 15:06:56.935" status="PASS"/>
                    </kw>
                    <kw name="BuiltIn.Should Be Equal As Integers" timeout="" type="kw">
                        <doc>Fails if objects are unequal after converting them to integers.</doc>
                        <arguments>
                            <arg>${test or uk.kw_count}</arg>
                            <arg>${exp number of kws}</arg>
                        </arguments>
                        <msg level="INFO" timestamp="20130409 15:06:56.937">Argument types are:
&lt;type 'int'&gt;
&lt;type 'unicode'&gt;</msg>
                        <status endtime="20130409 15:06:56.937" starttime="20130409 15:06:56.936" status="PASS"/>
                    </kw>
                    <status endtime="20130409 15:06:56.937" starttime="20130409 15:06:56.934" status="PASS"/>
                </kw>
                <doc/>
                <tags>
                    <tag>jybot</tag>
                    <tag>pybot</tag>
                    <tag>regression</tag>
                </tags>
                <status critical="yes" endtime="20130409 15:06:56.937" starttime="20130409 15:06:56.916" status="PASS"/>
            </test>
            <test id="s1-s1-t11" name="Non-existing keyword name" timeout="">
                <kw name="atest_resource.Check Test Case" timeout="" type="kw">
                    <doc/>
                    <arguments>
                        <arg>${TESTNAME}</arg>
                    </arguments>
                    <kw name="${test} = TestCheckerLibrary.Get Test From Suite" timeout="" type="kw">
                        <doc/>
                        <arguments>
                            <arg>${SUITE}</arg>
                            <arg>${name}</arg>
                        </arguments>
                        <msg level="INFO" timestamp="20130409 15:06:56.940">${test} = Non-existing keyword name</msg>
                        <status endtime="20130409 15:06:56.940" starttime="20130409 15:06:56.939" status="PASS"/>
                    </kw>
                    <kw name="TestCheckerLibrary.Check Test Status" timeout="" type="kw">
                        <doc>Verifies that test's status and message are as expected.</doc>
                        <arguments>
                            <arg>${test}</arg>
                            <arg>${status}</arg>
                            <arg>${message}</arg>
                        </arguments>
                        <status endtime="20130409 15:06:56.941" starttime="20130409 15:06:56.940" status="PASS"/>
                    </kw>
                    <status endtime="20130409 15:06:56.941" starttime="20130409 15:06:56.938" status="PASS"/>
                </kw>
                <doc/>
                <tags>
                    <tag>jybot</tag>
                    <tag>pybot</tag>
                    <tag>regression</tag>
                </tags>
                <status critical="yes" endtime="20130409 15:06:56.941" starttime="20130409 15:06:56.937" status="PASS"/>
            </test>
            <test id="s1-s1-t12" name="Too few arguments" timeout="">
                <kw name="atest_resource.Check Test Case" timeout="" type="kw">
                    <doc/>
                    <arguments>
                        <arg>${TESTNAME}</arg>
                    </arguments>
                    <kw name="${test} = TestCheckerLibrary.Get Test From Suite" timeout="" type="kw">
                        <doc/>
                        <arguments>
                            <arg>${SUITE}</arg>
                            <arg>${name}</arg>
                        </arguments>
                        <msg level="INFO" timestamp="20130409 15:06:56.944">${test} = Too few arguments</msg>
                        <status endtime="20130409 15:06:56.944" starttime="20130409 15:06:56.944" status="PASS"/>
                    </kw>
                    <kw name="TestCheckerLibrary.Check Test Status" timeout="" type="kw">
                        <doc>Verifies that test's status and message are as expected.</doc>
                        <arguments>
                            <arg>${test}</arg>
                            <arg>${status}</arg>
                            <arg>${message}</arg>
                        </arguments>
                        <status endtime="20130409 15:06:56.945" starttime="20130409 15:06:56.945" status="PASS"/>
                    </kw>
                    <status endtime="20130409 15:06:56.945" starttime="20130409 15:06:56.943" status="PASS"/>
                </kw>
                <doc/>
                <tags>
                    <tag>jybot</tag>
                    <tag>pybot</tag>
                    <tag>regression</tag>
                </tags>
                <status critical="yes" endtime="20130409 15:06:56.945" starttime="20130409 15:06:56.942" status="PASS"/>
            </test>
            <test id="s1-s1-t13" name="Too few arguments for UK" timeout="">
                <kw name="atest_resource.Check Test Case" timeout="" type="kw">
                    <doc/>
                    <arguments>
                        <arg>${TESTNAME}</arg>
                    </arguments>
                    <kw name="${test} = TestCheckerLibrary.Get Test From Suite" timeout="" type="kw">
                        <doc/>
                        <arguments>
                            <arg>${SUITE}</arg>
                            <arg>${name}</arg>
                        </arguments>
                        <msg level="INFO" timestamp="20130409 15:06:56.949">${test} = Too few arguments for UK</msg>
                        <status endtime="20130409 15:06:56.949" starttime="20130409 15:06:56.948" status="PASS"/>
                    </kw>
                    <kw name="TestCheckerLibrary.Check Test Status" timeout="" type="kw">
                        <doc>Verifies that test's status and message are as expected.</doc>
                        <arguments>
                            <arg>${test}</arg>
                            <arg>${status}</arg>
                            <arg>${message}</arg>
                        </arguments>
                        <status endtime="20130409 15:06:56.949" starttime="20130409 15:06:56.949" status="PASS"/>
                    </kw>
                    <status endtime="20130409 15:06:56.949" starttime="20130409 15:06:56.947" status="PASS"/>
                </kw>
                <doc/>
                <tags>
                    <tag>jybot</tag>
                    <tag>pybot</tag>
                    <tag>regression</tag>
                </tags>
                <status critical="yes" endtime="20130409 15:06:56.950" starttime="20130409 15:06:56.946" status="PASS"/>
            </test>
            <test id="s1-s1-t14" name="Too many arguments" timeout="">
                <kw name="atest_resource.Check Test Case" timeout="" type="kw">
                    <doc/>
                    <arguments>
                        <arg>${TESTNAME}</arg>
                    </arguments>
                    <kw name="${test} = TestCheckerLibrary.Get Test From Suite" timeout="" type="kw">
                        <doc/>
                        <arguments>
                            <arg>${SUITE}</arg>
                            <arg>${name}</arg>
                        </arguments>
                        <msg level="INFO" timestamp="20130409 15:06:56.953">${test} = Too many arguments</msg>
                        <status endtime="20130409 15:06:56.953" starttime="20130409 15:06:56.952" status="PASS"/>
                    </kw>
                    <kw name="TestCheckerLibrary.Check Test Status" timeout="" type="kw">
                        <doc>Verifies that test's status and message are as expected.</doc>
                        <arguments>
                            <arg>${test}</arg>
                            <arg>${status}</arg>
                            <arg>${message}</arg>
                        </arguments>
                        <status endtime="20130409 15:06:56.953" starttime="20130409 15:06:56.953" status="PASS"/>
                    </kw>
                    <status endtime="20130409 15:06:56.953" starttime="20130409 15:06:56.951" status="PASS"/>
                </kw>
                <doc/>
                <tags>
                    <tag>jybot</tag>
                    <tag>pybot</tag>
                    <tag>regression</tag>
                </tags>
                <status critical="yes" endtime="20130409 15:06:56.954" starttime="20130409 15:06:56.950" status="PASS"/>
            </test>
            <test id="s1-s1-t15" name="Invalid syntax in UK" timeout="">
                <kw name="atest_resource.Check Test Case" timeout="" type="kw">
                    <doc/>
                    <arguments>
                        <arg>${TESTNAME}</arg>
                    </arguments>
                    <kw name="${test} = TestCheckerLibrary.Get Test From Suite" timeout="" type="kw">
                        <doc/>
                        <arguments>
                            <arg>${SUITE}</arg>
                            <arg>${name}</arg>
                        </arguments>
                        <msg level="INFO" timestamp="20130409 15:06:56.957">${test} = Invalid syntax in UK</msg>
                        <status endtime="20130409 15:06:56.957" starttime="20130409 15:06:56.956" status="PASS"/>
                    </kw>
                    <kw name="TestCheckerLibrary.Check Test Status" timeout="" type="kw">
                        <doc>Verifies that test's status and message are as expected.</doc>
                        <arguments>
                            <arg>${test}</arg>
                            <arg>${status}</arg>
                            <arg>${message}</arg>
                        </arguments>
                        <status endtime="20130409 15:06:56.958" starttime="20130409 15:06:56.957" status="PASS"/>
                    </kw>
                    <status endtime="20130409 15:06:56.958" starttime="20130409 15:06:56.955" status="PASS"/>
                </kw>
                <doc/>
                <tags>
                    <tag>jybot</tag>
                    <tag>pybot</tag>
                    <tag>regression</tag>
                </tags>
                <status critical="yes" endtime="20130409 15:06:56.958" starttime="20130409 15:06:56.954" status="PASS"/>
            </test>
            <test id="s1-s1-t16" name="Multiple Failures" timeout="">
                <kw name="atest_resource.Check Test Case" timeout="" type="kw">
                    <doc/>
                    <arguments>
                        <arg>${TESTNAME}</arg>
                    </arguments>
                    <kw name="${test} = TestCheckerLibrary.Get Test From Suite" timeout="" type="kw">
                        <doc/>
                        <arguments>
                            <arg>${SUITE}</arg>
                            <arg>${name}</arg>
                        </arguments>
                        <msg level="INFO" timestamp="20130409 15:06:56.961">${test} = Multiple Failures</msg>
                        <status endtime="20130409 15:06:56.961" starttime="20130409 15:06:56.961" status="PASS"/>
                    </kw>
                    <kw name="TestCheckerLibrary.Check Test Status" timeout="" type="kw">
                        <doc>Verifies that test's status and message are as expected.</doc>
                        <arguments>
                            <arg>${test}</arg>
                            <arg>${status}</arg>
                            <arg>${message}</arg>
                        </arguments>
                        <status endtime="20130409 15:06:56.962" starttime="20130409 15:06:56.962" status="PASS"/>
                    </kw>
                    <status endtime="20130409 15:06:56.962" starttime="20130409 15:06:56.959" status="PASS"/>
                </kw>
                <doc/>
                <tags>
                    <tag>jybot</tag>
                    <tag>pybot</tag>
                    <tag>regression</tag>
                </tags>
                <status critical="yes" endtime="20130409 15:06:56.963" starttime="20130409 15:06:56.958" status="PASS"/>
            </test>
            <test id="s1-s1-t17" name="Invalid imports" timeout="">
                <kw name="atest_resource.Check Stderr Contains" timeout="" type="kw">
                    <doc/>
                    <arguments>
                        <arg>Importing test library 'DoesNotExist' failed: ImportError: No module named DoesNotExist</arg>
                    </arguments>
                    <kw name="atest_resource.Check File Contains" timeout="" type="kw">
                        <doc/>
                        <arguments>
                            <arg>${STDERR_FILE}</arg>
                            <arg>@{expected}</arg>
                        </arguments>
                        <kw name="${exp} = BuiltIn.Catenate" timeout="" type="kw">
                            <doc>Catenates the given items together and returns the resulted string.</doc>
                            <arguments>
                                <arg>@{expected}</arg>
                            </arguments>
                            <msg level="INFO" timestamp="20130409 15:06:56.967">${exp} = Importing test library 'DoesNotExist' failed: ImportError: No module named DoesNotExist</msg>
                            <status endtime="20130409 15:06:56.967" starttime="20130409 15:06:56.967" status="PASS"/>
                        </kw>
                        <kw name="${file} = atest_resource.Get Output File" timeout="" type="kw">
                            <doc>Output encoding avare helper</doc>
                            <arguments>
                                <arg>${path}</arg>
                            </arguments>
                            <kw name="${encoding} = BuiltIn.Evaluate" timeout="" type="kw">
                                <doc>Evaluates the given expression in Python and returns the results.</doc>
                                <arguments>
                                    <arg>__import__('robot').utils.encoding.OUTPUT_ENCODING</arg>
                                </arguments>
                                <msg level="INFO" timestamp="20130409 15:06:56.969">${encoding} = UTF-8</msg>
                                <status endtime="20130409 15:06:56.969" starttime="20130409 15:06:56.969" status="PASS"/>
                            </kw>
                            <kw name="${encoding} = BuiltIn.Set Variable If" timeout="" type="kw">
                                <doc>Sets variable based on the given condition.</doc>
                                <arguments>
                                    <arg>r'${path}' in [r'${STDERR FILE}',r'${STDOUT FILE}']</arg>
                                    <arg>${encoding}</arg>
                                    <arg>UTF-8</arg>
                                </arguments>
                                <msg level="INFO" timestamp="20130409 15:06:56.970">${encoding} = UTF-8</msg>
                                <status endtime="20130409 15:06:56.970" starttime="20130409 15:06:56.970" status="PASS"/>
                            </kw>
                            <kw name="${file} = OperatingSystem.Log File" timeout="" type="kw">
                                <doc>Wrapper for `Get File` that also logs the returned file.</doc>
                                <arguments>
                                    <arg>${path}</arg>
                                    <arg>${encoding}</arg>
                                </arguments>
                                <msg html="yes" level="INFO" timestamp="20130409 15:06:56.971">Getting file '&lt;a href=&quot;file:///Users/asyrjasalo/eficode/robot/robotframework/atest/results/python/output/dryrun_more_tests/stderr.txt&quot;&gt;/Users/asyrjasalo/eficode/robot/robotframework/atest/results/python/output/dryrun_more_tests/stderr.txt&lt;/a&gt;'</msg>
                                <msg level="INFO" timestamp="20130409 15:06:56.971">[ ERROR ] Error in file '/Users/asyrjasalo/eficode/robot/robotframework/atest/testdata/cli/dryrun/dryrun.txt' in table 'Settings': Importing test library 'DoesNotExist' failed: ImportError: No module named DoesNotExist
Traceback (most recent call last):
  None
PYTHONPATH:
  /Users/asyrjasalo/eficode/robot/robotframework/atest/testresources/testlibs
  /Users/asyrjasalo/eficode/robot/robotframework/atest/testresources/listeners
  /Users/asyrjasalo/eficode/robot/robotframework/src/robot/libraries
  /Users/asyrjasalo/eficode/robot/robotframework/src
  /usr/local/Cellar/python/2.7.4/Frameworks/Python.framework/Versions/2.7/lib/python2.7/site-packages/pip-1.3.1-py2.7.egg
  /usr/local/Cellar/python/2.7.4/Frameworks/Python.framework/Versions/2.7/lib/python2.7/site-packages/distribute-0.6.36-py2.7.egg
  /usr/local/lib/python2.7/site-packages/pip-1.3.1-py2.7.egg
  /usr/local/lib/python2.7/site-packages/distribute-0.6.36-py2.7.egg
  /usr/local/Cellar/python/2.7.4/Frameworks/Python.framework/Versions/2.7/lib/python27.zip
  /usr/local/Cellar/python/2.7.4/Frameworks/Python.framework/Versions/2.7/lib/python2.7
  /usr/local/Cellar/python/2.7.4/Frameworks/Python.framework/Versions/2.7/lib/python2.7/plat-darwin
  /usr/local/Cellar/python/2.7.4/Frameworks/Python.framework/Versions/2.7/lib/python2.7/plat-mac
  /usr/local/Cellar/python/2.7.4/Frameworks/Python.framework/Versions/2.7/lib/python2.7/plat-mac/lib-scriptpackages
  /usr/local/Cellar/python/2.7.4/Frameworks/Python.framework/Versions/2.7/lib/python2.7/lib-tk
  /usr/local/Cellar/python/2.7.4/Frameworks/Python.framework/Versions/2.7/lib/python2.7/lib-old
  /usr/local/Cellar/python/2.7.4/Frameworks/Python.framework/Versions/2.7/lib/python2.7/lib-dynload
  /Library/Python/2.7/site-packages
  /usr/local/lib/wxPython-unicode-2.8.12.1/lib/python2.7
  /usr/local/lib/python2.7/site-packages
  .
  /Users/asyrjasalo/eficode/robot/robotframework/atest
[ ERROR ] Error in file '/Users/asyrjasalo/eficode/robot/robotframework/atest/testdata/cli/dryrun/dryrun.txt' in table 'Settings': Variable file 'wrong_path.py' does not exist.
[ ERROR ] Error in file '/Users/asyrjasalo/eficode/robot/robotframework/atest/testdata/cli/dryrun/dryrun.txt' in table 'Settings': Resource file 'NonExisting.tsv' does not exist.</msg>
                                <msg level="INFO" timestamp="20130409 15:06:56.972">${file} = [ ERROR ] Error in file '/Users/asyrjasalo/eficode/robot/robotframework/atest/testdata/cli/dryrun/dryrun.txt' in table 'Settings': Importing test library 'DoesNotExist' failed: ImportError: No module ...</msg>
                                <status endtime="20130409 15:06:56.972" starttime="20130409 15:06:56.971" status="PASS"/>
                            </kw>
                            <msg level="INFO" timestamp="20130409 15:06:56.972">${file} = [ ERROR ] Error in file '/Users/asyrjasalo/eficode/robot/robotframework/atest/testdata/cli/dryrun/dryrun.txt' in table 'Settings': Importing test library 'DoesNotExist' failed: ImportError: No module ...</msg>
                            <status endtime="20130409 15:06:56.972" starttime="20130409 15:06:56.967" status="PASS"/>
                        </kw>
                        <kw name="BuiltIn.Should Contain" timeout="" type="kw">
                            <doc>Fails if `item1` does not contain `item2` one or more times.</doc>
                            <arguments>
                                <arg>${file}</arg>
                                <arg>${exp}</arg>
                            </arguments>
                            <status endtime="20130409 15:06:56.973" starttime="20130409 15:06:56.972" status="PASS"/>
                        </kw>
                        <status endtime="20130409 15:06:56.973" starttime="20130409 15:06:56.965" status="PASS"/>
                    </kw>
                    <status endtime="20130409 15:06:56.973" starttime="20130409 15:06:56.964" status="PASS"/>
                </kw>
                <kw name="atest_resource.Check Stderr Contains" timeout="" type="kw">
                    <doc/>
                    <arguments>
                        <arg>Variable file 'wrong_path.py' does not exist</arg>
                    </arguments>
                    <kw name="atest_resource.Check File Contains" timeout="" type="kw">
                        <doc/>
                        <arguments>
                            <arg>${STDERR_FILE}</arg>
                            <arg>@{expected}</arg>
                        </arguments>
                        <kw name="${exp} = BuiltIn.Catenate" timeout="" type="kw">
                            <doc>Catenates the given items together and returns the resulted string.</doc>
                            <arguments>
                                <arg>@{expected}</arg>
                            </arguments>
                            <msg level="INFO" timestamp="20130409 15:06:56.975">${exp} = Variable file 'wrong_path.py' does not exist</msg>
                            <status endtime="20130409 15:06:56.975" starttime="20130409 15:06:56.975" status="PASS"/>
                        </kw>
                        <kw name="${file} = atest_resource.Get Output File" timeout="" type="kw">
                            <doc>Output encoding avare helper</doc>
                            <arguments>
                                <arg>${path}</arg>
                            </arguments>
                            <kw name="${encoding} = BuiltIn.Evaluate" timeout="" type="kw">
                                <doc>Evaluates the given expression in Python and returns the results.</doc>
                                <arguments>
                                    <arg>__import__('robot').utils.encoding.OUTPUT_ENCODING</arg>
                                </arguments>
                                <msg level="INFO" timestamp="20130409 15:06:56.978">${encoding} = UTF-8</msg>
                                <status endtime="20130409 15:06:56.977" starttime="20130409 15:06:56.977" status="PASS"/>
                            </kw>
                            <kw name="${encoding} = BuiltIn.Set Variable If" timeout="" type="kw">
                                <doc>Sets variable based on the given condition.</doc>
                                <arguments>
                                    <arg>r'${path}' in [r'${STDERR FILE}',r'${STDOUT FILE}']</arg>
                                    <arg>${encoding}</arg>
                                    <arg>UTF-8</arg>
                                </arguments>
                                <msg level="INFO" timestamp="20130409 15:06:56.979">${encoding} = UTF-8</msg>
                                <status endtime="20130409 15:06:56.979" starttime="20130409 15:06:56.978" status="PASS"/>
                            </kw>
                            <kw name="${file} = OperatingSystem.Log File" timeout="" type="kw">
                                <doc>Wrapper for `Get File` that also logs the returned file.</doc>
                                <arguments>
                                    <arg>${path}</arg>
                                    <arg>${encoding}</arg>
                                </arguments>
                                <msg html="yes" level="INFO" timestamp="20130409 15:06:56.979">Getting file '&lt;a href=&quot;file:///Users/asyrjasalo/eficode/robot/robotframework/atest/results/python/output/dryrun_more_tests/stderr.txt&quot;&gt;/Users/asyrjasalo/eficode/robot/robotframework/atest/results/python/output/dryrun_more_tests/stderr.txt&lt;/a&gt;'</msg>
                                <msg level="INFO" timestamp="20130409 15:06:56.979">[ ERROR ] Error in file '/Users/asyrjasalo/eficode/robot/robotframework/atest/testdata/cli/dryrun/dryrun.txt' in table 'Settings': Importing test library 'DoesNotExist' failed: ImportError: No module named DoesNotExist
Traceback (most recent call last):
  None
PYTHONPATH:
  /Users/asyrjasalo/eficode/robot/robotframework/atest/testresources/testlibs
  /Users/asyrjasalo/eficode/robot/robotframework/atest/testresources/listeners
  /Users/asyrjasalo/eficode/robot/robotframework/src/robot/libraries
  /Users/asyrjasalo/eficode/robot/robotframework/src
  /usr/local/Cellar/python/2.7.4/Frameworks/Python.framework/Versions/2.7/lib/python2.7/site-packages/pip-1.3.1-py2.7.egg
  /usr/local/Cellar/python/2.7.4/Frameworks/Python.framework/Versions/2.7/lib/python2.7/site-packages/distribute-0.6.36-py2.7.egg
  /usr/local/lib/python2.7/site-packages/pip-1.3.1-py2.7.egg
  /usr/local/lib/python2.7/site-packages/distribute-0.6.36-py2.7.egg
  /usr/local/Cellar/python/2.7.4/Frameworks/Python.framework/Versions/2.7/lib/python27.zip
  /usr/local/Cellar/python/2.7.4/Frameworks/Python.framework/Versions/2.7/lib/python2.7
  /usr/local/Cellar/python/2.7.4/Frameworks/Python.framework/Versions/2.7/lib/python2.7/plat-darwin
  /usr/local/Cellar/python/2.7.4/Frameworks/Python.framework/Versions/2.7/lib/python2.7/plat-mac
  /usr/local/Cellar/python/2.7.4/Frameworks/Python.framework/Versions/2.7/lib/python2.7/plat-mac/lib-scriptpackages
  /usr/local/Cellar/python/2.7.4/Frameworks/Python.framework/Versions/2.7/lib/python2.7/lib-tk
  /usr/local/Cellar/python/2.7.4/Frameworks/Python.framework/Versions/2.7/lib/python2.7/lib-old
  /usr/local/Cellar/python/2.7.4/Frameworks/Python.framework/Versions/2.7/lib/python2.7/lib-dynload
  /Library/Python/2.7/site-packages
  /usr/local/lib/wxPython-unicode-2.8.12.1/lib/python2.7
  /usr/local/lib/python2.7/site-packages
  .
  /Users/asyrjasalo/eficode/robot/robotframework/atest
[ ERROR ] Error in file '/Users/asyrjasalo/eficode/robot/robotframework/atest/testdata/cli/dryrun/dryrun.txt' in table 'Settings': Variable file 'wrong_path.py' does not exist.
[ ERROR ] Error in file '/Users/asyrjasalo/eficode/robot/robotframework/atest/testdata/cli/dryrun/dryrun.txt' in table 'Settings': Resource file 'NonExisting.tsv' does not exist.</msg>
                                <msg level="INFO" timestamp="20130409 15:06:56.980">${file} = [ ERROR ] Error in file '/Users/asyrjasalo/eficode/robot/robotframework/atest/testdata/cli/dryrun/dryrun.txt' in table 'Settings': Importing test library 'DoesNotExist' failed: ImportError: No module ...</msg>
                                <status endtime="20130409 15:06:56.980" starttime="20130409 15:06:56.979" status="PASS"/>
                            </kw>
                            <msg level="INFO" timestamp="20130409 15:06:56.980">${file} = [ ERROR ] Error in file '/Users/asyrjasalo/eficode/robot/robotframework/atest/testdata/cli/dryrun/dryrun.txt' in table 'Settings': Importing test library 'DoesNotExist' failed: ImportError: No module ...</msg>
                            <status endtime="20130409 15:06:56.980" starttime="20130409 15:06:56.976" status="PASS"/>
                        </kw>
                        <kw name="BuiltIn.Should Contain" timeout="" type="kw">
                            <doc>Fails if `item1` does not contain `item2` one or more times.</doc>
                            <arguments>
                                <arg>${file}</arg>
                                <arg>${exp}</arg>
                            </arguments>
                            <status endtime="20130409 15:06:56.981" starttime="20130409 15:06:56.980" status="PASS"/>
                        </kw>
                        <status endtime="20130409 15:06:56.981" starttime="20130409 15:06:56.974" status="PASS"/>
                    </kw>
                    <status endtime="20130409 15:06:56.981" starttime="20130409 15:06:56.973" status="PASS"/>
                </kw>
                <kw name="atest_resource.Check Stderr Contains" timeout="" type="kw">
                    <doc/>
                    <arguments>
                        <arg>Resource file 'NonExisting.tsv' does not exist</arg>
                    </arguments>
                    <kw name="atest_resource.Check File Contains" timeout="" type="kw">
                        <doc/>
                        <arguments>
                            <arg>${STDERR_FILE}</arg>
                            <arg>@{expected}</arg>
                        </arguments>
                        <kw name="${exp} = BuiltIn.Catenate" timeout="" type="kw">
                            <doc>Catenates the given items together and returns the resulted string.</doc>
                            <arguments>
                                <arg>@{expected}</arg>
                            </arguments>
                            <msg level="INFO" timestamp="20130409 15:06:56.984">${exp} = Resource file 'NonExisting.tsv' does not exist</msg>
                            <status endtime="20130409 15:06:56.984" starttime="20130409 15:06:56.983" status="PASS"/>
                        </kw>
                        <kw name="${file} = atest_resource.Get Output File" timeout="" type="kw">
                            <doc>Output encoding avare helper</doc>
                            <arguments>
                                <arg>${path}</arg>
                            </arguments>
                            <kw name="${encoding} = BuiltIn.Evaluate" timeout="" type="kw">
                                <doc>Evaluates the given expression in Python and returns the results.</doc>
                                <arguments>
                                    <arg>__import__('robot').utils.encoding.OUTPUT_ENCODING</arg>
                                </arguments>
                                <msg level="INFO" timestamp="20130409 15:06:56.985">${encoding} = UTF-8</msg>
                                <status endtime="20130409 15:06:56.985" starttime="20130409 15:06:56.985" status="PASS"/>
                            </kw>
                            <kw name="${encoding} = BuiltIn.Set Variable If" timeout="" type="kw">
                                <doc>Sets variable based on the given condition.</doc>
                                <arguments>
                                    <arg>r'${path}' in [r'${STDERR FILE}',r'${STDOUT FILE}']</arg>
                                    <arg>${encoding}</arg>
                                    <arg>UTF-8</arg>
                                </arguments>
                                <msg level="INFO" timestamp="20130409 15:06:56.986">${encoding} = UTF-8</msg>
                                <status endtime="20130409 15:06:56.986" starttime="20130409 15:06:56.985" status="PASS"/>
                            </kw>
                            <kw name="${file} = OperatingSystem.Log File" timeout="" type="kw">
                                <doc>Wrapper for `Get File` that also logs the returned file.</doc>
                                <arguments>
                                    <arg>${path}</arg>
                                    <arg>${encoding}</arg>
                                </arguments>
                                <msg html="yes" level="INFO" timestamp="20130409 15:06:56.987">Getting file '&lt;a href=&quot;file:///Users/asyrjasalo/eficode/robot/robotframework/atest/results/python/output/dryrun_more_tests/stderr.txt&quot;&gt;/Users/asyrjasalo/eficode/robot/robotframework/atest/results/python/output/dryrun_more_tests/stderr.txt&lt;/a&gt;'</msg>
                                <msg level="INFO" timestamp="20130409 15:06:56.987">[ ERROR ] Error in file '/Users/asyrjasalo/eficode/robot/robotframework/atest/testdata/cli/dryrun/dryrun.txt' in table 'Settings': Importing test library 'DoesNotExist' failed: ImportError: No module named DoesNotExist
Traceback (most recent call last):
  None
PYTHONPATH:
  /Users/asyrjasalo/eficode/robot/robotframework/atest/testresources/testlibs
  /Users/asyrjasalo/eficode/robot/robotframework/atest/testresources/listeners
  /Users/asyrjasalo/eficode/robot/robotframework/src/robot/libraries
  /Users/asyrjasalo/eficode/robot/robotframework/src
  /usr/local/Cellar/python/2.7.4/Frameworks/Python.framework/Versions/2.7/lib/python2.7/site-packages/pip-1.3.1-py2.7.egg
  /usr/local/Cellar/python/2.7.4/Frameworks/Python.framework/Versions/2.7/lib/python2.7/site-packages/distribute-0.6.36-py2.7.egg
  /usr/local/lib/python2.7/site-packages/pip-1.3.1-py2.7.egg
  /usr/local/lib/python2.7/site-packages/distribute-0.6.36-py2.7.egg
  /usr/local/Cellar/python/2.7.4/Frameworks/Python.framework/Versions/2.7/lib/python27.zip
  /usr/local/Cellar/python/2.7.4/Frameworks/Python.framework/Versions/2.7/lib/python2.7
  /usr/local/Cellar/python/2.7.4/Frameworks/Python.framework/Versions/2.7/lib/python2.7/plat-darwin
  /usr/local/Cellar/python/2.7.4/Frameworks/Python.framework/Versions/2.7/lib/python2.7/plat-mac
  /usr/local/Cellar/python/2.7.4/Frameworks/Python.framework/Versions/2.7/lib/python2.7/plat-mac/lib-scriptpackages
  /usr/local/Cellar/python/2.7.4/Frameworks/Python.framework/Versions/2.7/lib/python2.7/lib-tk
  /usr/local/Cellar/python/2.7.4/Frameworks/Python.framework/Versions/2.7/lib/python2.7/lib-old
  /usr/local/Cellar/python/2.7.4/Frameworks/Python.framework/Versions/2.7/lib/python2.7/lib-dynload
  /Library/Python/2.7/site-packages
  /usr/local/lib/wxPython-unicode-2.8.12.1/lib/python2.7
  /usr/local/lib/python2.7/site-packages
  .
  /Users/asyrjasalo/eficode/robot/robotframework/atest
[ ERROR ] Error in file '/Users/asyrjasalo/eficode/robot/robotframework/atest/testdata/cli/dryrun/dryrun.txt' in table 'Settings': Variable file 'wrong_path.py' does not exist.
[ ERROR ] Error in file '/Users/asyrjasalo/eficode/robot/robotframework/atest/testdata/cli/dryrun/dryrun.txt' in table 'Settings': Resource file 'NonExisting.tsv' does not exist.</msg>
                                <msg level="INFO" timestamp="20130409 15:06:56.987">${file} = [ ERROR ] Error in file '/Users/asyrjasalo/eficode/robot/robotframework/atest/testdata/cli/dryrun/dryrun.txt' in table 'Settings': Importing test library 'DoesNotExist' failed: ImportError: No module ...</msg>
                                <status endtime="20130409 15:06:56.987" starttime="20130409 15:06:56.986" status="PASS"/>
                            </kw>
                            <msg level="INFO" timestamp="20130409 15:06:56.987">${file} = [ ERROR ] Error in file '/Users/asyrjasalo/eficode/robot/robotframework/atest/testdata/cli/dryrun/dryrun.txt' in table 'Settings': Importing test library 'DoesNotExist' failed: ImportError: No module ...</msg>
                            <status endtime="20130409 15:06:56.987" starttime="20130409 15:06:56.984" status="PASS"/>
                        </kw>
                        <kw name="BuiltIn.Should Contain" timeout="" type="kw">
                            <doc>Fails if `item1` does not contain `item2` one or more times.</doc>
                            <arguments>
                                <arg>${file}</arg>
                                <arg>${exp}</arg>
                            </arguments>
                            <status endtime="20130409 15:06:56.988" starttime="20130409 15:06:56.987" status="PASS"/>
                        </kw>
                        <status endtime="20130409 15:06:56.988" starttime="20130409 15:06:56.982" status="PASS"/>
                    </kw>
                    <status endtime="20130409 15:06:56.988" starttime="20130409 15:06:56.981" status="PASS"/>
                </kw>
                <doc/>
                <tags>
                    <tag>jybot</tag>
                    <tag>pybot</tag>
                    <tag>regression</tag>
                </tags>
                <status critical="yes" endtime="20130409 15:06:56.988" starttime="20130409 15:06:56.963" status="PASS"/>
            </test>
            <test id="s1-s1-t18" name="Test from other suite" timeout="">
                <kw name="atest_resource.Check Test Case" timeout="" type="kw">
                    <doc/>
                    <arguments>
                        <arg>Some Other Test</arg>
                    </arguments>
                    <kw name="${test} = TestCheckerLibrary.Get Test From Suite" timeout="" type="kw">
                        <doc/>
                        <arguments>
                            <arg>${SUITE}</arg>
                            <arg>${name}</arg>
                        </arguments>
                        <msg level="INFO" timestamp="20130409 15:06:56.991">${test} = Some other test</msg>
                        <status endtime="20130409 15:06:56.991" starttime="20130409 15:06:56.991" status="PASS"/>
                    </kw>
                    <kw name="TestCheckerLibrary.Check Test Status" timeout="" type="kw">
                        <doc>Verifies that test's status and message are as expected.</doc>
                        <arguments>
                            <arg>${test}</arg>
                            <arg>${status}</arg>
                            <arg>${message}</arg>
                        </arguments>
                        <status endtime="20130409 15:06:56.992" starttime="20130409 15:06:56.991" status="PASS"/>
                    </kw>
                    <status endtime="20130409 15:06:56.992" starttime="20130409 15:06:56.989" status="PASS"/>
                </kw>
                <doc/>
                <tags>
                    <tag>jybot</tag>
                    <tag>pybot</tag>
                    <tag>regression</tag>
                </tags>
                <status critical="yes" endtime="20130409 15:06:56.992" starttime="20130409 15:06:56.988" status="PASS"/>
            </test>
            <test id="s1-s1-t19" name="Import Library Keyword is Called" timeout="">
                <kw name="atest_resource.Check Test Case" timeout="" type="kw">
                    <doc/>
                    <arguments>
                        <arg>${TESTNAME}</arg>
                    </arguments>
                    <kw name="${test} = TestCheckerLibrary.Get Test From Suite" timeout="" type="kw">
                        <doc/>
                        <arguments>
                            <arg>${SUITE}</arg>
                            <arg>${name}</arg>
                        </arguments>
                        <msg level="INFO" timestamp="20130409 15:06:56.996">${test} = Import Library Keyword is Called</msg>
                        <status endtime="20130409 15:06:56.996" starttime="20130409 15:06:56.995" status="PASS"/>
                    </kw>
                    <kw name="TestCheckerLibrary.Check Test Status" timeout="" type="kw">
                        <doc>Verifies that test's status and message are as expected.</doc>
                        <arguments>
                            <arg>${test}</arg>
                            <arg>${status}</arg>
                            <arg>${message}</arg>
                        </arguments>
                        <status endtime="20130409 15:06:56.997" starttime="20130409 15:06:56.996" status="PASS"/>
                    </kw>
                    <status endtime="20130409 15:06:56.997" starttime="20130409 15:06:56.994" status="PASS"/>
                </kw>
                <kw name="atest_resource.Check Syslog Contains" timeout="" type="kw">
                    <doc/>
                    <arguments>
                        <arg>Imported library 'String' with arguments [ ]</arg>
                    </arguments>
                    <kw name="atest_resource.Check File Contains" timeout="" type="kw">
                        <doc/>
                        <arguments>
                            <arg>${SYSLOG_FILE}</arg>
                            <arg>@{expected}</arg>
                        </arguments>
                        <kw name="${exp} = BuiltIn.Catenate" timeout="" type="kw">
                            <doc>Catenates the given items together and returns the resulted string.</doc>
                            <arguments>
                                <arg>@{expected}</arg>
                            </arguments>
                            <msg level="INFO" timestamp="20130409 15:06:57.000">${exp} = Imported library 'String' with arguments [ ]</msg>
                            <status endtime="20130409 15:06:56.999" starttime="20130409 15:06:56.999" status="PASS"/>
                        </kw>
                        <kw name="${file} = atest_resource.Get Output File" timeout="" type="kw">
                            <doc>Output encoding avare helper</doc>
                            <arguments>
                                <arg>${path}</arg>
                            </arguments>
                            <kw name="${encoding} = BuiltIn.Evaluate" timeout="" type="kw">
                                <doc>Evaluates the given expression in Python and returns the results.</doc>
                                <arguments>
                                    <arg>__import__('robot').utils.encoding.OUTPUT_ENCODING</arg>
                                </arguments>
                                <msg level="INFO" timestamp="20130409 15:06:57.002">${encoding} = UTF-8</msg>
                                <status endtime="20130409 15:06:57.001" starttime="20130409 15:06:57.001" status="PASS"/>
                            </kw>
                            <kw name="${encoding} = BuiltIn.Set Variable If" timeout="" type="kw">
                                <doc>Sets variable based on the given condition.</doc>
                                <arguments>
                                    <arg>r'${path}' in [r'${STDERR FILE}',r'${STDOUT FILE}']</arg>
                                    <arg>${encoding}</arg>
                                    <arg>UTF-8</arg>
                                </arguments>
                                <msg level="INFO" timestamp="20130409 15:06:57.003">${encoding} = UTF-8</msg>
                                <status endtime="20130409 15:06:57.003" starttime="20130409 15:06:57.002" status="PASS"/>
                            </kw>
                            <kw name="${file} = OperatingSystem.Log File" timeout="" type="kw">
                                <doc>Wrapper for `Get File` that also logs the returned file.</doc>
                                <arguments>
                                    <arg>${path}</arg>
                                    <arg>${encoding}</arg>
                                </arguments>
                                <msg html="yes" level="INFO" timestamp="20130409 15:06:57.004">Getting file '&lt;a href=&quot;file:///Users/asyrjasalo/eficode/robot/robotframework/atest/results/python/output/dryrun_more_tests/syslog.txt&quot;&gt;/Users/asyrjasalo/eficode/robot/robotframework/atest/results/python/output/dryrun_more_tests/syslog.txt&lt;/a&gt;'</msg>
                                <msg level="INFO" timestamp="20130409 15:06:57.005">20130409 15:06:56.618 | INFO  | Robot Framework trunk 20130226 (Python 2.7.4 on darwin)
20130409 15:06:56.619 | INFO  | Arguments: /Users/asyrjasalo/eficode/robot/robotframework/atest/testdata/cli/dryrun/dryrun.txt,/Users/asyrjasalo/eficode/robot/robotframework/atest/testdata/cli/dryrun/more_tests.txt
20130409 15:06:56.619 | INFO  | Settings:
Critical: None
DebugFile: NONE
Doc: None
Exclude: []
Include: []
Listeners: []
Log: NONE
LogLevel: INFO
LogTitle: None
Metadata: []
MonitorColors: OFF
MonitorMarkers: OFF
MonitorWidth: 78
Name: None
NoStatusRC: False
NonCritical: None
Output: /Users/asyrjasalo/eficode/robot/robotframework/atest/results/python/output/dryrun_more_tests/output.xml
OutputDir: /Users/asyrjasalo/eficode/robot/robotframework/atest/results/python/output/dryrun_more_tests
RemoveKeywords: []
Report: NONE
ReportBackground: ('#99FF66', '#99FF66', '#FF3333')
ReportTitle: None
RunEmptySuite: False
RunMode: [u'dryrun']
SetTag: []
SplitLog: False
StdErr: None
StdOut: None
SuiteNames: []
SuiteStatLevel: -1
TagDoc: []
TagStatCombine: []
TagStatExclude: []
TagStatInclude: []
TagStatLink: []
TestNames: []
TimestampOutputs: False
VariableFiles: []
Variables: [u'interpreter:python']
VisibleLogLevel: INFO
WarnOnSkipped: False
XUnitFile: NONE
20130409 15:06:56.621 | INFO  | Parsing file '/Users/asyrjasalo/eficode/robot/robotframework/atest/testdata/cli/dryrun/dryrun.txt'.
20130409 15:06:56.631 | INFO  | Parsing file '/Users/asyrjasalo/eficode/robot/robotframework/atest/testdata/cli/dryrun/more_tests.txt'.
20130409 15:06:56.635 | INFO  | No debug file
20130409 15:06:56.635 | INFO  | Initializing namespace for test suite 'Dryrun &amp; More Tests'
20130409 15:06:56.637 | INFO  | Imported test library class 'BuiltIn' from '/Users/asyrjasalo/eficode/robot/robotframework/src/robot/libraries/BuiltIn.pyc'.
20130409 15:06:56.654 | INFO  | Imported library 'BuiltIn' with arguments [ ] (version trunk 20130226, class type, global scope, 88 keywords)
20130409 15:06:56.655 | INFO  | Imported test library class 'DeprecatedBuiltIn' from '/Users/asyrjasalo/eficode/robot/robotframework/src/robot/libraries/DeprecatedBuiltIn.pyc'.
20130409 15:06:56.663 | INFO  | Imported library 'DeprecatedBuiltIn' with arguments [ ] (version &lt;unknown&gt;, class type, global scope, 52 keywords)
20130409 15:06:56.663 | INFO  | Imported test library class 'Reserved' from '/Users/asyrjasalo/eficode/robot/robotframework/src/robot/libraries/Reserved.pyc'.
20130409 15:06:56.665 | INFO  | Imported library 'Reserved' with arguments [ ] (version &lt;unknown&gt;, dynamic type, global scope, 10 keywords)
20130409 15:06:56.665 | INFO  | Imported test library module 'Easter' from '/Users/asyrjasalo/eficode/robot/robotframework/src/robot/libraries/Easter.pyc'.
20130409 15:06:56.665 | INFO  | Imported library 'Easter' with arguments [ ] (version &lt;unknown&gt;, module type, global scope, 1 keywords)
20130409 15:06:56.666 | INFO  | Started test suite 'Dryrun &amp; More Tests'
20130409 15:06:56.666 | INFO  | Initializing namespace for test suite 'Dryrun &amp; More Tests.Dryrun'
20130409 15:06:56.667 | INFO  | Imported test library class 'BuiltIn' from '/Users/asyrjasalo/eficode/robot/robotframework/src/robot/libraries/BuiltIn.pyc'.
20130409 15:06:56.667 | INFO  | Found test library 'BuiltIn' with arguments [ ] from cache
20130409 15:06:56.667 | INFO  | Imported test library class 'DeprecatedBuiltIn' from '/Users/asyrjasalo/eficode/robot/robotframework/src/robot/libraries/DeprecatedBuiltIn.pyc'.
20130409 15:06:56.667 | INFO  | Found test library 'DeprecatedBuiltIn' with arguments [ ] from cache
20130409 15:06:56.667 | INFO  | Imported test library class 'Reserved' from '/Users/asyrjasalo/eficode/robot/robotframework/src/robot/libraries/Reserved.pyc'.
20130409 15:06:56.668 | INFO  | Found test library 'Reserved' with arguments [ ] from cache
20130409 15:06:56.668 | INFO  | Imported test library module 'Easter' from '/Users/asyrjasalo/eficode/robot/robotframework/src/robot/libraries/Easter.pyc'.
20130409 15:06:56.668 | INFO  | Found test library 'Easter' with arguments [ ] from cache
20130409 15:06:56.673 | INFO  | Imported test library class 'OperatingSystem' from '/Users/asyrjasalo/eficode/robot/robotframework/src/robot/libraries/OperatingSystem.pyc'.
20130409 15:06:56.682 | INFO  | Imported library 'OperatingSystem' with arguments [ ] (version trunk 20130226, class type, global scope, 57 keywords)
20130409 15:06:56.683 | INFO  | Imported test library class 'DeprecatedOperatingSystem' from '/Users/asyrjasalo/eficode/robot/robotframework/src/robot/libraries/DeprecatedOperatingSystem.pyc'.
20130409 15:06:56.686 | INFO  | Imported library 'DeprecatedOperatingSystem' with arguments [ ] (version &lt;unknown&gt;, class type, global scope, 24 keywords)
20130409 15:06:56.687 | INFO  | Importing variable file '/Users/asyrjasalo/eficode/robot/robotframework/atest/testdata/cli/dryrun/vars.py' with args []
20130409 15:06:56.687 | INFO  | Imported variable file module 'vars' from '/Users/asyrjasalo/eficode/robot/robotframework/atest/testdata/cli/dryrun/vars.py'.
20130409 15:06:56.687 | INFO  | Parsing file '/Users/asyrjasalo/eficode/robot/robotframework/atest/testdata/cli/dryrun/resource.txt'.
20130409 15:06:56.689 | INFO  | Imported resource file '/Users/asyrjasalo/eficode/robot/robotframework/atest/testdata/cli/dryrun/resource.txt' (4 keywords).
20130409 15:06:56.693 | ERROR | Error in file '/Users/asyrjasalo/eficode/robot/robotframework/atest/testdata/cli/dryrun/dryrun.txt' in table 'Settings': Importing test library 'DoesNotExist' failed: ImportError: No module named DoesNotExist
Traceback (most recent call last):
  None
PYTHONPATH:
  /Users/asyrjasalo/eficode/robot/robotframework/atest/testresources/testlibs
  /Users/asyrjasalo/eficode/robot/robotframework/atest/testresources/listeners
  /Users/asyrjasalo/eficode/robot/robotframework/src/robot/libraries
  /Users/asyrjasalo/eficode/robot/robotframework/src
  /usr/local/Cellar/python/2.7.4/Frameworks/Python.framework/Versions/2.7/lib/python2.7/site-packages/pip-1.3.1-py2.7.egg
  /usr/local/Cellar/python/2.7.4/Frameworks/Python.framework/Versions/2.7/lib/python2.7/site-packages/distribute-0.6.36-py2.7.egg
  /usr/local/lib/python2.7/site-packages/pip-1.3.1-py2.7.egg
  /usr/local/lib/python2.7/site-packages/distribute-0.6.36-py2.7.egg
  /usr/local/Cellar/python/2.7.4/Frameworks/Python.framework/Versions/2.7/lib/python27.zip
  /usr/local/Cellar/python/2.7.4/Frameworks/Python.framework/Versions/2.7/lib/python2.7
  /usr/local/Cellar/python/2.7.4/Frameworks/Python.framework/Versions/2.7/lib/python2.7/plat-darwin
  /usr/local/Cellar/python/2.7.4/Frameworks/Python.framework/Versions/2.7/lib/python2.7/plat-mac
  /usr/local/Cellar/python/2.7.4/Frameworks/Python.framework/Versions/2.7/lib/python2.7/plat-mac/lib-scriptpackages
  /usr/local/Cellar/python/2.7.4/Frameworks/Python.framework/Versions/2.7/lib/python2.7/lib-tk
  /usr/local/Cellar/python/2.7.4/Frameworks/Python.framework/Versions/2.7/lib/python2.7/lib-old
  /usr/local/Cellar/python/2.7.4/Frameworks/Python.framework/Versions/2.7/lib/python2.7/lib-dynload
  /Library/Python/2.7/site-packages
  /usr/local/lib/wxPython-unicode-2.8.12.1/lib/python2.7
  /usr/local/lib/python2.7/site-packages
  .
  /Users/asyrjasalo/eficode/robot/robotframework/atest
20130409 15:06:56.694 | ERROR | Error in file '/Users/asyrjasalo/eficode/robot/robotframework/atest/testdata/cli/dryrun/dryrun.txt' in table 'Settings': Variable file 'wrong_path.py' does not exist.
20130409 15:06:56.695 | ERROR | Error in file '/Users/asyrjasalo/eficode/robot/robotframework/atest/testdata/cli/dryrun/dryrun.txt' in table 'Settings': Resource file 'NonExisting.tsv' does not exist.
20130409 15:06:56.696 | INFO  | Started test suite 'Dryrun'
20130409 15:06:56.696 | INFO  | Started test case 'Passing keywords'
20130409 15:06:56.698 | INFO  | Ended test case 'Passing keywords'
20130409 15:06:56.699 | INFO  | Started test case 'Keywords with embedded arguments'
20130409 15:06:56.701 | INFO  | Ended test case 'Keywords with embedded arguments'
20130409 15:06:56.702 | INFO  | Started test case 'Keywords that would fail'
20130409 15:06:56.704 | INFO  | Ended test case 'Keywords that would fail'
20130409 15:06:56.705 | INFO  | Started test case 'Scalar variables are not checked in keyword arguments'
20130409 15:06:56.706 | INFO  | Ended test case 'Scalar variables are not checked in keyword arguments'
20130409 15:06:56.707 | INFO  | Started test case 'List variables are not checked in keyword arguments'
20130409 15:06:56.710 | INFO  | Ended test case 'List variables are not checked in keyword arguments'
20130409 15:06:56.711 | INFO  | Started test case 'Variables are not checked in when arguments are embedded'
20130409 15:06:56.713 | INFO  | Ended test case 'Variables are not checked in when arguments are embedded'
20130409 15:06:56.714 | INFO  | Started test case 'User keyword return value'
20130409 15:06:56.715 | INFO  | Ended test case 'User keyword return value'
20130409 15:06:56.716 | INFO  | Started test case 'Test Setup And Teardown'
20130409 15:06:56.717 | INFO  | Ended test case 'Test Setup And Teardown'
20130409 15:06:56.718 | INFO  | Started test case 'Keyword Teardown'
20130409 15:06:56.720 | INFO  | Ended test case 'Keyword Teardown'
20130409 15:06:56.721 | INFO  | Started test case 'For Loops'
20130409 15:06:56.726 | INFO  | Ended test case 'For Loops'
20130409 15:06:56.727 | INFO  | Started test case 'Non-existing keyword name'
20130409 15:06:56.728 | INFO  | Ended test case 'Non-existing keyword name'
20130409 15:06:56.728 | INFO  | Started test case 'Too few arguments'
20130409 15:06:56.729 | INFO  | Ended test case 'Too few arguments'
20130409 15:06:56.730 | INFO  | Started test case 'Too few arguments for UK'
20130409 15:06:56.731 | INFO  | Ended test case 'Too few arguments for UK'
20130409 15:06:56.732 | INFO  | Started test case 'Too many arguments'
20130409 15:06:56.733 | INFO  | Ended test case 'Too many arguments'
20130409 15:06:56.733 | INFO  | Started test case 'Invalid syntax in UK'
20130409 15:06:56.734 | INFO  | Ended test case 'Invalid syntax in UK'
20130409 15:06:56.735 | INFO  | Started test case 'Multiple Failures'
20130409 15:06:56.739 | INFO  | Ended test case 'Multiple Failures'
20130409 15:06:56.739 | INFO  | Started test case 'Import Library Keyword is Called'
20130409 15:06:56.740 | INFO  | Imported test library class 'String' from '/Users/asyrjasalo/eficode/robot/robotframework/src/robot/libraries/String.pyc'.
20130409 15:06:56.745 | INFO  | Imported library 'String' with arguments [ ] (version trunk 20130226, class type, global scope, 24 keywords)
20130409 15:06:56.746 | INFO  | Imported test library class 'ParameterLibrary' from '/Users/asyrjasalo/eficode/robot/robotframework/atest/testresources/testlibs/ParameterLibrary.pyc'.
20130409 15:06:56.747 | INFO  | Adding keyword 'host' to library 'ParameterLibrary' failed: Not a method or function
20130409 15:06:56.747 | INFO  | Adding keyword 'port' to library 'ParameterLibrary' failed: Not a method or function
20130409 15:06:56.747 | INFO  | Imported library 'ParameterLibrary' with arguments [ value | 42 ] (version &lt;unknown&gt;, class type, testcase scope, 1 keywords)
20130409 15:06:56.748 | INFO  | Ended test case 'Import Library Keyword is Called'
20130409 15:06:56.748 | INFO  | Ended test suite 'Dryrun'
20130409 15:06:56.749 | INFO  | Initializing namespace for test suite 'Dryrun &amp; More Tests.More Tests'
20130409 15:06:56.749 | INFO  | Imported test library class 'BuiltIn' from '/Users/asyrjasalo/eficode/robot/robotframework/src/robot/libraries/BuiltIn.pyc'.
20130409 15:06:56.750 | INFO  | Found test library 'BuiltIn' with arguments [ ] from cache
20130409 15:06:56.750 | INFO  | Imported test library class 'DeprecatedBuiltIn' from '/Users/asyrjasalo/eficode/robot/robotframework/src/robot/libraries/DeprecatedBuiltIn.pyc'.
20130409 15:06:56.750 | INFO  | Found test library 'DeprecatedBuiltIn' with arguments [ ] from cache
20130409 15:06:56.750 | INFO  | Imported test library class 'Reserved' from '/Users/asyrjasalo/eficode/robot/robotframework/src/robot/libraries/Reserved.pyc'.
20130409 15:06:56.750 | INFO  | Found test library 'Reserved' with arguments [ ] from cache
20130409 15:06:56.750 | INFO  | Imported test library module 'Easter' from '/Users/asyrjasalo/eficode/robot/robotframework/src/robot/libraries/Easter.pyc'.
20130409 15:06:56.751 | INFO  | Found test library 'Easter' with arguments [ ] from cache
20130409 15:06:56.751 | INFO  | Found resource file '/Users/asyrjasalo/eficode/robot/robotframework/atest/testdata/cli/dryrun/resource.txt' from cache
20130409 15:06:56.752 | INFO  | Started test suite 'More Tests'
20130409 15:06:56.752 | INFO  | Started test case 'Some other test'
20130409 15:06:56.754 | INFO  | Ended test case 'Some other test'
20130409 15:06:56.755 | INFO  | Ended test suite 'More Tests'
20130409 15:06:56.755 | INFO  | Ended test suite 'Dryrun &amp; More Tests'
20130409 15:06:56.756 | INFO  | Tests execution ended. Statistics:
18 critical tests, 8 passed, 10 failed
18 tests total, 8 passed, 10 failed
20130409 15:06:56.757 | INFO  | Output: /Users/asyrjasalo/eficode/robot/robotframework/atest/results/python/output/dryrun_more_tests/output.xml</msg>
                                <msg level="INFO" timestamp="20130409 15:06:57.006">${file} = 20130409 15:06:56.618 | INFO  | Robot Framework trunk 20130226 (Python 2.7.4 on darwin)
20130409 15:06:56.619 | INFO  | Arguments: /Users/asyrjasalo/eficode/robot/robotframework/atest/testdata/cli/dry...</msg>
                                <status endtime="20130409 15:06:57.005" starttime="20130409 15:06:57.003" status="PASS"/>
                            </kw>
                            <msg level="INFO" timestamp="20130409 15:06:57.007">${file} = 20130409 15:06:56.618 | INFO  | Robot Framework trunk 20130226 (Python 2.7.4 on darwin)
20130409 15:06:56.619 | INFO  | Arguments: /Users/asyrjasalo/eficode/robot/robotframework/atest/testdata/cli/dry...</msg>
                            <status endtime="20130409 15:06:57.006" starttime="20130409 15:06:57.000" status="PASS"/>
                        </kw>
                        <kw name="BuiltIn.Should Contain" timeout="" type="kw">
                            <doc>Fails if `item1` does not contain `item2` one or more times.</doc>
                            <arguments>
                                <arg>${file}</arg>
                                <arg>${exp}</arg>
                            </arguments>
                            <status endtime="20130409 15:06:57.008" starttime="20130409 15:06:57.007" status="PASS"/>
                        </kw>
                        <status endtime="20130409 15:06:57.008" starttime="20130409 15:06:56.998" status="PASS"/>
                    </kw>
                    <status endtime="20130409 15:06:57.009" starttime="20130409 15:06:56.997" status="PASS"/>
                </kw>
                <kw name="atest_resource.Check Syslog Contains" timeout="" type="kw">
                    <doc/>
                    <arguments>
                        <arg>Imported library 'ParameterLibrary' with arguments [ value | 42 ]</arg>
                    </arguments>
                    <kw name="atest_resource.Check File Contains" timeout="" type="kw">
                        <doc/>
                        <arguments>
                            <arg>${SYSLOG_FILE}</arg>
                            <arg>@{expected}</arg>
                        </arguments>
                        <kw name="${exp} = BuiltIn.Catenate" timeout="" type="kw">
                            <doc>Catenates the given items together and returns the resulted string.</doc>
                            <arguments>
                                <arg>@{expected}</arg>
                            </arguments>
                            <msg level="INFO" timestamp="20130409 15:06:57.015">${exp} = Imported library 'ParameterLibrary' with arguments [ value | 42 ]</msg>
                            <status endtime="20130409 15:06:57.015" starttime="20130409 15:06:57.014" status="PASS"/>
                        </kw>
                        <kw name="${file} = atest_resource.Get Output File" timeout="" type="kw">
                            <doc>Output encoding avare helper</doc>
                            <arguments>
                                <arg>${path}</arg>
                            </arguments>
                            <kw name="${encoding} = BuiltIn.Evaluate" timeout="" type="kw">
                                <doc>Evaluates the given expression in Python and returns the results.</doc>
                                <arguments>
                                    <arg>__import__('robot').utils.encoding.OUTPUT_ENCODING</arg>
                                </arguments>
                                <msg level="INFO" timestamp="20130409 15:06:57.018">${encoding} = UTF-8</msg>
                                <status endtime="20130409 15:06:57.018" starttime="20130409 15:06:57.017" status="PASS"/>
                            </kw>
                            <kw name="${encoding} = BuiltIn.Set Variable If" timeout="" type="kw">
                                <doc>Sets variable based on the given condition.</doc>
                                <arguments>
                                    <arg>r'${path}' in [r'${STDERR FILE}',r'${STDOUT FILE}']</arg>
                                    <arg>${encoding}</arg>
                                    <arg>UTF-8</arg>
                                </arguments>
                                <msg level="INFO" timestamp="20130409 15:06:57.020">${encoding} = UTF-8</msg>
                                <status endtime="20130409 15:06:57.020" starttime="20130409 15:06:57.018" status="PASS"/>
                            </kw>
                            <kw name="${file} = OperatingSystem.Log File" timeout="" type="kw">
                                <doc>Wrapper for `Get File` that also logs the returned file.</doc>
                                <arguments>
                                    <arg>${path}</arg>
                                    <arg>${encoding}</arg>
                                </arguments>
                                <msg html="yes" level="INFO" timestamp="20130409 15:06:57.021">Getting file '&lt;a href=&quot;file:///Users/asyrjasalo/eficode/robot/robotframework/atest/results/python/output/dryrun_more_tests/syslog.txt&quot;&gt;/Users/asyrjasalo/eficode/robot/robotframework/atest/results/python/output/dryrun_more_tests/syslog.txt&lt;/a&gt;'</msg>
                                <msg level="INFO" timestamp="20130409 15:06:57.022">20130409 15:06:56.618 | INFO  | Robot Framework trunk 20130226 (Python 2.7.4 on darwin)
20130409 15:06:56.619 | INFO  | Arguments: /Users/asyrjasalo/eficode/robot/robotframework/atest/testdata/cli/dryrun/dryrun.txt,/Users/asyrjasalo/eficode/robot/robotframework/atest/testdata/cli/dryrun/more_tests.txt
20130409 15:06:56.619 | INFO  | Settings:
Critical: None
DebugFile: NONE
Doc: None
Exclude: []
Include: []
Listeners: []
Log: NONE
LogLevel: INFO
LogTitle: None
Metadata: []
MonitorColors: OFF
MonitorMarkers: OFF
MonitorWidth: 78
Name: None
NoStatusRC: False
NonCritical: None
Output: /Users/asyrjasalo/eficode/robot/robotframework/atest/results/python/output/dryrun_more_tests/output.xml
OutputDir: /Users/asyrjasalo/eficode/robot/robotframework/atest/results/python/output/dryrun_more_tests
RemoveKeywords: []
Report: NONE
ReportBackground: ('#99FF66', '#99FF66', '#FF3333')
ReportTitle: None
RunEmptySuite: False
RunMode: [u'dryrun']
SetTag: []
SplitLog: False
StdErr: None
StdOut: None
SuiteNames: []
SuiteStatLevel: -1
TagDoc: []
TagStatCombine: []
TagStatExclude: []
TagStatInclude: []
TagStatLink: []
TestNames: []
TimestampOutputs: False
VariableFiles: []
Variables: [u'interpreter:python']
VisibleLogLevel: INFO
WarnOnSkipped: False
XUnitFile: NONE
20130409 15:06:56.621 | INFO  | Parsing file '/Users/asyrjasalo/eficode/robot/robotframework/atest/testdata/cli/dryrun/dryrun.txt'.
20130409 15:06:56.631 | INFO  | Parsing file '/Users/asyrjasalo/eficode/robot/robotframework/atest/testdata/cli/dryrun/more_tests.txt'.
20130409 15:06:56.635 | INFO  | No debug file
20130409 15:06:56.635 | INFO  | Initializing namespace for test suite 'Dryrun &amp; More Tests'
20130409 15:06:56.637 | INFO  | Imported test library class 'BuiltIn' from '/Users/asyrjasalo/eficode/robot/robotframework/src/robot/libraries/BuiltIn.pyc'.
20130409 15:06:56.654 | INFO  | Imported library 'BuiltIn' with arguments [ ] (version trunk 20130226, class type, global scope, 88 keywords)
20130409 15:06:56.655 | INFO  | Imported test library class 'DeprecatedBuiltIn' from '/Users/asyrjasalo/eficode/robot/robotframework/src/robot/libraries/DeprecatedBuiltIn.pyc'.
20130409 15:06:56.663 | INFO  | Imported library 'DeprecatedBuiltIn' with arguments [ ] (version &lt;unknown&gt;, class type, global scope, 52 keywords)
20130409 15:06:56.663 | INFO  | Imported test library class 'Reserved' from '/Users/asyrjasalo/eficode/robot/robotframework/src/robot/libraries/Reserved.pyc'.
20130409 15:06:56.665 | INFO  | Imported library 'Reserved' with arguments [ ] (version &lt;unknown&gt;, dynamic type, global scope, 10 keywords)
20130409 15:06:56.665 | INFO  | Imported test library module 'Easter' from '/Users/asyrjasalo/eficode/robot/robotframework/src/robot/libraries/Easter.pyc'.
20130409 15:06:56.665 | INFO  | Imported library 'Easter' with arguments [ ] (version &lt;unknown&gt;, module type, global scope, 1 keywords)
20130409 15:06:56.666 | INFO  | Started test suite 'Dryrun &amp; More Tests'
20130409 15:06:56.666 | INFO  | Initializing namespace for test suite 'Dryrun &amp; More Tests.Dryrun'
20130409 15:06:56.667 | INFO  | Imported test library class 'BuiltIn' from '/Users/asyrjasalo/eficode/robot/robotframework/src/robot/libraries/BuiltIn.pyc'.
20130409 15:06:56.667 | INFO  | Found test library 'BuiltIn' with arguments [ ] from cache
20130409 15:06:56.667 | INFO  | Imported test library class 'DeprecatedBuiltIn' from '/Users/asyrjasalo/eficode/robot/robotframework/src/robot/libraries/DeprecatedBuiltIn.pyc'.
20130409 15:06:56.667 | INFO  | Found test library 'DeprecatedBuiltIn' with arguments [ ] from cache
20130409 15:06:56.667 | INFO  | Imported test library class 'Reserved' from '/Users/asyrjasalo/eficode/robot/robotframework/src/robot/libraries/Reserved.pyc'.
20130409 15:06:56.668 | INFO  | Found test library 'Reserved' with arguments [ ] from cache
20130409 15:06:56.668 | INFO  | Imported test library module 'Easter' from '/Users/asyrjasalo/eficode/robot/robotframework/src/robot/libraries/Easter.pyc'.
20130409 15:06:56.668 | INFO  | Found test library 'Easter' with arguments [ ] from cache
20130409 15:06:56.673 | INFO  | Imported test library class 'OperatingSystem' from '/Users/asyrjasalo/eficode/robot/robotframework/src/robot/libraries/OperatingSystem.pyc'.
20130409 15:06:56.682 | INFO  | Imported library 'OperatingSystem' with arguments [ ] (version trunk 20130226, class type, global scope, 57 keywords)
20130409 15:06:56.683 | INFO  | Imported test library class 'DeprecatedOperatingSystem' from '/Users/asyrjasalo/eficode/robot/robotframework/src/robot/libraries/DeprecatedOperatingSystem.pyc'.
20130409 15:06:56.686 | INFO  | Imported library 'DeprecatedOperatingSystem' with arguments [ ] (version &lt;unknown&gt;, class type, global scope, 24 keywords)
20130409 15:06:56.687 | INFO  | Importing variable file '/Users/asyrjasalo/eficode/robot/robotframework/atest/testdata/cli/dryrun/vars.py' with args []
20130409 15:06:56.687 | INFO  | Imported variable file module 'vars' from '/Users/asyrjasalo/eficode/robot/robotframework/atest/testdata/cli/dryrun/vars.py'.
20130409 15:06:56.687 | INFO  | Parsing file '/Users/asyrjasalo/eficode/robot/robotframework/atest/testdata/cli/dryrun/resource.txt'.
20130409 15:06:56.689 | INFO  | Imported resource file '/Users/asyrjasalo/eficode/robot/robotframework/atest/testdata/cli/dryrun/resource.txt' (4 keywords).
20130409 15:06:56.693 | ERROR | Error in file '/Users/asyrjasalo/eficode/robot/robotframework/atest/testdata/cli/dryrun/dryrun.txt' in table 'Settings': Importing test library 'DoesNotExist' failed: ImportError: No module named DoesNotExist
Traceback (most recent call last):
  None
PYTHONPATH:
  /Users/asyrjasalo/eficode/robot/robotframework/atest/testresources/testlibs
  /Users/asyrjasalo/eficode/robot/robotframework/atest/testresources/listeners
  /Users/asyrjasalo/eficode/robot/robotframework/src/robot/libraries
  /Users/asyrjasalo/eficode/robot/robotframework/src
  /usr/local/Cellar/python/2.7.4/Frameworks/Python.framework/Versions/2.7/lib/python2.7/site-packages/pip-1.3.1-py2.7.egg
  /usr/local/Cellar/python/2.7.4/Frameworks/Python.framework/Versions/2.7/lib/python2.7/site-packages/distribute-0.6.36-py2.7.egg
  /usr/local/lib/python2.7/site-packages/pip-1.3.1-py2.7.egg
  /usr/local/lib/python2.7/site-packages/distribute-0.6.36-py2.7.egg
  /usr/local/Cellar/python/2.7.4/Frameworks/Python.framework/Versions/2.7/lib/python27.zip
  /usr/local/Cellar/python/2.7.4/Frameworks/Python.framework/Versions/2.7/lib/python2.7
  /usr/local/Cellar/python/2.7.4/Frameworks/Python.framework/Versions/2.7/lib/python2.7/plat-darwin
  /usr/local/Cellar/python/2.7.4/Frameworks/Python.framework/Versions/2.7/lib/python2.7/plat-mac
  /usr/local/Cellar/python/2.7.4/Frameworks/Python.framework/Versions/2.7/lib/python2.7/plat-mac/lib-scriptpackages
  /usr/local/Cellar/python/2.7.4/Frameworks/Python.framework/Versions/2.7/lib/python2.7/lib-tk
  /usr/local/Cellar/python/2.7.4/Frameworks/Python.framework/Versions/2.7/lib/python2.7/lib-old
  /usr/local/Cellar/python/2.7.4/Frameworks/Python.framework/Versions/2.7/lib/python2.7/lib-dynload
  /Library/Python/2.7/site-packages
  /usr/local/lib/wxPython-unicode-2.8.12.1/lib/python2.7
  /usr/local/lib/python2.7/site-packages
  .
  /Users/asyrjasalo/eficode/robot/robotframework/atest
20130409 15:06:56.694 | ERROR | Error in file '/Users/asyrjasalo/eficode/robot/robotframework/atest/testdata/cli/dryrun/dryrun.txt' in table 'Settings': Variable file 'wrong_path.py' does not exist.
20130409 15:06:56.695 | ERROR | Error in file '/Users/asyrjasalo/eficode/robot/robotframework/atest/testdata/cli/dryrun/dryrun.txt' in table 'Settings': Resource file 'NonExisting.tsv' does not exist.
20130409 15:06:56.696 | INFO  | Started test suite 'Dryrun'
20130409 15:06:56.696 | INFO  | Started test case 'Passing keywords'
20130409 15:06:56.698 | INFO  | Ended test case 'Passing keywords'
20130409 15:06:56.699 | INFO  | Started test case 'Keywords with embedded arguments'
20130409 15:06:56.701 | INFO  | Ended test case 'Keywords with embedded arguments'
20130409 15:06:56.702 | INFO  | Started test case 'Keywords that would fail'
20130409 15:06:56.704 | INFO  | Ended test case 'Keywords that would fail'
20130409 15:06:56.705 | INFO  | Started test case 'Scalar variables are not checked in keyword arguments'
20130409 15:06:56.706 | INFO  | Ended test case 'Scalar variables are not checked in keyword arguments'
20130409 15:06:56.707 | INFO  | Started test case 'List variables are not checked in keyword arguments'
20130409 15:06:56.710 | INFO  | Ended test case 'List variables are not checked in keyword arguments'
20130409 15:06:56.711 | INFO  | Started test case 'Variables are not checked in when arguments are embedded'
20130409 15:06:56.713 | INFO  | Ended test case 'Variables are not checked in when arguments are embedded'
20130409 15:06:56.714 | INFO  | Started test case 'User keyword return value'
20130409 15:06:56.715 | INFO  | Ended test case 'User keyword return value'
20130409 15:06:56.716 | INFO  | Started test case 'Test Setup And Teardown'
20130409 15:06:56.717 | INFO  | Ended test case 'Test Setup And Teardown'
20130409 15:06:56.718 | INFO  | Started test case 'Keyword Teardown'
20130409 15:06:56.720 | INFO  | Ended test case 'Keyword Teardown'
20130409 15:06:56.721 | INFO  | Started test case 'For Loops'
20130409 15:06:56.726 | INFO  | Ended test case 'For Loops'
20130409 15:06:56.727 | INFO  | Started test case 'Non-existing keyword name'
20130409 15:06:56.728 | INFO  | Ended test case 'Non-existing keyword name'
20130409 15:06:56.728 | INFO  | Started test case 'Too few arguments'
20130409 15:06:56.729 | INFO  | Ended test case 'Too few arguments'
20130409 15:06:56.730 | INFO  | Started test case 'Too few arguments for UK'
20130409 15:06:56.731 | INFO  | Ended test case 'Too few arguments for UK'
20130409 15:06:56.732 | INFO  | Started test case 'Too many arguments'
20130409 15:06:56.733 | INFO  | Ended test case 'Too many arguments'
20130409 15:06:56.733 | INFO  | Started test case 'Invalid syntax in UK'
20130409 15:06:56.734 | INFO  | Ended test case 'Invalid syntax in UK'
20130409 15:06:56.735 | INFO  | Started test case 'Multiple Failures'
20130409 15:06:56.739 | INFO  | Ended test case 'Multiple Failures'
20130409 15:06:56.739 | INFO  | Started test case 'Import Library Keyword is Called'
20130409 15:06:56.740 | INFO  | Imported test library class 'String' from '/Users/asyrjasalo/eficode/robot/robotframework/src/robot/libraries/String.pyc'.
20130409 15:06:56.745 | INFO  | Imported library 'String' with arguments [ ] (version trunk 20130226, class type, global scope, 24 keywords)
20130409 15:06:56.746 | INFO  | Imported test library class 'ParameterLibrary' from '/Users/asyrjasalo/eficode/robot/robotframework/atest/testresources/testlibs/ParameterLibrary.pyc'.
20130409 15:06:56.747 | INFO  | Adding keyword 'host' to library 'ParameterLibrary' failed: Not a method or function
20130409 15:06:56.747 | INFO  | Adding keyword 'port' to library 'ParameterLibrary' failed: Not a method or function
20130409 15:06:56.747 | INFO  | Imported library 'ParameterLibrary' with arguments [ value | 42 ] (version &lt;unknown&gt;, class type, testcase scope, 1 keywords)
20130409 15:06:56.748 | INFO  | Ended test case 'Import Library Keyword is Called'
20130409 15:06:56.748 | INFO  | Ended test suite 'Dryrun'
20130409 15:06:56.749 | INFO  | Initializing namespace for test suite 'Dryrun &amp; More Tests.More Tests'
20130409 15:06:56.749 | INFO  | Imported test library class 'BuiltIn' from '/Users/asyrjasalo/eficode/robot/robotframework/src/robot/libraries/BuiltIn.pyc'.
20130409 15:06:56.750 | INFO  | Found test library 'BuiltIn' with arguments [ ] from cache
20130409 15:06:56.750 | INFO  | Imported test library class 'DeprecatedBuiltIn' from '/Users/asyrjasalo/eficode/robot/robotframework/src/robot/libraries/DeprecatedBuiltIn.pyc'.
20130409 15:06:56.750 | INFO  | Found test library 'DeprecatedBuiltIn' with arguments [ ] from cache
20130409 15:06:56.750 | INFO  | Imported test library class 'Reserved' from '/Users/asyrjasalo/eficode/robot/robotframework/src/robot/libraries/Reserved.pyc'.
20130409 15:06:56.750 | INFO  | Found test library 'Reserved' with arguments [ ] from cache
20130409 15:06:56.750 | INFO  | Imported test library module 'Easter' from '/Users/asyrjasalo/eficode/robot/robotframework/src/robot/libraries/Easter.pyc'.
20130409 15:06:56.751 | INFO  | Found test library 'Easter' with arguments [ ] from cache
20130409 15:06:56.751 | INFO  | Found resource file '/Users/asyrjasalo/eficode/robot/robotframework/atest/testdata/cli/dryrun/resource.txt' from cache
20130409 15:06:56.752 | INFO  | Started test suite 'More Tests'
20130409 15:06:56.752 | INFO  | Started test case 'Some other test'
20130409 15:06:56.754 | INFO  | Ended test case 'Some other test'
20130409 15:06:56.755 | INFO  | Ended test suite 'More Tests'
20130409 15:06:56.755 | INFO  | Ended test suite 'Dryrun &amp; More Tests'
20130409 15:06:56.756 | INFO  | Tests execution ended. Statistics:
18 critical tests, 8 passed, 10 failed
18 tests total, 8 passed, 10 failed
20130409 15:06:56.757 | INFO  | Output: /Users/asyrjasalo/eficode/robot/robotframework/atest/results/python/output/dryrun_more_tests/output.xml</msg>
                                <msg level="INFO" timestamp="20130409 15:06:57.023">${file} = 20130409 15:06:56.618 | INFO  | Robot Framework trunk 20130226 (Python 2.7.4 on darwin)
20130409 15:06:56.619 | INFO  | Arguments: /Users/asyrjasalo/eficode/robot/robotframework/atest/testdata/cli/dry...</msg>
                                <status endtime="20130409 15:06:57.023" starttime="20130409 15:06:57.021" status="PASS"/>
                            </kw>
                            <msg level="INFO" timestamp="20130409 15:06:57.024">${file} = 20130409 15:06:56.618 | INFO  | Robot Framework trunk 20130226 (Python 2.7.4 on darwin)
20130409 15:06:56.619 | INFO  | Arguments: /Users/asyrjasalo/eficode/robot/robotframework/atest/testdata/cli/dry...</msg>
                            <status endtime="20130409 15:06:57.023" starttime="20130409 15:06:57.015" status="PASS"/>
                        </kw>
                        <kw name="BuiltIn.Should Contain" timeout="" type="kw">
                            <doc>Fails if `item1` does not contain `item2` one or more times.</doc>
                            <arguments>
                                <arg>${file}</arg>
                                <arg>${exp}</arg>
                            </arguments>
                            <status endtime="20130409 15:06:57.025" starttime="20130409 15:06:57.024" status="PASS"/>
                        </kw>
                        <status endtime="20130409 15:06:57.025" starttime="20130409 15:06:57.012" status="PASS"/>
                    </kw>
                    <status endtime="20130409 15:06:57.025" starttime="20130409 15:06:57.010" status="PASS"/>
                </kw>
                <doc/>
                <tags>
                    <tag>jybot</tag>
                    <tag>pybot</tag>
                    <tag>regression</tag>
                </tags>
                <status critical="yes" endtime="20130409 15:06:57.026" starttime="20130409 15:06:56.993" status="PASS"/>
            </test>
            <doc/>
            <metadata/>
            <status endtime="20130409 15:06:57.026" starttime="20130409 15:06:56.339" status="PASS"/>
        </suite>
        <suite id="s1-s2" name="Run Keyword Variants" source="/Users/asyrjasalo/eficode/robot/robotframework/atest/robot/cli/dryrun/run_keyword_variants.txt">
            <kw name="atest_resource.Run Tests" timeout="" type="setup">
                <doc/>
                <arguments>
                    <arg>--runmode dryrun</arg>
                    <arg>cli/dryrun/run_keyword_variants.txt</arg>
                </arguments>
                <kw name="atest_resource.Run Tests Helper" timeout="" type="kw">
                    <doc/>
                    <arguments>
                        <arg>${options}</arg>
                        <arg>@{data list}</arg>
                    </arguments>
                    <kw name="${data string} = atest_resource.Set Variables And Get Datasources" timeout="" type="kw">
                        <doc/>
                        <arguments>
                            <arg>@{data list}</arg>
                        </arguments>
                        <kw name="BuiltIn.Set Suite Variable" timeout="" type="kw">
                            <doc>Makes a variable available everywhere within the scope of the current suite.</doc>
                            <arguments>
                                <arg>$SUITE</arg>
                                <arg>${NONE}</arg>
                            </arguments>
                            <msg level="INFO" timestamp="20130409 15:06:57.044">${SUITE} = None</msg>
                            <status endtime="20130409 15:06:57.044" starttime="20130409 15:06:57.043" status="PASS"/>
                        </kw>
                        <kw name="${name} = TestHelper.Get Output Name" timeout="" type="kw">
                            <doc/>
                            <arguments>
                                <arg>@{data list}</arg>
                            </arguments>
                            <msg level="INFO" timestamp="20130409 15:06:57.045">${name} = run_keyword_variants</msg>
                            <status endtime="20130409 15:06:57.045" starttime="20130409 15:06:57.044" status="PASS"/>
                        </kw>
                        <kw name="atest_resource.Set Variables" timeout="" type="kw">
                            <doc/>
                            <arguments>
                                <arg>${name}</arg>
                            </arguments>
                            <kw name="${OUTDIR} = OperatingSystem.Join Path" timeout="" type="kw">
                                <doc>Joins the given path part(s) to the given base path.</doc>
                                <arguments>
                                    <arg>${OUTPUTDIR}</arg>
                                    <arg>output</arg>
                                    <arg>${name}</arg>
                                </arguments>
                                <msg level="INFO" timestamp="20130409 15:06:57.047">${OUTDIR} = /Users/asyrjasalo/eficode/robot/robotframework/atest/results/python/output/run_keyword_variants</msg>
                                <status endtime="20130409 15:06:57.047" starttime="20130409 15:06:57.046" status="PASS"/>
                            </kw>
                            <kw name="BuiltIn.Set Global Variable" timeout="" type="kw">
                                <doc>Makes a variable available globally in all tests and suites.</doc>
                                <arguments>
                                    <arg>$OUTDIR</arg>
                                    <arg>${OUTDIR.encode('ascii', 'ignore').replace('?', '_') .replace('*', '_')}</arg>
                                </arguments>
                                <msg level="INFO" timestamp="20130409 15:06:57.048">${OUTDIR} = /Users/asyrjasalo/eficode/robot/robotframework/atest/results/python/output/run_keyword_variants</msg>
                                <status endtime="20130409 15:06:57.048" starttime="20130409 15:06:57.047" status="PASS"/>
                            </kw>
                            <kw name="OperatingSystem.Create Directory" timeout="" type="kw">
                                <doc>Creates the specified directory.</doc>
                                <arguments>
                                    <arg>${OUTDIR}</arg>
                                </arguments>
                                <msg html="yes" level="INFO" timestamp="20130409 15:06:57.049">Created directory '&lt;a href=&quot;file:///Users/asyrjasalo/eficode/robot/robotframework/atest/results/python/output/run_keyword_variants&quot;&gt;/Users/asyrjasalo/eficode/robot/robotframework/atest/results/python/output/run_keyword_variants&lt;/a&gt;'</msg>
                                <status endtime="20130409 15:06:57.049" starttime="20130409 15:06:57.048" status="PASS"/>
                            </kw>
                            <kw name="BuiltIn.Set Suite Variable" timeout="" type="kw">
                                <doc>Makes a variable available everywhere within the scope of the current suite.</doc>
                                <arguments>
                                    <arg>$OUTFILE</arg>
                                    <arg>${OUTDIR}${/}output.xml</arg>
                                </arguments>
                                <msg level="INFO" timestamp="20130409 15:06:57.050">${OUTFILE} = /Users/asyrjasalo/eficode/robot/robotframework/atest/results/python/output/run_keyword_variants/output.xml</msg>
                                <status endtime="20130409 15:06:57.050" starttime="20130409 15:06:57.049" status="PASS"/>
                            </kw>
                            <kw name="BuiltIn.Set Suite Variable" timeout="" type="kw">
                                <doc>Makes a variable available everywhere within the scope of the current suite.</doc>
                                <arguments>
                                    <arg>$STDOUT_FILE</arg>
                                    <arg>${OUTDIR}${/}stdout.txt</arg>
                                </arguments>
                                <msg level="INFO" timestamp="20130409 15:06:57.051">${STDOUT_FILE} = /Users/asyrjasalo/eficode/robot/robotframework/atest/results/python/output/run_keyword_variants/stdout.txt</msg>
                                <status endtime="20130409 15:06:57.051" starttime="20130409 15:06:57.050" status="PASS"/>
                            </kw>
                            <kw name="BuiltIn.Set Suite Variable" timeout="" type="kw">
                                <doc>Makes a variable available everywhere within the scope of the current suite.</doc>
                                <arguments>
                                    <arg>$STDERR_FILE</arg>
                                    <arg>${OUTDIR}${/}stderr.txt</arg>
                                </arguments>
                                <msg level="INFO" timestamp="20130409 15:06:57.052">${STDERR_FILE} = /Users/asyrjasalo/eficode/robot/robotframework/atest/results/python/output/run_keyword_variants/stderr.txt</msg>
                                <status endtime="20130409 15:06:57.052" starttime="20130409 15:06:57.051" status="PASS"/>
                            </kw>
                            <kw name="BuiltIn.Set Suite Variable" timeout="" type="kw">
                                <doc>Makes a variable available everywhere within the scope of the current suite.</doc>
                                <arguments>
                                    <arg>$SYSLOG_FILE</arg>
                                    <arg>${OUTDIR}${/}syslog.txt</arg>
                                </arguments>
                                <msg level="INFO" timestamp="20130409 15:06:57.052">${SYSLOG_FILE} = /Users/asyrjasalo/eficode/robot/robotframework/atest/results/python/output/run_keyword_variants/syslog.txt</msg>
                                <status endtime="20130409 15:06:57.053" starttime="20130409 15:06:57.052" status="PASS"/>
                            </kw>
                            <kw name="OperatingSystem.Set Environment Variable" timeout="" type="kw">
                                <doc>Sets an environment variable to a specified value.</doc>
                                <arguments>
                                    <arg>ROBOT_SYSLOG_FILE</arg>
                                    <arg>${SYSLOG_FILE}</arg>
                                </arguments>
                                <msg level="INFO" timestamp="20130409 15:06:57.053">Environment variable 'ROBOT_SYSLOG_FILE' set to value '/Users/asyrjasalo/eficode/robot/robotframework/atest/results/python/output/run_keyword_variants/syslog.txt'</msg>
                                <status endtime="20130409 15:06:57.053" starttime="20130409 15:06:57.053" status="PASS"/>
                            </kw>
                            <kw name="atest_resource.Set Runners" timeout="" type="kw">
                                <doc/>
                                <arguments/>
                                <kw name="${robot} = OperatingSystem.Join Path" timeout="" type="kw">
                                    <doc>Joins the given path part(s) to the given base path.</doc>
                                    <arguments>
                                        <arg>${ROBOTPATH}</arg>
                                        <arg>run.py</arg>
                                    </arguments>
                                    <msg level="INFO" timestamp="20130409 15:06:57.055">${robot} = /Users/asyrjasalo/eficode/robot/robotframework/src/robot/run.py</msg>
                                    <status endtime="20130409 15:06:57.055" starttime="20130409 15:06:57.055" status="PASS"/>
                                </kw>
                                <kw name="BuiltIn.Set Suite Variable" timeout="" type="kw">
                                    <doc>Makes a variable available everywhere within the scope of the current suite.</doc>
                                    <arguments>
                                        <arg>$ROBOT</arg>
                                        <arg>${INTERPRETER} ${robot}</arg>
                                    </arguments>
                                    <msg level="INFO" timestamp="20130409 15:06:57.056">${ROBOT} = python /Users/asyrjasalo/eficode/robot/robotframework/src/robot/run.py</msg>
                                    <status endtime="20130409 15:06:57.056" starttime="20130409 15:06:57.055" status="PASS"/>
                                </kw>
                                <kw name="${rebot} = OperatingSystem.Join Path" timeout="" type="kw">
                                    <doc>Joins the given path part(s) to the given base path.</doc>
                                    <arguments>
                                        <arg>${ROBOTPATH}</arg>
                                        <arg>rebot.py</arg>
                                    </arguments>
                                    <msg level="INFO" timestamp="20130409 15:06:57.056">${rebot} = /Users/asyrjasalo/eficode/robot/robotframework/src/robot/rebot.py</msg>
                                    <status endtime="20130409 15:06:57.056" starttime="20130409 15:06:57.056" status="PASS"/>
                                </kw>
                                <kw name="BuiltIn.Set Suite Variable" timeout="" type="kw">
                                    <doc>Makes a variable available everywhere within the scope of the current suite.</doc>
                                    <arguments>
                                        <arg>$REBOT</arg>
                                        <arg>${INTERPRETER} ${rebot}</arg>
                                    </arguments>
                                    <msg level="INFO" timestamp="20130409 15:06:57.057">${REBOT} = python /Users/asyrjasalo/eficode/robot/robotframework/src/robot/rebot.py</msg>
                                    <status endtime="20130409 15:06:57.057" starttime="20130409 15:06:57.057" status="PASS"/>
                                </kw>
                                <status endtime="20130409 15:06:57.057" starttime="20130409 15:06:57.054" status="PASS"/>
                            </kw>
                            <status endtime="20130409 15:06:57.057" starttime="20130409 15:06:57.045" status="PASS"/>
                        </kw>
                        <kw name="@{data list} = OperatingSystem.Join Paths" timeout="" type="kw">
                            <doc>Joins given paths with base and returns resulted paths.</doc>
                            <arguments>
                                <arg>${DATADIR}</arg>
                                <arg>@{data list}</arg>
                            </arguments>
                            <msg level="INFO" timestamp="20130409 15:06:57.058">@{data list} = [ /Users/asyrjasalo/eficode/robot/robotframework/atest/testdata/cli/dryrun/run_keyword_variants.txt ]</msg>
                            <status endtime="20130409 15:06:57.058" starttime="20130409 15:06:57.058" status="PASS"/>
                        </kw>
                        <kw name="${data string} = BuiltIn.Catenate" timeout="" type="kw">
                            <doc>Catenates the given items together and returns the resulted string.</doc>
                            <arguments>
                                <arg>@{data list}</arg>
                            </arguments>
                            <msg level="INFO" timestamp="20130409 15:06:57.059">${data string} = /Users/asyrjasalo/eficode/robot/robotframework/atest/testdata/cli/dryrun/run_keyword_variants.txt</msg>
                            <status endtime="20130409 15:06:57.059" starttime="20130409 15:06:57.058" status="PASS"/>
                        </kw>
                        <msg level="INFO" timestamp="20130409 15:06:57.059">${data string} = /Users/asyrjasalo/eficode/robot/robotframework/atest/testdata/cli/dryrun/run_keyword_variants.txt</msg>
                        <status endtime="20130409 15:06:57.059" starttime="20130409 15:06:57.042" status="PASS"/>
                    </kw>
                    <kw name="${options} = BuiltIn.Catenate" timeout="" type="kw">
                        <doc>Catenates the given items together and returns the resulted string.</doc>
                        <arguments>
                            <arg>--MonitorMarkers OFF</arg>
                            <arg>${user options}</arg>
                            <arg>--variable interpreter:${INTERPRETER}</arg>
                            <arg>--pythonpath ${LIBPATH1}</arg>
                            <arg>--pythonpath ${LIBPATH2}</arg>
                        </arguments>
                        <msg level="INFO" timestamp="20130409 15:06:57.060">${options} = --MonitorMarkers OFF --runmode dryrun --variable interpreter:python --pythonpath /Users/asyrjasalo/eficode/robot/robotframework/atest/resources/../testresources/testlibs --pythonpath /Users/asyrjasalo...</msg>
                        <status endtime="20130409 15:06:57.060" starttime="20130409 15:06:57.060" status="PASS"/>
                    </kw>
                    <kw name="atest_resource.Run Helper" timeout="" type="kw">
                        <doc/>
                        <arguments>
                            <arg>${ROBOT}</arg>
                            <arg>${options}</arg>
                            <arg>${data string}</arg>
                        </arguments>
                        <kw name="OperatingSystem.Remove Files" timeout="" type="kw">
                            <doc>Uses `Remove File` to remove multiple files one-by-one.</doc>
                            <arguments>
                                <arg>${OUTFILE}</arg>
                                <arg>${OUTDIR}/*.xml</arg>
                                <arg>${OUTDIR}/*.html</arg>
                            </arguments>
                            <msg html="yes" level="INFO" timestamp="20130409 15:06:57.063">File '&lt;a href=&quot;file:///Users/asyrjasalo/eficode/robot/robotframework/atest/results/python/output/run_keyword_variants/output.xml&quot;&gt;/Users/asyrjasalo/eficode/robot/robotframework/atest/results/python/output/run_keyword_variants/output.xml&lt;/a&gt;' does not exist</msg>
                            <msg html="yes" level="INFO" timestamp="20130409 15:06:57.063">File '&lt;a href=&quot;file:///Users/asyrjasalo/eficode/robot/robotframework/atest/results/python/output/run_keyword_variants/*.xml&quot;&gt;/Users/asyrjasalo/eficode/robot/robotframework/atest/results/python/output/run_keyword_variants/*.xml&lt;/a&gt;' does not exist</msg>
                            <msg html="yes" level="INFO" timestamp="20130409 15:06:57.063">File '&lt;a href=&quot;file:///Users/asyrjasalo/eficode/robot/robotframework/atest/results/python/output/run_keyword_variants/*.html&quot;&gt;/Users/asyrjasalo/eficode/robot/robotframework/atest/results/python/output/run_keyword_variants/*.html&lt;/a&gt;' does not exist</msg>
                            <status endtime="20130409 15:06:57.063" starttime="20130409 15:06:57.062" status="PASS"/>
                        </kw>
                        <kw name="${cmd} = BuiltIn.Catenate" timeout="" type="kw">
                            <doc>Catenates the given items together and returns the resulted string.</doc>
                            <arguments>
                                <arg>${runner}</arg>
                                <arg>--monitorcolors OFF</arg>
                                <arg>--outputdir ${OUTDIR}</arg>
                                <arg>--output ${OUTFILE}</arg>
                                <arg>--report NONE</arg>
                                <arg>--log NONE</arg>
                                <arg>${options}</arg>
                                <arg>${data string}</arg>
                                <arg>1&gt;${STDOUTFILE}</arg>
                                <arg>2&gt;${STDERRFILE}</arg>
                            </arguments>
                            <msg level="INFO" timestamp="20130409 15:06:57.064">${cmd} = python /Users/asyrjasalo/eficode/robot/robotframework/src/robot/run.py --monitorcolors OFF --outputdir /Users/asyrjasalo/eficode/robot/robotframework/atest/results/python/output/run_keyword_variants -...</msg>
                            <status endtime="20130409 15:06:57.064" starttime="20130409 15:06:57.064" status="PASS"/>
                        </kw>
                        <kw name="${rc} = OperatingSystem.Run And Return Rc" timeout="" type="kw">
                            <doc>Runs the given command in the system and returns the return code.</doc>
                            <arguments>
                                <arg>${cmd}</arg>
                            </arguments>
                            <msg level="INFO" timestamp="20130409 15:06:57.065">Running command 'python /Users/asyrjasalo/eficode/robot/robotframework/src/robot/run.py --monitorcolors OFF --outputdir /Users/asyrjasalo/eficode/robot/robotframework/atest/results/python/output/run_keyword_variants --output /Users/asyrjasalo/eficode/robot/robotframework/atest/results/python/output/run_keyword_variants/output.xml --report NONE --log NONE --MonitorMarkers OFF --runmode dryrun --variable interpreter:python --pythonpath /Users/asyrjasalo/eficode/robot/robotframework/atest/resources/../testresources/testlibs --pythonpath /Users/asyrjasalo/eficode/robot/robotframework/atest/resources/../testresources/listeners /Users/asyrjasalo/eficode/robot/robotframework/atest/testdata/cli/dryrun/run_keyword_variants.txt 1&gt;/Users/asyrjasalo/eficode/robot/robotframework/atest/results/python/output/run_keyword_variants/stdout.txt 2&gt;/Users/asyrjasalo/eficode/robot/robotframework/atest/results/python/output/run_keyword_variants/stderr.txt'</msg>
                            <msg level="INFO" timestamp="20130409 15:06:57.425">${rc} = 17</msg>
                            <status endtime="20130409 15:06:57.425" starttime="20130409 15:06:57.065" status="PASS"/>
                        </kw>
                        <kw name="BuiltIn.Log" timeout="" type="kw">
                            <doc>Logs the given message with the given level.</doc>
                            <arguments>
                                <arg>&lt;a href=&quot;file://${OUTDIR}&quot;&gt;${OUTDIR}&lt;/a&gt;</arg>
                                <arg>HTML</arg>
                            </arguments>
                            <msg html="yes" level="INFO" timestamp="20130409 15:06:57.426">&lt;a href=&quot;file:///Users/asyrjasalo/eficode/robot/robotframework/atest/results/python/output/run_keyword_variants&quot;&gt;/Users/asyrjasalo/eficode/robot/robotframework/atest/results/python/output/run_keyword_variants&lt;/a&gt;</msg>
                            <status endtime="20130409 15:06:57.426" starttime="20130409 15:06:57.426" status="PASS"/>
                        </kw>
                        <kw name="BuiltIn.Log" timeout="" type="kw">
                            <doc>Logs the given message with the given level.</doc>
                            <arguments>
                                <arg>&lt;a href=&quot;file://${OUTFILE}&quot;&gt;${OUTFILE}&lt;/a&gt;</arg>
                                <arg>HTML</arg>
                            </arguments>
                            <msg html="yes" level="INFO" timestamp="20130409 15:06:57.427">&lt;a href=&quot;file:///Users/asyrjasalo/eficode/robot/robotframework/atest/results/python/output/run_keyword_variants/output.xml&quot;&gt;/Users/asyrjasalo/eficode/robot/robotframework/atest/results/python/output/run_keyword_variants/output.xml&lt;/a&gt;</msg>
                            <status endtime="20130409 15:06:57.427" starttime="20130409 15:06:57.426" status="PASS"/>
                        </kw>
                        <kw name="BuiltIn.Log" timeout="" type="kw">
                            <doc>Logs the given message with the given level.</doc>
                            <arguments>
                                <arg>&lt;a href=&quot;file://${STDOUTFILE}&quot;&gt;${STDOUTFILE}&lt;/a&gt;</arg>
                                <arg>HTML</arg>
                            </arguments>
                            <msg html="yes" level="INFO" timestamp="20130409 15:06:57.427">&lt;a href=&quot;file:///Users/asyrjasalo/eficode/robot/robotframework/atest/results/python/output/run_keyword_variants/stdout.txt&quot;&gt;/Users/asyrjasalo/eficode/robot/robotframework/atest/results/python/output/run_keyword_variants/stdout.txt&lt;/a&gt;</msg>
                            <status endtime="20130409 15:06:57.427" starttime="20130409 15:06:57.427" status="PASS"/>
                        </kw>
                        <kw name="BuiltIn.Log" timeout="" type="kw">
                            <doc>Logs the given message with the given level.</doc>
                            <arguments>
                                <arg>&lt;a href=&quot;file://${STDERRFILE}&quot;&gt;${STDERRFILE}&lt;/a&gt;</arg>
                                <arg>HTML</arg>
                            </arguments>
                            <msg html="yes" level="INFO" timestamp="20130409 15:06:57.428">&lt;a href=&quot;file:///Users/asyrjasalo/eficode/robot/robotframework/atest/results/python/output/run_keyword_variants/stderr.txt&quot;&gt;/Users/asyrjasalo/eficode/robot/robotframework/atest/results/python/output/run_keyword_variants/stderr.txt&lt;/a&gt;</msg>
                            <status endtime="20130409 15:06:57.428" starttime="20130409 15:06:57.428" status="PASS"/>
                        </kw>
                        <kw name="BuiltIn.Log" timeout="" type="kw">
                            <doc>Logs the given message with the given level.</doc>
                            <arguments>
                                <arg>&lt;a href=&quot;file://${SYSLOGFILE}&quot;&gt;${SYSLOGFILE}&lt;/a&gt;</arg>
                                <arg>HTML</arg>
                            </arguments>
                            <msg html="yes" level="INFO" timestamp="20130409 15:06:57.429">&lt;a href=&quot;file:///Users/asyrjasalo/eficode/robot/robotframework/atest/results/python/output/run_keyword_variants/syslog.txt&quot;&gt;/Users/asyrjasalo/eficode/robot/robotframework/atest/results/python/output/run_keyword_variants/syslog.txt&lt;/a&gt;</msg>
                            <status endtime="20130409 15:06:57.429" starttime="20130409 15:06:57.428" status="PASS"/>
                        </kw>
                        <status endtime="20130409 15:06:57.429" starttime="20130409 15:06:57.061" status="PASS"/>
                    </kw>
                    <status endtime="20130409 15:06:57.429" starttime="20130409 15:06:57.041" status="PASS"/>
                </kw>
                <kw name="TestCheckerLibrary.Process Output" timeout="" type="kw">
                    <doc/>
                    <arguments>
                        <arg>${OUTFILE}</arg>
                    </arguments>
                    <msg level="INFO" timestamp="20130409 15:06:57.447">${SUITE} = Run Keyword Variants</msg>
                    <msg level="INFO" timestamp="20130409 15:06:57.448">${STATISTICS} = &lt;robot.model.statistics.Statistics object at 0x105156650&gt;</msg>
                    <msg level="INFO" timestamp="20130409 15:06:57.448">${ERRORS} = &lt;robot.result.executionerrors.ExecutionErrors object at 0x105151a50&gt;</msg>
                    <msg level="INFO" timestamp="20130409 15:06:57.448">Processing output '/Users/asyrjasalo/eficode/robot/robotframework/atest/results/python/output/run_keyword_variants/output.xml'</msg>
                    <status endtime="20130409 15:06:57.448" starttime="20130409 15:06:57.429" status="PASS"/>
                </kw>
                <status endtime="20130409 15:06:57.449" starttime="20130409 15:06:57.040" status="PASS"/>
            </kw>
            <test id="s1-s2-t1" name="Run Keyword With Keyword with Invalid Number of Arguments" timeout="">
                <kw name="atest_resource.Check Test Case" timeout="" type="kw">
                    <doc/>
                    <arguments>
                        <arg>${TESTNAME}</arg>
                    </arguments>
                    <kw name="${test} = TestCheckerLibrary.Get Test From Suite" timeout="" type="kw">
                        <doc/>
                        <arguments>
                            <arg>${SUITE}</arg>
                            <arg>${name}</arg>
                        </arguments>
                        <msg level="INFO" timestamp="20130409 15:06:57.452">${test} = Run Keyword With Keyword with Invalid Number of Arguments</msg>
                        <status endtime="20130409 15:06:57.452" starttime="20130409 15:06:57.451" status="PASS"/>
                    </kw>
                    <kw name="TestCheckerLibrary.Check Test Status" timeout="" type="kw">
                        <doc>Verifies that test's status and message are as expected.</doc>
                        <arguments>
                            <arg>${test}</arg>
                            <arg>${status}</arg>
                            <arg>${message}</arg>
                        </arguments>
                        <status endtime="20130409 15:06:57.453" starttime="20130409 15:06:57.452" status="PASS"/>
                    </kw>
                    <status endtime="20130409 15:06:57.453" starttime="20130409 15:06:57.450" status="PASS"/>
                </kw>
                <doc/>
                <tags>
                    <tag>jybot</tag>
                    <tag>pybot</tag>
                    <tag>regression</tag>
                </tags>
                <status critical="yes" endtime="20130409 15:06:57.453" starttime="20130409 15:06:57.449" status="PASS"/>
            </test>
            <test id="s1-s2-t2" name="Run Keyword With Missing Keyword" timeout="">
                <kw name="atest_resource.Check Test Case" timeout="" type="kw">
                    <doc/>
                    <arguments>
                        <arg>${TESTNAME}</arg>
                    </arguments>
                    <kw name="${test} = TestCheckerLibrary.Get Test From Suite" timeout="" type="kw">
                        <doc/>
                        <arguments>
                            <arg>${SUITE}</arg>
                            <arg>${name}</arg>
                        </arguments>
                        <msg level="INFO" timestamp="20130409 15:06:57.457">${test} = Run Keyword With Missing Keyword</msg>
                        <status endtime="20130409 15:06:57.456" starttime="20130409 15:06:57.456" status="PASS"/>
                    </kw>
                    <kw name="TestCheckerLibrary.Check Test Status" timeout="" type="kw">
                        <doc>Verifies that test's status and message are as expected.</doc>
                        <arguments>
                            <arg>${test}</arg>
                            <arg>${status}</arg>
                            <arg>${message}</arg>
                        </arguments>
                        <status endtime="20130409 15:06:57.457" starttime="20130409 15:06:57.457" status="PASS"/>
                    </kw>
                    <status endtime="20130409 15:06:57.457" starttime="20130409 15:06:57.454" status="PASS"/>
                </kw>
                <doc/>
                <tags>
                    <tag>jybot</tag>
                    <tag>pybot</tag>
                    <tag>regression</tag>
                </tags>
                <status critical="yes" endtime="20130409 15:06:57.458" starttime="20130409 15:06:57.453" status="PASS"/>
            </test>
            <test id="s1-s2-t3" name="Run Keyword With Variable In Keyword Name" timeout="">
                <kw name="atest_resource.Check Test Case" timeout="" type="kw">
                    <doc/>
                    <arguments>
                        <arg>${TESTNAME}</arg>
                    </arguments>
                    <kw name="${test} = TestCheckerLibrary.Get Test From Suite" timeout="" type="kw">
                        <doc/>
                        <arguments>
                            <arg>${SUITE}</arg>
                            <arg>${name}</arg>
                        </arguments>
                        <msg level="INFO" timestamp="20130409 15:06:57.461">${test} = Run Keyword With Variable In Keyword Name</msg>
                        <status endtime="20130409 15:06:57.461" starttime="20130409 15:06:57.460" status="PASS"/>
                    </kw>
                    <kw name="TestCheckerLibrary.Check Test Status" timeout="" type="kw">
                        <doc>Verifies that test's status and message are as expected.</doc>
                        <arguments>
                            <arg>${test}</arg>
                            <arg>${status}</arg>
                            <arg>${message}</arg>
                        </arguments>
                        <status endtime="20130409 15:06:57.462" starttime="20130409 15:06:57.461" status="PASS"/>
                    </kw>
                    <status endtime="20130409 15:06:57.462" starttime="20130409 15:06:57.459" status="PASS"/>
                </kw>
                <doc/>
                <tags>
                    <tag>jybot</tag>
                    <tag>pybot</tag>
                    <tag>regression</tag>
                </tags>
                <status critical="yes" endtime="20130409 15:06:57.462" starttime="20130409 15:06:57.458" status="PASS"/>
            </test>
            <test id="s1-s2-t4" name="Run Keyword With UK" timeout="">
                <kw name="atest_resource.Check Test Case" timeout="" type="kw">
                    <doc/>
                    <arguments>
                        <arg>${TESTNAME}</arg>
                    </arguments>
                    <kw name="${test} = TestCheckerLibrary.Get Test From Suite" timeout="" type="kw">
                        <doc/>
                        <arguments>
                            <arg>${SUITE}</arg>
                            <arg>${name}</arg>
                        </arguments>
                        <msg level="INFO" timestamp="20130409 15:06:57.466">${test} = Run Keyword With UK</msg>
                        <status endtime="20130409 15:06:57.466" starttime="20130409 15:06:57.465" status="PASS"/>
                    </kw>
                    <kw name="TestCheckerLibrary.Check Test Status" timeout="" type="kw">
                        <doc>Verifies that test's status and message are as expected.</doc>
                        <arguments>
                            <arg>${test}</arg>
                            <arg>${status}</arg>
                            <arg>${message}</arg>
                        </arguments>
                        <status endtime="20130409 15:06:57.466" starttime="20130409 15:06:57.466" status="PASS"/>
                    </kw>
                    <status endtime="20130409 15:06:57.467" starttime="20130409 15:06:57.464" status="PASS"/>
                </kw>
                <doc/>
                <tags>
                    <tag>jybot</tag>
                    <tag>pybot</tag>
                    <tag>regression</tag>
                </tags>
                <status critical="yes" endtime="20130409 15:06:57.467" starttime="20130409 15:06:57.463" status="PASS"/>
            </test>
            <test id="s1-s2-t5" name="Run Keyword With Failing UK" timeout="">
                <kw name="atest_resource.Check Test Case" timeout="" type="kw">
                    <doc/>
                    <arguments>
                        <arg>${TESTNAME}</arg>
                    </arguments>
                    <kw name="${test} = TestCheckerLibrary.Get Test From Suite" timeout="" type="kw">
                        <doc/>
                        <arguments>
                            <arg>${SUITE}</arg>
                            <arg>${name}</arg>
                        </arguments>
                        <msg level="INFO" timestamp="20130409 15:06:57.470">${test} = Run Keyword With Failing UK</msg>
                        <status endtime="20130409 15:06:57.470" starttime="20130409 15:06:57.469" status="PASS"/>
                    </kw>
                    <kw name="TestCheckerLibrary.Check Test Status" timeout="" type="kw">
                        <doc>Verifies that test's status and message are as expected.</doc>
                        <arguments>
                            <arg>${test}</arg>
                            <arg>${status}</arg>
                            <arg>${message}</arg>
                        </arguments>
                        <status endtime="20130409 15:06:57.471" starttime="20130409 15:06:57.470" status="PASS"/>
                    </kw>
                    <status endtime="20130409 15:06:57.471" starttime="20130409 15:06:57.468" status="PASS"/>
                </kw>
                <doc/>
                <tags>
                    <tag>jybot</tag>
                    <tag>pybot</tag>
                    <tag>regression</tag>
                </tags>
                <status critical="yes" endtime="20130409 15:06:57.471" starttime="20130409 15:06:57.467" status="PASS"/>
            </test>
            <test id="s1-s2-t6" name="Comment" timeout="">
                <kw name="atest_resource.Check Test Case" timeout="" type="kw">
                    <doc/>
                    <arguments>
                        <arg>${TESTNAME}</arg>
                    </arguments>
                    <kw name="${test} = TestCheckerLibrary.Get Test From Suite" timeout="" type="kw">
                        <doc/>
                        <arguments>
                            <arg>${SUITE}</arg>
                            <arg>${name}</arg>
                        </arguments>
                        <msg level="INFO" timestamp="20130409 15:06:57.474">${test} = Comment</msg>
                        <status endtime="20130409 15:06:57.474" starttime="20130409 15:06:57.473" status="PASS"/>
                    </kw>
                    <kw name="TestCheckerLibrary.Check Test Status" timeout="" type="kw">
                        <doc>Verifies that test's status and message are as expected.</doc>
                        <arguments>
                            <arg>${test}</arg>
                            <arg>${status}</arg>
                            <arg>${message}</arg>
                        </arguments>
                        <status endtime="20130409 15:06:57.475" starttime="20130409 15:06:57.475" status="PASS"/>
                    </kw>
                    <status endtime="20130409 15:06:57.475" starttime="20130409 15:06:57.472" status="PASS"/>
                </kw>
                <doc/>
                <tags>
                    <tag>jybot</tag>
                    <tag>pybot</tag>
                    <tag>regression</tag>
                </tags>
                <status critical="yes" endtime="20130409 15:06:57.475" starttime="20130409 15:06:57.471" status="PASS"/>
            </test>
            <test id="s1-s2-t7" name="Set Test/Suite/Global Variable" timeout="">
                <kw name="atest_resource.Check Test Case" timeout="" type="kw">
                    <doc/>
                    <arguments>
                        <arg>${TESTNAME}</arg>
                    </arguments>
                    <kw name="${test} = TestCheckerLibrary.Get Test From Suite" timeout="" type="kw">
                        <doc/>
                        <arguments>
                            <arg>${SUITE}</arg>
                            <arg>${name}</arg>
                        </arguments>
                        <msg level="INFO" timestamp="20130409 15:06:57.479">${test} = Set Test/Suite/Global Variable</msg>
                        <status endtime="20130409 15:06:57.478" starttime="20130409 15:06:57.478" status="PASS"/>
                    </kw>
                    <kw name="TestCheckerLibrary.Check Test Status" timeout="" type="kw">
                        <doc>Verifies that test's status and message are as expected.</doc>
                        <arguments>
                            <arg>${test}</arg>
                            <arg>${status}</arg>
                            <arg>${message}</arg>
                        </arguments>
                        <status endtime="20130409 15:06:57.479" starttime="20130409 15:06:57.479" status="PASS"/>
                    </kw>
                    <status endtime="20130409 15:06:57.480" starttime="20130409 15:06:57.476" status="PASS"/>
                </kw>
                <doc/>
                <tags>
                    <tag>jybot</tag>
                    <tag>pybot</tag>
                    <tag>regression</tag>
                </tags>
                <status critical="yes" endtime="20130409 15:06:57.480" starttime="20130409 15:06:57.476" status="PASS"/>
            </test>
            <test id="s1-s2-t8" name="Variable Should (Not) Exist" timeout="">
                <kw name="atest_resource.Check Test Case" timeout="" type="kw">
                    <doc/>
                    <arguments>
                        <arg>${TESTNAME}</arg>
                    </arguments>
                    <kw name="${test} = TestCheckerLibrary.Get Test From Suite" timeout="" type="kw">
                        <doc/>
                        <arguments>
                            <arg>${SUITE}</arg>
                            <arg>${name}</arg>
                        </arguments>
                        <msg level="INFO" timestamp="20130409 15:06:57.484">${test} = Variable Should (Not) Exist</msg>
                        <status endtime="20130409 15:06:57.484" starttime="20130409 15:06:57.483" status="PASS"/>
                    </kw>
                    <kw name="TestCheckerLibrary.Check Test Status" timeout="" type="kw">
                        <doc>Verifies that test's status and message are as expected.</doc>
                        <arguments>
                            <arg>${test}</arg>
                            <arg>${status}</arg>
                            <arg>${message}</arg>
                        </arguments>
                        <status endtime="20130409 15:06:57.486" starttime="20130409 15:06:57.485" status="PASS"/>
                    </kw>
                    <status endtime="20130409 15:06:57.486" starttime="20130409 15:06:57.481" status="PASS"/>
                </kw>
                <doc/>
                <tags>
                    <tag>jybot</tag>
                    <tag>pybot</tag>
                    <tag>regression</tag>
                </tags>
                <status critical="yes" endtime="20130409 15:06:57.486" starttime="20130409 15:06:57.480" status="PASS"/>
            </test>
            <test id="s1-s2-t9" name="Get Variable Value" timeout="">
                <kw name="atest_resource.Check Test Case" timeout="" type="kw">
                    <doc/>
                    <arguments>
                        <arg>${TESTNAME}</arg>
                    </arguments>
                    <kw name="${test} = TestCheckerLibrary.Get Test From Suite" timeout="" type="kw">
                        <doc/>
                        <arguments>
                            <arg>${SUITE}</arg>
                            <arg>${name}</arg>
                        </arguments>
                        <msg level="INFO" timestamp="20130409 15:06:57.493">${test} = Get Variable Value</msg>
                        <status endtime="20130409 15:06:57.492" starttime="20130409 15:06:57.491" status="PASS"/>
                    </kw>
                    <kw name="TestCheckerLibrary.Check Test Status" timeout="" type="kw">
                        <doc>Verifies that test's status and message are as expected.</doc>
                        <arguments>
                            <arg>${test}</arg>
                            <arg>${status}</arg>
                            <arg>${message}</arg>
                        </arguments>
                        <status endtime="20130409 15:06:57.494" starttime="20130409 15:06:57.493" status="PASS"/>
                    </kw>
                    <status endtime="20130409 15:06:57.494" starttime="20130409 15:06:57.488" status="PASS"/>
                </kw>
                <doc/>
                <tags>
                    <tag>jybot</tag>
                    <tag>pybot</tag>
                    <tag>regression</tag>
                </tags>
                <status critical="yes" endtime="20130409 15:06:57.495" starttime="20130409 15:06:57.487" status="PASS"/>
            </test>
            <test id="s1-s2-t10" name="Set Variable If" timeout="">
                <kw name="atest_resource.Check Test Case" timeout="" type="kw">
                    <doc/>
                    <arguments>
                        <arg>${TESTNAME}</arg>
                    </arguments>
                    <kw name="${test} = TestCheckerLibrary.Get Test From Suite" timeout="" type="kw">
                        <doc/>
                        <arguments>
                            <arg>${SUITE}</arg>
                            <arg>${name}</arg>
                        </arguments>
                        <msg level="INFO" timestamp="20130409 15:06:57.499">${test} = Set Variable If</msg>
                        <status endtime="20130409 15:06:57.499" starttime="20130409 15:06:57.498" status="PASS"/>
                    </kw>
                    <kw name="TestCheckerLibrary.Check Test Status" timeout="" type="kw">
                        <doc>Verifies that test's status and message are as expected.</doc>
                        <arguments>
                            <arg>${test}</arg>
                            <arg>${status}</arg>
                            <arg>${message}</arg>
                        </arguments>
                        <status endtime="20130409 15:06:57.500" starttime="20130409 15:06:57.499" status="PASS"/>
                    </kw>
                    <status endtime="20130409 15:06:57.500" starttime="20130409 15:06:57.496" status="PASS"/>
                </kw>
                <doc/>
                <tags>
                    <tag>jybot</tag>
                    <tag>pybot</tag>
                    <tag>regression</tag>
                </tags>
                <status critical="yes" endtime="20130409 15:06:57.500" starttime="20130409 15:06:57.495" status="PASS"/>
            </test>
            <test id="s1-s2-t11" name="Run Keywords When All Keywords Pass" timeout="">
                <kw name="atest_resource.Check Test Case" timeout="" type="kw">
                    <doc/>
                    <arguments>
                        <arg>${TESTNAME}</arg>
                    </arguments>
                    <kw name="${test} = TestCheckerLibrary.Get Test From Suite" timeout="" type="kw">
                        <doc/>
                        <arguments>
                            <arg>${SUITE}</arg>
                            <arg>${name}</arg>
                        </arguments>
                        <msg level="INFO" timestamp="20130409 15:06:57.504">${test} = Run Keywords When All Keywords Pass</msg>
                        <status endtime="20130409 15:06:57.504" starttime="20130409 15:06:57.503" status="PASS"/>
                    </kw>
                    <kw name="TestCheckerLibrary.Check Test Status" timeout="" type="kw">
                        <doc>Verifies that test's status and message are as expected.</doc>
                        <arguments>
                            <arg>${test}</arg>
                            <arg>${status}</arg>
                            <arg>${message}</arg>
                        </arguments>
                        <status endtime="20130409 15:06:57.504" starttime="20130409 15:06:57.504" status="PASS"/>
                    </kw>
                    <status endtime="20130409 15:06:57.505" starttime="20130409 15:06:57.502" status="PASS"/>
                </kw>
                <doc/>
                <tags>
                    <tag>jybot</tag>
                    <tag>pybot</tag>
                    <tag>regression</tag>
                </tags>
                <status critical="yes" endtime="20130409 15:06:57.505" starttime="20130409 15:06:57.501" status="PASS"/>
            </test>
            <test id="s1-s2-t12" name="Run Keywords When One Keyword Fails" timeout="">
                <kw name="atest_resource.Check Test Case" timeout="" type="kw">
                    <doc/>
                    <arguments>
                        <arg>${TESTNAME}</arg>
                    </arguments>
                    <kw name="${test} = TestCheckerLibrary.Get Test From Suite" timeout="" type="kw">
                        <doc/>
                        <arguments>
                            <arg>${SUITE}</arg>
                            <arg>${name}</arg>
                        </arguments>
                        <msg level="INFO" timestamp="20130409 15:06:57.508">${test} = Run Keywords When One Keyword Fails</msg>
                        <status endtime="20130409 15:06:57.508" starttime="20130409 15:06:57.507" status="PASS"/>
                    </kw>
                    <kw name="TestCheckerLibrary.Check Test Status" timeout="" type="kw">
                        <doc>Verifies that test's status and message are as expected.</doc>
                        <arguments>
                            <arg>${test}</arg>
                            <arg>${status}</arg>
                            <arg>${message}</arg>
                        </arguments>
                        <status endtime="20130409 15:06:57.509" starttime="20130409 15:06:57.509" status="PASS"/>
                    </kw>
                    <status endtime="20130409 15:06:57.509" starttime="20130409 15:06:57.506" status="PASS"/>
                </kw>
                <doc/>
                <tags>
                    <tag>jybot</tag>
                    <tag>pybot</tag>
                    <tag>regression</tag>
                </tags>
                <status critical="yes" endtime="20130409 15:06:57.509" starttime="20130409 15:06:57.505" status="PASS"/>
            </test>
            <test id="s1-s2-t13" name="Run Keywords When Multiple Keyword Fails" timeout="">
                <kw name="atest_resource.Check Test Case" timeout="" type="kw">
                    <doc/>
                    <arguments>
                        <arg>${TESTNAME}</arg>
                    </arguments>
                    <kw name="${test} = TestCheckerLibrary.Get Test From Suite" timeout="" type="kw">
                        <doc/>
                        <arguments>
                            <arg>${SUITE}</arg>
                            <arg>${name}</arg>
                        </arguments>
                        <msg level="INFO" timestamp="20130409 15:06:57.513">${test} = Run Keywords When Multiple Keyword Fails</msg>
                        <status endtime="20130409 15:06:57.512" starttime="20130409 15:06:57.512" status="PASS"/>
                    </kw>
                    <kw name="TestCheckerLibrary.Check Test Status" timeout="" type="kw">
                        <doc>Verifies that test's status and message are as expected.</doc>
                        <arguments>
                            <arg>${test}</arg>
                            <arg>${status}</arg>
                            <arg>${message}</arg>
                        </arguments>
                        <status endtime="20130409 15:06:57.513" starttime="20130409 15:06:57.513" status="PASS"/>
                    </kw>
                    <status endtime="20130409 15:06:57.513" starttime="20130409 15:06:57.511" status="PASS"/>
                </kw>
                <doc/>
                <tags>
                    <tag>jybot</tag>
                    <tag>pybot</tag>
                    <tag>regression</tag>
                </tags>
                <status critical="yes" endtime="20130409 15:06:57.514" starttime="20130409 15:06:57.510" status="PASS"/>
            </test>
            <test id="s1-s2-t14" name="Run Keywords With Arguments When All Keywords Pass" timeout="">
                <kw name="atest_resource.Test Should Have Correct Keywords" timeout="" type="kw">
                    <doc/>
                    <arguments>
                        <arg>BuiltIn.Log Many</arg>
                        <arg>BuiltIn.No Operation</arg>
                    </arguments>
                    <kw name="${tc} = atest_resource.Check Test Case" timeout="" type="kw">
                        <doc/>
                        <arguments>
                            <arg>${TESTNAME}</arg>
                        </arguments>
                        <kw name="${test} = TestCheckerLibrary.Get Test From Suite" timeout="" type="kw">
                            <doc/>
                            <arguments>
                                <arg>${SUITE}</arg>
                                <arg>${name}</arg>
                            </arguments>
                            <msg level="INFO" timestamp="20130409 15:06:57.518">${test} = Run Keywords With Arguments When All Keywords Pass</msg>
                            <status endtime="20130409 15:06:57.518" starttime="20130409 15:06:57.517" status="PASS"/>
                        </kw>
                        <kw name="TestCheckerLibrary.Check Test Status" timeout="" type="kw">
                            <doc>Verifies that test's status and message are as expected.</doc>
                            <arguments>
                                <arg>${test}</arg>
                                <arg>${status}</arg>
                                <arg>${message}</arg>
                            </arguments>
                            <status endtime="20130409 15:06:57.519" starttime="20130409 15:06:57.518" status="PASS"/>
                        </kw>
                        <msg level="INFO" timestamp="20130409 15:06:57.519">${tc} = Run Keywords With Arguments When All Keywords Pass</msg>
                        <status endtime="20130409 15:06:57.519" starttime="20130409 15:06:57.516" status="PASS"/>
                    </kw>
                    <kw name="TestCheckerLibrary.Should Contain Keywords" timeout="" type="kw">
                        <doc/>
                        <arguments>
                            <arg>${tc.kws[0]}</arg>
                            <arg>@{expected}</arg>
                        </arguments>
                        <status endtime="20130409 15:06:57.520" starttime="20130409 15:06:57.519" status="PASS"/>
                    </kw>
                    <status endtime="20130409 15:06:57.520" starttime="20130409 15:06:57.515" status="PASS"/>
                </kw>
                <doc/>
                <tags>
                    <tag>jybot</tag>
                    <tag>pybot</tag>
                    <tag>regression</tag>
                </tags>
                <status critical="yes" endtime="20130409 15:06:57.520" starttime="20130409 15:06:57.514" status="PASS"/>
            </test>
            <test id="s1-s2-t15" name="Run Keywords With Arguments When One Keyword Fails" timeout="">
                <kw name="atest_resource.Test Should Have Correct Keywords" timeout="" type="kw">
                    <doc/>
                    <arguments>
                        <arg>BuiltIn.Log</arg>
                        <arg>BuiltIn.Log</arg>
                    </arguments>
                    <kw name="${tc} = atest_resource.Check Test Case" timeout="" type="kw">
                        <doc/>
                        <arguments>
                            <arg>${TESTNAME}</arg>
                        </arguments>
                        <kw name="${test} = TestCheckerLibrary.Get Test From Suite" timeout="" type="kw">
                            <doc/>
                            <arguments>
                                <arg>${SUITE}</arg>
                                <arg>${name}</arg>
                            </arguments>
                            <msg level="INFO" timestamp="20130409 15:06:57.524">${test} = Run Keywords With Arguments When One Keyword Fails</msg>
                            <status endtime="20130409 15:06:57.524" starttime="20130409 15:06:57.524" status="PASS"/>
                        </kw>
                        <kw name="TestCheckerLibrary.Check Test Status" timeout="" type="kw">
                            <doc>Verifies that test's status and message are as expected.</doc>
                            <arguments>
                                <arg>${test}</arg>
                                <arg>${status}</arg>
                                <arg>${message}</arg>
                            </arguments>
                            <status endtime="20130409 15:06:57.525" starttime="20130409 15:06:57.525" status="PASS"/>
                        </kw>
                        <msg level="INFO" timestamp="20130409 15:06:57.525">${tc} = Run Keywords With Arguments When One Keyword Fails</msg>
                        <status endtime="20130409 15:06:57.525" starttime="20130409 15:06:57.522" status="PASS"/>
                    </kw>
                    <kw name="TestCheckerLibrary.Should Contain Keywords" timeout="" type="kw">
                        <doc/>
                        <arguments>
                            <arg>${tc.kws[0]}</arg>
                            <arg>@{expected}</arg>
                        </arguments>
                        <status endtime="20130409 15:06:57.526" starttime="20130409 15:06:57.526" status="PASS"/>
                    </kw>
                    <status endtime="20130409 15:06:57.526" starttime="20130409 15:06:57.522" status="PASS"/>
                </kw>
                <doc/>
                <tags>
                    <tag>jybot</tag>
                    <tag>pybot</tag>
                    <tag>regression</tag>
                </tags>
                <status critical="yes" endtime="20130409 15:06:57.526" starttime="20130409 15:06:57.520" status="PASS"/>
            </test>
            <test id="s1-s2-t16" name="Run Keywords With Arguments When Multiple Keyword Fails" timeout="">
                <kw name="atest_resource.Test Should Have Correct Keywords" timeout="" type="kw">
                    <doc/>
                    <arguments>
                        <arg>BuiltIn.Log</arg>
                        <arg>no kw</arg>
                    </arguments>
                    <kw name="${tc} = atest_resource.Check Test Case" timeout="" type="kw">
                        <doc/>
                        <arguments>
                            <arg>${TESTNAME}</arg>
                        </arguments>
                        <kw name="${test} = TestCheckerLibrary.Get Test From Suite" timeout="" type="kw">
                            <doc/>
                            <arguments>
                                <arg>${SUITE}</arg>
                                <arg>${name}</arg>
                            </arguments>
                            <msg level="INFO" timestamp="20130409 15:06:57.533">${test} = Run Keywords With Arguments When Multiple Keyword Fails</msg>
                            <status endtime="20130409 15:06:57.533" starttime="20130409 15:06:57.532" status="PASS"/>
                        </kw>
                        <kw name="TestCheckerLibrary.Check Test Status" timeout="" type="kw">
                            <doc>Verifies that test's status and message are as expected.</doc>
                            <arguments>
                                <arg>${test}</arg>
                                <arg>${status}</arg>
                                <arg>${message}</arg>
                            </arguments>
                            <status endtime="20130409 15:06:57.535" starttime="20130409 15:06:57.534" status="PASS"/>
                        </kw>
                        <msg level="INFO" timestamp="20130409 15:06:57.536">${tc} = Run Keywords With Arguments When Multiple Keyword Fails</msg>
                        <status endtime="20130409 15:06:57.535" starttime="20130409 15:06:57.529" status="PASS"/>
                    </kw>
                    <kw name="TestCheckerLibrary.Should Contain Keywords" timeout="" type="kw">
                        <doc/>
                        <arguments>
                            <arg>${tc.kws[0]}</arg>
                            <arg>@{expected}</arg>
                        </arguments>
                        <status endtime="20130409 15:06:57.537" starttime="20130409 15:06:57.536" status="PASS"/>
                    </kw>
                    <status endtime="20130409 15:06:57.537" starttime="20130409 15:06:57.528" status="PASS"/>
                </kw>
                <doc/>
                <tags>
                    <tag>jybot</tag>
                    <tag>pybot</tag>
                    <tag>regression</tag>
                </tags>
                <status critical="yes" endtime="20130409 15:06:57.538" starttime="20130409 15:06:57.527" status="PASS"/>
            </test>
            <test id="s1-s2-t17" name="Run Keywords With Arguments With Variables" timeout="">
                <kw name="atest_resource.Test Should Have Correct Keywords" timeout="" type="kw">
                    <doc/>
                    <arguments>
                        <arg>BuiltIn.Log</arg>
                    </arguments>
                    <kw name="${tc} = atest_resource.Check Test Case" timeout="" type="kw">
                        <doc/>
                        <arguments>
                            <arg>${TESTNAME}</arg>
                        </arguments>
                        <kw name="${test} = TestCheckerLibrary.Get Test From Suite" timeout="" type="kw">
                            <doc/>
                            <arguments>
                                <arg>${SUITE}</arg>
                                <arg>${name}</arg>
                            </arguments>
                            <msg level="INFO" timestamp="20130409 15:06:57.543">${test} = Run Keywords With Arguments With Variables</msg>
                            <status endtime="20130409 15:06:57.543" starttime="20130409 15:06:57.542" status="PASS"/>
                        </kw>
                        <kw name="TestCheckerLibrary.Check Test Status" timeout="" type="kw">
                            <doc>Verifies that test's status and message are as expected.</doc>
                            <arguments>
                                <arg>${test}</arg>
                                <arg>${status}</arg>
                                <arg>${message}</arg>
                            </arguments>
                            <status endtime="20130409 15:06:57.544" starttime="20130409 15:06:57.544" status="PASS"/>
                        </kw>
                        <msg level="INFO" timestamp="20130409 15:06:57.544">${tc} = Run Keywords With Arguments With Variables</msg>
                        <status endtime="20130409 15:06:57.544" starttime="20130409 15:06:57.541" status="PASS"/>
                    </kw>
                    <kw name="TestCheckerLibrary.Should Contain Keywords" timeout="" type="kw">
                        <doc/>
                        <arguments>
                            <arg>${tc.kws[0]}</arg>
                            <arg>@{expected}</arg>
                        </arguments>
                        <status endtime="20130409 15:06:57.547" starttime="20130409 15:06:57.545" status="PASS"/>
                    </kw>
                    <status endtime="20130409 15:06:57.548" starttime="20130409 15:06:57.540" status="PASS"/>
                </kw>
                <doc/>
                <tags>
                    <tag>jybot</tag>
                    <tag>pybot</tag>
                    <tag>regression</tag>
                </tags>
                <status critical="yes" endtime="20130409 15:06:57.548" starttime="20130409 15:06:57.538" status="PASS"/>
            </test>
            <test id="s1-s2-t18" name="Run Keyword in For Loop Pass" timeout="">
                <kw name="atest_resource.Check Test Case" timeout="" type="kw">
                    <doc/>
                    <arguments>
                        <arg>${TESTNAME}</arg>
                    </arguments>
                    <kw name="${test} = TestCheckerLibrary.Get Test From Suite" timeout="" type="kw">
                        <doc/>
                        <arguments>
                            <arg>${SUITE}</arg>
                            <arg>${name}</arg>
                        </arguments>
                        <msg level="INFO" timestamp="20130409 15:06:57.551">${test} = Run Keyword in For Loop Pass</msg>
                        <status endtime="20130409 15:06:57.551" starttime="20130409 15:06:57.551" status="PASS"/>
                    </kw>
                    <kw name="TestCheckerLibrary.Check Test Status" timeout="" type="kw">
                        <doc>Verifies that test's status and message are as expected.</doc>
                        <arguments>
                            <arg>${test}</arg>
                            <arg>${status}</arg>
                            <arg>${message}</arg>
                        </arguments>
                        <status endtime="20130409 15:06:57.552" starttime="20130409 15:06:57.552" status="PASS"/>
                    </kw>
                    <status endtime="20130409 15:06:57.552" starttime="20130409 15:06:57.549" status="PASS"/>
                </kw>
                <doc/>
                <tags>
                    <tag>jybot</tag>
                    <tag>pybot</tag>
                    <tag>regression</tag>
                </tags>
                <status critical="yes" endtime="20130409 15:06:57.553" starttime="20130409 15:06:57.548" status="PASS"/>
            </test>
            <test id="s1-s2-t19" name="Run Keyword in For Loop Fail" timeout="">
                <kw name="atest_resource.Check Test Case" timeout="" type="kw">
                    <doc/>
                    <arguments>
                        <arg>${TESTNAME}</arg>
                    </arguments>
                    <kw name="${test} = TestCheckerLibrary.Get Test From Suite" timeout="" type="kw">
                        <doc/>
                        <arguments>
                            <arg>${SUITE}</arg>
                            <arg>${name}</arg>
                        </arguments>
                        <msg level="INFO" timestamp="20130409 15:06:57.556">${test} = Run Keyword in For Loop Fail</msg>
                        <status endtime="20130409 15:06:57.556" starttime="20130409 15:06:57.555" status="PASS"/>
                    </kw>
                    <kw name="TestCheckerLibrary.Check Test Status" timeout="" type="kw">
                        <doc>Verifies that test's status and message are as expected.</doc>
                        <arguments>
                            <arg>${test}</arg>
                            <arg>${status}</arg>
                            <arg>${message}</arg>
                        </arguments>
                        <status endtime="20130409 15:06:57.557" starttime="20130409 15:06:57.556" status="PASS"/>
                    </kw>
                    <status endtime="20130409 15:06:57.557" starttime="20130409 15:06:57.554" status="PASS"/>
                </kw>
                <doc/>
                <tags>
                    <tag>jybot</tag>
                    <tag>pybot</tag>
                    <tag>regression</tag>
                </tags>
                <status critical="yes" endtime="20130409 15:06:57.557" starttime="20130409 15:06:57.553" status="PASS"/>
            </test>
            <test id="s1-s2-t20" name="Wait Until Keyword Succeeds Pass" timeout="">
                <kw name="atest_resource.Check Test Case" timeout="" type="kw">
                    <doc/>
                    <arguments>
                        <arg>${TESTNAME}</arg>
                    </arguments>
                    <kw name="${test} = TestCheckerLibrary.Get Test From Suite" timeout="" type="kw">
                        <doc/>
                        <arguments>
                            <arg>${SUITE}</arg>
                            <arg>${name}</arg>
                        </arguments>
                        <msg level="INFO" timestamp="20130409 15:06:57.561">${test} = Wait Until Keyword Succeeds Pass</msg>
                        <status endtime="20130409 15:06:57.561" starttime="20130409 15:06:57.560" status="PASS"/>
                    </kw>
                    <kw name="TestCheckerLibrary.Check Test Status" timeout="" type="kw">
                        <doc>Verifies that test's status and message are as expected.</doc>
                        <arguments>
                            <arg>${test}</arg>
                            <arg>${status}</arg>
                            <arg>${message}</arg>
                        </arguments>
                        <status endtime="20130409 15:06:57.562" starttime="20130409 15:06:57.561" status="PASS"/>
                    </kw>
                    <status endtime="20130409 15:06:57.562" starttime="20130409 15:06:57.559" status="PASS"/>
                </kw>
                <doc/>
                <tags>
                    <tag>jybot</tag>
                    <tag>pybot</tag>
                    <tag>regression</tag>
                </tags>
                <status critical="yes" endtime="20130409 15:06:57.562" starttime="20130409 15:06:57.558" status="PASS"/>
            </test>
            <test id="s1-s2-t21" name="Wait Until Keyword Succeeds Fail" timeout="">
                <kw name="atest_resource.Check Test Case" timeout="" type="kw">
                    <doc/>
                    <arguments>
                        <arg>${TESTNAME}</arg>
                    </arguments>
                    <kw name="${test} = TestCheckerLibrary.Get Test From Suite" timeout="" type="kw">
                        <doc/>
                        <arguments>
                            <arg>${SUITE}</arg>
                            <arg>${name}</arg>
                        </arguments>
                        <msg level="INFO" timestamp="20130409 15:06:57.565">${test} = Wait Until Keyword Succeeds Fail</msg>
                        <status endtime="20130409 15:06:57.565" starttime="20130409 15:06:57.564" status="PASS"/>
                    </kw>
                    <kw name="TestCheckerLibrary.Check Test Status" timeout="" type="kw">
                        <doc>Verifies that test's status and message are as expected.</doc>
                        <arguments>
                            <arg>${test}</arg>
                            <arg>${status}</arg>
                            <arg>${message}</arg>
                        </arguments>
                        <status endtime="20130409 15:06:57.566" starttime="20130409 15:06:57.565" status="PASS"/>
                    </kw>
                    <status endtime="20130409 15:06:57.566" starttime="20130409 15:06:57.563" status="PASS"/>
                </kw>
                <doc/>
                <tags>
                    <tag>jybot</tag>
                    <tag>pybot</tag>
                    <tag>regression</tag>
                </tags>
                <status critical="yes" endtime="20130409 15:06:57.566" starttime="20130409 15:06:57.562" status="PASS"/>
            </test>
            <test id="s1-s2-t22" name="Run Keyword If Pass" timeout="">
                <kw name="atest_resource.Check Test Case" timeout="" type="kw">
                    <doc/>
                    <arguments>
                        <arg>${TESTNAME}</arg>
                    </arguments>
                    <kw name="${test} = TestCheckerLibrary.Get Test From Suite" timeout="" type="kw">
                        <doc/>
                        <arguments>
                            <arg>${SUITE}</arg>
                            <arg>${name}</arg>
                        </arguments>
                        <msg level="INFO" timestamp="20130409 15:06:57.569">${test} = Run Keyword If Pass</msg>
                        <status endtime="20130409 15:06:57.569" starttime="20130409 15:06:57.568" status="PASS"/>
                    </kw>
                    <kw name="TestCheckerLibrary.Check Test Status" timeout="" type="kw">
                        <doc>Verifies that test's status and message are as expected.</doc>
                        <arguments>
                            <arg>${test}</arg>
                            <arg>${status}</arg>
                            <arg>${message}</arg>
                        </arguments>
                        <status endtime="20130409 15:06:57.570" starttime="20130409 15:06:57.570" status="PASS"/>
                    </kw>
                    <status endtime="20130409 15:06:57.570" starttime="20130409 15:06:57.567" status="PASS"/>
                </kw>
                <doc/>
                <tags>
                    <tag>jybot</tag>
                    <tag>pybot</tag>
                    <tag>regression</tag>
                </tags>
                <status critical="yes" endtime="20130409 15:06:57.570" starttime="20130409 15:06:57.566" status="PASS"/>
            </test>
            <test id="s1-s2-t23" name="Run Keyword If Fail" timeout="">
                <kw name="atest_resource.Check Test Case" timeout="" type="kw">
                    <doc/>
                    <arguments>
                        <arg>${TESTNAME}</arg>
                    </arguments>
                    <kw name="${test} = TestCheckerLibrary.Get Test From Suite" timeout="" type="kw">
                        <doc/>
                        <arguments>
                            <arg>${SUITE}</arg>
                            <arg>${name}</arg>
                        </arguments>
                        <msg level="INFO" timestamp="20130409 15:06:57.574">${test} = Run Keyword If Fail</msg>
                        <status endtime="20130409 15:06:57.574" starttime="20130409 15:06:57.573" status="PASS"/>
                    </kw>
                    <kw name="TestCheckerLibrary.Check Test Status" timeout="" type="kw">
                        <doc>Verifies that test's status and message are as expected.</doc>
                        <arguments>
                            <arg>${test}</arg>
                            <arg>${status}</arg>
                            <arg>${message}</arg>
                        </arguments>
                        <status endtime="20130409 15:06:57.575" starttime="20130409 15:06:57.574" status="PASS"/>
                    </kw>
                    <status endtime="20130409 15:06:57.575" starttime="20130409 15:06:57.572" status="PASS"/>
                </kw>
                <doc/>
                <tags>
                    <tag>jybot</tag>
                    <tag>pybot</tag>
                    <tag>regression</tag>
                </tags>
                <status critical="yes" endtime="20130409 15:06:57.575" starttime="20130409 15:06:57.571" status="PASS"/>
            </test>
            <test id="s1-s2-t24" name="Run Keyword If with ELSE" timeout="">
                <kw name="atest_resource.Check Test Case" timeout="" type="kw">
                    <doc/>
                    <arguments>
                        <arg>${TESTNAME}</arg>
                    </arguments>
                    <kw name="${test} = TestCheckerLibrary.Get Test From Suite" timeout="" type="kw">
                        <doc/>
                        <arguments>
                            <arg>${SUITE}</arg>
                            <arg>${name}</arg>
                        </arguments>
                        <msg level="INFO" timestamp="20130409 15:06:57.582">${test} = Run Keyword If with ELSE</msg>
                        <status endtime="20130409 15:06:57.582" starttime="20130409 15:06:57.580" status="PASS"/>
                    </kw>
                    <kw name="TestCheckerLibrary.Check Test Status" timeout="" type="kw">
                        <doc>Verifies that test's status and message are as expected.</doc>
                        <arguments>
                            <arg>${test}</arg>
                            <arg>${status}</arg>
                            <arg>${message}</arg>
                        </arguments>
                        <status endtime="20130409 15:06:57.583" starttime="20130409 15:06:57.583" status="PASS"/>
                    </kw>
                    <status endtime="20130409 15:06:57.583" starttime="20130409 15:06:57.578" status="PASS"/>
                </kw>
                <doc/>
                <tags>
                    <tag>jybot</tag>
                    <tag>pybot</tag>
                    <tag>regression</tag>
                </tags>
                <status critical="yes" endtime="20130409 15:06:57.584" starttime="20130409 15:06:57.576" status="PASS"/>
            </test>
            <test id="s1-s2-t25" name="Run Keyword If with ELSE IF" timeout="">
                <kw name="atest_resource.Check Test Case" timeout="" type="kw">
                    <doc/>
                    <arguments>
                        <arg>${TESTNAME}</arg>
                    </arguments>
                    <kw name="${test} = TestCheckerLibrary.Get Test From Suite" timeout="" type="kw">
                        <doc/>
                        <arguments>
                            <arg>${SUITE}</arg>
                            <arg>${name}</arg>
                        </arguments>
                        <msg level="INFO" timestamp="20130409 15:06:57.587">${test} = Run Keyword If with ELSE IF</msg>
                        <status endtime="20130409 15:06:57.587" starttime="20130409 15:06:57.586" status="PASS"/>
                    </kw>
                    <kw name="TestCheckerLibrary.Check Test Status" timeout="" type="kw">
                        <doc>Verifies that test's status and message are as expected.</doc>
                        <arguments>
                            <arg>${test}</arg>
                            <arg>${status}</arg>
                            <arg>${message}</arg>
                        </arguments>
                        <status endtime="20130409 15:06:57.588" starttime="20130409 15:06:57.588" status="PASS"/>
                    </kw>
                    <status endtime="20130409 15:06:57.588" starttime="20130409 15:06:57.585" status="PASS"/>
                </kw>
                <doc/>
                <tags>
                    <tag>jybot</tag>
                    <tag>pybot</tag>
                    <tag>regression</tag>
                </tags>
                <status critical="yes" endtime="20130409 15:06:57.588" starttime="20130409 15:06:57.584" status="PASS"/>
            </test>
            <test id="s1-s2-t26" name="Run Keyword If with ELSE IF and ELSE" timeout="">
                <kw name="atest_resource.Check Test Case" timeout="" type="kw">
                    <doc/>
                    <arguments>
                        <arg>${TESTNAME}</arg>
                    </arguments>
                    <kw name="${test} = TestCheckerLibrary.Get Test From Suite" timeout="" type="kw">
                        <doc/>
                        <arguments>
                            <arg>${SUITE}</arg>
                            <arg>${name}</arg>
                        </arguments>
                        <msg level="INFO" timestamp="20130409 15:06:57.592">${test} = Run Keyword If with ELSE IF and ELSE</msg>
                        <status endtime="20130409 15:06:57.591" starttime="20130409 15:06:57.591" status="PASS"/>
                    </kw>
                    <kw name="TestCheckerLibrary.Check Test Status" timeout="" type="kw">
                        <doc>Verifies that test's status and message are as expected.</doc>
                        <arguments>
                            <arg>${test}</arg>
                            <arg>${status}</arg>
                            <arg>${message}</arg>
                        </arguments>
                        <status endtime="20130409 15:06:57.592" starttime="20130409 15:06:57.592" status="PASS"/>
                    </kw>
                    <status endtime="20130409 15:06:57.592" starttime="20130409 15:06:57.590" status="PASS"/>
                </kw>
                <doc/>
                <tags>
                    <tag>jybot</tag>
                    <tag>pybot</tag>
                    <tag>regression</tag>
                </tags>
                <status critical="yes" endtime="20130409 15:06:57.593" starttime="20130409 15:06:57.588" status="PASS"/>
            </test>
            <test id="s1-s2-t27" name="Run Keyword If with ELSE IF and ELSE without keywords" timeout="">
                <kw name="atest_resource.Check Test Case" timeout="" type="kw">
                    <doc/>
                    <arguments>
                        <arg>${TESTNAME}</arg>
                    </arguments>
                    <kw name="${test} = TestCheckerLibrary.Get Test From Suite" timeout="" type="kw">
                        <doc/>
                        <arguments>
                            <arg>${SUITE}</arg>
                            <arg>${name}</arg>
                        </arguments>
                        <msg level="INFO" timestamp="20130409 15:06:57.597">${test} = Run Keyword If with ELSE IF and ELSE without keywords</msg>
                        <status endtime="20130409 15:06:57.597" starttime="20130409 15:06:57.596" status="PASS"/>
                    </kw>
                    <kw name="TestCheckerLibrary.Check Test Status" timeout="" type="kw">
                        <doc>Verifies that test's status and message are as expected.</doc>
                        <arguments>
                            <arg>${test}</arg>
                            <arg>${status}</arg>
                            <arg>${message}</arg>
                        </arguments>
                        <status endtime="20130409 15:06:57.598" starttime="20130409 15:06:57.597" status="PASS"/>
                    </kw>
                    <status endtime="20130409 15:06:57.598" starttime="20130409 15:06:57.594" status="PASS"/>
                </kw>
                <doc/>
                <tags>
                    <tag>jybot</tag>
                    <tag>pybot</tag>
                    <tag>regression</tag>
                </tags>
                <status critical="yes" endtime="20130409 15:06:57.598" starttime="20130409 15:06:57.593" status="PASS"/>
            </test>
            <test id="s1-s2-t28" name="Run Keyword If with escaped or non-caps ELSE IF and ELSE" timeout="">
                <kw name="atest_resource.Check Test Case" timeout="" type="kw">
                    <doc/>
                    <arguments>
                        <arg>${TESTNAME}</arg>
                    </arguments>
                    <kw name="${test} = TestCheckerLibrary.Get Test From Suite" timeout="" type="kw">
                        <doc/>
                        <arguments>
                            <arg>${SUITE}</arg>
                            <arg>${name}</arg>
                        </arguments>
                        <msg level="INFO" timestamp="20130409 15:06:57.604">${test} = Run Keyword If with escaped or non-caps ELSE IF and ELSE</msg>
                        <status endtime="20130409 15:06:57.603" starttime="20130409 15:06:57.602" status="PASS"/>
                    </kw>
                    <kw name="TestCheckerLibrary.Check Test Status" timeout="" type="kw">
                        <doc>Verifies that test's status and message are as expected.</doc>
                        <arguments>
                            <arg>${test}</arg>
                            <arg>${status}</arg>
                            <arg>${message}</arg>
                        </arguments>
                        <status endtime="20130409 15:06:57.604" starttime="20130409 15:06:57.604" status="PASS"/>
                    </kw>
                    <status endtime="20130409 15:06:57.604" starttime="20130409 15:06:57.600" status="PASS"/>
                </kw>
                <doc/>
                <tags>
                    <tag>jybot</tag>
                    <tag>pybot</tag>
                    <tag>regression</tag>
                </tags>
                <status critical="yes" endtime="20130409 15:06:57.605" starttime="20130409 15:06:57.599" status="PASS"/>
            </test>
            <test id="s1-s2-t29" name="Run Keyword If with list variable in ELSE IF and ELSE" timeout="">
                <kw name="atest_resource.Check Test Case" timeout="" type="kw">
                    <doc/>
                    <arguments>
                        <arg>${TESTNAME}</arg>
                    </arguments>
                    <kw name="${test} = TestCheckerLibrary.Get Test From Suite" timeout="" type="kw">
                        <doc/>
                        <arguments>
                            <arg>${SUITE}</arg>
                            <arg>${name}</arg>
                        </arguments>
                        <msg level="INFO" timestamp="20130409 15:06:57.609">${test} = Run Keyword If with list variable in ELSE IF and ELSE</msg>
                        <status endtime="20130409 15:06:57.609" starttime="20130409 15:06:57.608" status="PASS"/>
                    </kw>
                    <kw name="TestCheckerLibrary.Check Test Status" timeout="" type="kw">
                        <doc>Verifies that test's status and message are as expected.</doc>
                        <arguments>
                            <arg>${test}</arg>
                            <arg>${status}</arg>
                            <arg>${message}</arg>
                        </arguments>
                        <status endtime="20130409 15:06:57.609" starttime="20130409 15:06:57.609" status="PASS"/>
                    </kw>
                    <status endtime="20130409 15:06:57.610" starttime="20130409 15:06:57.607" status="PASS"/>
                </kw>
                <doc/>
                <tags>
                    <tag>jybot</tag>
                    <tag>pybot</tag>
                    <tag>regression</tag>
                </tags>
                <status critical="yes" endtime="20130409 15:06:57.610" starttime="20130409 15:06:57.605" status="PASS"/>
            </test>
            <test id="s1-s2-t30" name="Test Teardown Related Run Keyword Variants" timeout="">
                <kw name="atest_resource.Check Test Case" timeout="" type="kw">
                    <doc/>
                    <arguments>
                        <arg>${TESTNAME}</arg>
                    </arguments>
                    <kw name="${test} = TestCheckerLibrary.Get Test From Suite" timeout="" type="kw">
                        <doc/>
                        <arguments>
                            <arg>${SUITE}</arg>
                            <arg>${name}</arg>
                        </arguments>
                        <msg level="INFO" timestamp="20130409 15:06:57.613">${test} = Test Teardown Related Run Keyword Variants</msg>
                        <status endtime="20130409 15:06:57.613" starttime="20130409 15:06:57.612" status="PASS"/>
                    </kw>
                    <kw name="TestCheckerLibrary.Check Test Status" timeout="" type="kw">
                        <doc>Verifies that test's status and message are as expected.</doc>
                        <arguments>
                            <arg>${test}</arg>
                            <arg>${status}</arg>
                            <arg>${message}</arg>
                        </arguments>
                        <status endtime="20130409 15:06:57.614" starttime="20130409 15:06:57.614" status="PASS"/>
                    </kw>
                    <status endtime="20130409 15:06:57.614" starttime="20130409 15:06:57.611" status="PASS"/>
                </kw>
                <doc/>
                <tags>
                    <tag>jybot</tag>
                    <tag>pybot</tag>
                    <tag>regression</tag>
                </tags>
                <status critical="yes" endtime="20130409 15:06:57.614" starttime="20130409 15:06:57.610" status="PASS"/>
            </test>
            <doc/>
            <metadata/>
            <status endtime="20130409 15:06:57.615" starttime="20130409 15:06:57.027" status="PASS"/>
        </suite>
        <suite id="s1-s3" name="Run Keyword Variants In Suite Teardown" source="/Users/asyrjasalo/eficode/robot/robotframework/atest/robot/cli/dryrun/run_keyword_variants_in_suite_teardown.txt">
            <kw name="atest_resource.Run Tests" timeout="" type="setup">
                <doc/>
                <arguments>
                    <arg>--runmode dryrun</arg>
                    <arg>cli/dryrun/run_keyword_variants_in_suite_teardown.txt</arg>
                </arguments>
                <kw name="atest_resource.Run Tests Helper" timeout="" type="kw">
                    <doc/>
                    <arguments>
                        <arg>${options}</arg>
                        <arg>@{data list}</arg>
                    </arguments>
                    <kw name="${data string} = atest_resource.Set Variables And Get Datasources" timeout="" type="kw">
                        <doc/>
                        <arguments>
                            <arg>@{data list}</arg>
                        </arguments>
                        <kw name="BuiltIn.Set Suite Variable" timeout="" type="kw">
                            <doc>Makes a variable available everywhere within the scope of the current suite.</doc>
                            <arguments>
                                <arg>$SUITE</arg>
                                <arg>${NONE}</arg>
                            </arguments>
                            <msg level="INFO" timestamp="20130409 15:06:57.633">${SUITE} = None</msg>
                            <status endtime="20130409 15:06:57.633" starttime="20130409 15:06:57.633" status="PASS"/>
                        </kw>
                        <kw name="${name} = TestHelper.Get Output Name" timeout="" type="kw">
                            <doc/>
                            <arguments>
                                <arg>@{data list}</arg>
                            </arguments>
                            <msg level="INFO" timestamp="20130409 15:06:57.634">${name} = run_keyword_variants_in_suite_teardown</msg>
                            <status endtime="20130409 15:06:57.634" starttime="20130409 15:06:57.633" status="PASS"/>
                        </kw>
                        <kw name="atest_resource.Set Variables" timeout="" type="kw">
                            <doc/>
                            <arguments>
                                <arg>${name}</arg>
                            </arguments>
                            <kw name="${OUTDIR} = OperatingSystem.Join Path" timeout="" type="kw">
                                <doc>Joins the given path part(s) to the given base path.</doc>
                                <arguments>
                                    <arg>${OUTPUTDIR}</arg>
                                    <arg>output</arg>
                                    <arg>${name}</arg>
                                </arguments>
                                <msg level="INFO" timestamp="20130409 15:06:57.636">${OUTDIR} = /Users/asyrjasalo/eficode/robot/robotframework/atest/results/python/output/run_keyword_variants_in_suite_teardown</msg>
                                <status endtime="20130409 15:06:57.635" starttime="20130409 15:06:57.635" status="PASS"/>
                            </kw>
                            <kw name="BuiltIn.Set Global Variable" timeout="" type="kw">
                                <doc>Makes a variable available globally in all tests and suites.</doc>
                                <arguments>
                                    <arg>$OUTDIR</arg>
                                    <arg>${OUTDIR.encode('ascii', 'ignore').replace('?', '_') .replace('*', '_')}</arg>
                                </arguments>
                                <msg level="INFO" timestamp="20130409 15:06:57.637">${OUTDIR} = /Users/asyrjasalo/eficode/robot/robotframework/atest/results/python/output/run_keyword_variants_in_suite_teardown</msg>
                                <status endtime="20130409 15:06:57.637" starttime="20130409 15:06:57.636" status="PASS"/>
                            </kw>
                            <kw name="OperatingSystem.Create Directory" timeout="" type="kw">
                                <doc>Creates the specified directory.</doc>
                                <arguments>
                                    <arg>${OUTDIR}</arg>
                                </arguments>
                                <msg html="yes" level="INFO" timestamp="20130409 15:06:57.638">Created directory '&lt;a href=&quot;file:///Users/asyrjasalo/eficode/robot/robotframework/atest/results/python/output/run_keyword_variants_in_suite_teardown&quot;&gt;/Users/asyrjasalo/eficode/robot/robotframework/atest/results/python/output/run_keyword_variants_in_suite_teardown&lt;/a&gt;'</msg>
                                <status endtime="20130409 15:06:57.638" starttime="20130409 15:06:57.637" status="PASS"/>
                            </kw>
                            <kw name="BuiltIn.Set Suite Variable" timeout="" type="kw">
                                <doc>Makes a variable available everywhere within the scope of the current suite.</doc>
                                <arguments>
                                    <arg>$OUTFILE</arg>
                                    <arg>${OUTDIR}${/}output.xml</arg>
                                </arguments>
                                <msg level="INFO" timestamp="20130409 15:06:57.638">${OUTFILE} = /Users/asyrjasalo/eficode/robot/robotframework/atest/results/python/output/run_keyword_variants_in_suite_teardown/output.xml</msg>
                                <status endtime="20130409 15:06:57.638" starttime="20130409 15:06:57.638" status="PASS"/>
                            </kw>
                            <kw name="BuiltIn.Set Suite Variable" timeout="" type="kw">
                                <doc>Makes a variable available everywhere within the scope of the current suite.</doc>
                                <arguments>
                                    <arg>$STDOUT_FILE</arg>
                                    <arg>${OUTDIR}${/}stdout.txt</arg>
                                </arguments>
                                <msg level="INFO" timestamp="20130409 15:06:57.639">${STDOUT_FILE} = /Users/asyrjasalo/eficode/robot/robotframework/atest/results/python/output/run_keyword_variants_in_suite_teardown/stdout.txt</msg>
                                <status endtime="20130409 15:06:57.639" starttime="20130409 15:06:57.639" status="PASS"/>
                            </kw>
                            <kw name="BuiltIn.Set Suite Variable" timeout="" type="kw">
                                <doc>Makes a variable available everywhere within the scope of the current suite.</doc>
                                <arguments>
                                    <arg>$STDERR_FILE</arg>
                                    <arg>${OUTDIR}${/}stderr.txt</arg>
                                </arguments>
                                <msg level="INFO" timestamp="20130409 15:06:57.640">${STDERR_FILE} = /Users/asyrjasalo/eficode/robot/robotframework/atest/results/python/output/run_keyword_variants_in_suite_teardown/stderr.txt</msg>
                                <status endtime="20130409 15:06:57.640" starttime="20130409 15:06:57.639" status="PASS"/>
                            </kw>
                            <kw name="BuiltIn.Set Suite Variable" timeout="" type="kw">
                                <doc>Makes a variable available everywhere within the scope of the current suite.</doc>
                                <arguments>
                                    <arg>$SYSLOG_FILE</arg>
                                    <arg>${OUTDIR}${/}syslog.txt</arg>
                                </arguments>
                                <msg level="INFO" timestamp="20130409 15:06:57.640">${SYSLOG_FILE} = /Users/asyrjasalo/eficode/robot/robotframework/atest/results/python/output/run_keyword_variants_in_suite_teardown/syslog.txt</msg>
                                <status endtime="20130409 15:06:57.641" starttime="20130409 15:06:57.640" status="PASS"/>
                            </kw>
                            <kw name="OperatingSystem.Set Environment Variable" timeout="" type="kw">
                                <doc>Sets an environment variable to a specified value.</doc>
                                <arguments>
                                    <arg>ROBOT_SYSLOG_FILE</arg>
                                    <arg>${SYSLOG_FILE}</arg>
                                </arguments>
                                <msg level="INFO" timestamp="20130409 15:06:57.641">Environment variable 'ROBOT_SYSLOG_FILE' set to value '/Users/asyrjasalo/eficode/robot/robotframework/atest/results/python/output/run_keyword_variants_in_suite_teardown/syslog.txt'</msg>
                                <status endtime="20130409 15:06:57.641" starttime="20130409 15:06:57.641" status="PASS"/>
                            </kw>
                            <kw name="atest_resource.Set Runners" timeout="" type="kw">
                                <doc/>
                                <arguments/>
                                <kw name="${robot} = OperatingSystem.Join Path" timeout="" type="kw">
                                    <doc>Joins the given path part(s) to the given base path.</doc>
                                    <arguments>
                                        <arg>${ROBOTPATH}</arg>
                                        <arg>run.py</arg>
                                    </arguments>
                                    <msg level="INFO" timestamp="20130409 15:06:57.642">${robot} = /Users/asyrjasalo/eficode/robot/robotframework/src/robot/run.py</msg>
                                    <status endtime="20130409 15:06:57.642" starttime="20130409 15:06:57.642" status="PASS"/>
                                </kw>
                                <kw name="BuiltIn.Set Suite Variable" timeout="" type="kw">
                                    <doc>Makes a variable available everywhere within the scope of the current suite.</doc>
                                    <arguments>
                                        <arg>$ROBOT</arg>
                                        <arg>${INTERPRETER} ${robot}</arg>
                                    </arguments>
                                    <msg level="INFO" timestamp="20130409 15:06:57.643">${ROBOT} = python /Users/asyrjasalo/eficode/robot/robotframework/src/robot/run.py</msg>
                                    <status endtime="20130409 15:06:57.643" starttime="20130409 15:06:57.643" status="PASS"/>
                                </kw>
                                <kw name="${rebot} = OperatingSystem.Join Path" timeout="" type="kw">
                                    <doc>Joins the given path part(s) to the given base path.</doc>
                                    <arguments>
                                        <arg>${ROBOTPATH}</arg>
                                        <arg>rebot.py</arg>
                                    </arguments>
                                    <msg level="INFO" timestamp="20130409 15:06:57.644">${rebot} = /Users/asyrjasalo/eficode/robot/robotframework/src/robot/rebot.py</msg>
                                    <status endtime="20130409 15:06:57.644" starttime="20130409 15:06:57.643" status="PASS"/>
                                </kw>
                                <kw name="BuiltIn.Set Suite Variable" timeout="" type="kw">
                                    <doc>Makes a variable available everywhere within the scope of the current suite.</doc>
                                    <arguments>
                                        <arg>$REBOT</arg>
                                        <arg>${INTERPRETER} ${rebot}</arg>
                                    </arguments>
                                    <msg level="INFO" timestamp="20130409 15:06:57.644">${REBOT} = python /Users/asyrjasalo/eficode/robot/robotframework/src/robot/rebot.py</msg>
                                    <status endtime="20130409 15:06:57.645" starttime="20130409 15:06:57.644" status="PASS"/>
                                </kw>
                                <status endtime="20130409 15:06:57.645" starttime="20130409 15:06:57.641" status="PASS"/>
                            </kw>
                            <status endtime="20130409 15:06:57.645" starttime="20130409 15:06:57.634" status="PASS"/>
                        </kw>
                        <kw name="@{data list} = OperatingSystem.Join Paths" timeout="" type="kw">
                            <doc>Joins given paths with base and returns resulted paths.</doc>
                            <arguments>
                                <arg>${DATADIR}</arg>
                                <arg>@{data list}</arg>
                            </arguments>
                            <msg level="INFO" timestamp="20130409 15:06:57.645">@{data list} = [ /Users/asyrjasalo/eficode/robot/robotframework/atest/testdata/cli/dryrun/run_keyword_variants_in_suite_teardown.txt ]</msg>
                            <status endtime="20130409 15:06:57.645" starttime="20130409 15:06:57.645" status="PASS"/>
                        </kw>
                        <kw name="${data string} = BuiltIn.Catenate" timeout="" type="kw">
                            <doc>Catenates the given items together and returns the resulted string.</doc>
                            <arguments>
                                <arg>@{data list}</arg>
                            </arguments>
                            <msg level="INFO" timestamp="20130409 15:06:57.646">${data string} = /Users/asyrjasalo/eficode/robot/robotframework/atest/testdata/cli/dryrun/run_keyword_variants_in_suite_teardown.txt</msg>
                            <status endtime="20130409 15:06:57.646" starttime="20130409 15:06:57.646" status="PASS"/>
                        </kw>
                        <msg level="INFO" timestamp="20130409 15:06:57.646">${data string} = /Users/asyrjasalo/eficode/robot/robotframework/atest/testdata/cli/dryrun/run_keyword_variants_in_suite_teardown.txt</msg>
                        <status endtime="20130409 15:06:57.646" starttime="20130409 15:06:57.632" status="PASS"/>
                    </kw>
                    <kw name="${options} = BuiltIn.Catenate" timeout="" type="kw">
                        <doc>Catenates the given items together and returns the resulted string.</doc>
                        <arguments>
                            <arg>--MonitorMarkers OFF</arg>
                            <arg>${user options}</arg>
                            <arg>--variable interpreter:${INTERPRETER}</arg>
                            <arg>--pythonpath ${LIBPATH1}</arg>
                            <arg>--pythonpath ${LIBPATH2}</arg>
                        </arguments>
                        <msg level="INFO" timestamp="20130409 15:06:57.647">${options} = --MonitorMarkers OFF --runmode dryrun --variable interpreter:python --pythonpath /Users/asyrjasalo/eficode/robot/robotframework/atest/resources/../testresources/testlibs --pythonpath /Users/asyrjasalo...</msg>
                        <status endtime="20130409 15:06:57.647" starttime="20130409 15:06:57.646" status="PASS"/>
                    </kw>
                    <kw name="atest_resource.Run Helper" timeout="" type="kw">
                        <doc/>
                        <arguments>
                            <arg>${ROBOT}</arg>
                            <arg>${options}</arg>
                            <arg>${data string}</arg>
                        </arguments>
                        <kw name="OperatingSystem.Remove Files" timeout="" type="kw">
                            <doc>Uses `Remove File` to remove multiple files one-by-one.</doc>
                            <arguments>
                                <arg>${OUTFILE}</arg>
                                <arg>${OUTDIR}/*.xml</arg>
                                <arg>${OUTDIR}/*.html</arg>
                            </arguments>
                            <msg html="yes" level="INFO" timestamp="20130409 15:06:57.649">File '&lt;a href=&quot;file:///Users/asyrjasalo/eficode/robot/robotframework/atest/results/python/output/run_keyword_variants_in_suite_teardown/output.xml&quot;&gt;/Users/asyrjasalo/eficode/robot/robotframework/atest/results/python/output/run_keyword_variants_in_suite_teardown/output.xml&lt;/a&gt;' does not exist</msg>
                            <msg html="yes" level="INFO" timestamp="20130409 15:06:57.650">File '&lt;a href=&quot;file:///Users/asyrjasalo/eficode/robot/robotframework/atest/results/python/output/run_keyword_variants_in_suite_teardown/*.xml&quot;&gt;/Users/asyrjasalo/eficode/robot/robotframework/atest/results/python/output/run_keyword_variants_in_suite_teardown/*.xml&lt;/a&gt;' does not exist</msg>
                            <msg html="yes" level="INFO" timestamp="20130409 15:06:57.650">File '&lt;a href=&quot;file:///Users/asyrjasalo/eficode/robot/robotframework/atest/results/python/output/run_keyword_variants_in_suite_teardown/*.html&quot;&gt;/Users/asyrjasalo/eficode/robot/robotframework/atest/results/python/output/run_keyword_variants_in_suite_teardown/*.html&lt;/a&gt;' does not exist</msg>
                            <status endtime="20130409 15:06:57.650" starttime="20130409 15:06:57.648" status="PASS"/>
                        </kw>
                        <kw name="${cmd} = BuiltIn.Catenate" timeout="" type="kw">
                            <doc>Catenates the given items together and returns the resulted string.</doc>
                            <arguments>
                                <arg>${runner}</arg>
                                <arg>--monitorcolors OFF</arg>
                                <arg>--outputdir ${OUTDIR}</arg>
                                <arg>--output ${OUTFILE}</arg>
                                <arg>--report NONE</arg>
                                <arg>--log NONE</arg>
                                <arg>${options}</arg>
                                <arg>${data string}</arg>
                                <arg>1&gt;${STDOUTFILE}</arg>
                                <arg>2&gt;${STDERRFILE}</arg>
                            </arguments>
                            <msg level="INFO" timestamp="20130409 15:06:57.652">${cmd} = python /Users/asyrjasalo/eficode/robot/robotframework/src/robot/run.py --monitorcolors OFF --outputdir /Users/asyrjasalo/eficode/robot/robotframework/atest/results/python/output/run_keyword_variants_i...</msg>
                            <status endtime="20130409 15:06:57.652" starttime="20130409 15:06:57.651" status="PASS"/>
                        </kw>
                        <kw name="${rc} = OperatingSystem.Run And Return Rc" timeout="" type="kw">
                            <doc>Runs the given command in the system and returns the return code.</doc>
                            <arguments>
                                <arg>${cmd}</arg>
                            </arguments>
                            <msg level="INFO" timestamp="20130409 15:06:57.653">Running command 'python /Users/asyrjasalo/eficode/robot/robotframework/src/robot/run.py --monitorcolors OFF --outputdir /Users/asyrjasalo/eficode/robot/robotframework/atest/results/python/output/run_keyword_variants_in_suite_teardown --output /Users/asyrjasalo/eficode/robot/robotframework/atest/results/python/output/run_keyword_variants_in_suite_teardown/output.xml --report NONE --log NONE --MonitorMarkers OFF --runmode dryrun --variable interpreter:python --pythonpath /Users/asyrjasalo/eficode/robot/robotframework/atest/resources/../testresources/testlibs --pythonpath /Users/asyrjasalo/eficode/robot/robotframework/atest/resources/../testresources/listeners /Users/asyrjasalo/eficode/robot/robotframework/atest/testdata/cli/dryrun/run_keyword_variants_in_suite_teardown.txt 1&gt;/Users/asyrjasalo/eficode/robot/robotframework/atest/results/python/output/run_keyword_variants_in_suite_teardown/stdout.txt 2&gt;/Users/asyrjasalo/eficode/robot/robotframework/atest/results/python/output/run_keyword_variants_in_suite_teardown/stderr.txt'</msg>
                            <msg level="INFO" timestamp="20130409 15:06:57.907">${rc} = 1</msg>
                            <status endtime="20130409 15:06:57.907" starttime="20130409 15:06:57.652" status="PASS"/>
                        </kw>
                        <kw name="BuiltIn.Log" timeout="" type="kw">
                            <doc>Logs the given message with the given level.</doc>
                            <arguments>
                                <arg>&lt;a href=&quot;file://${OUTDIR}&quot;&gt;${OUTDIR}&lt;/a&gt;</arg>
                                <arg>HTML</arg>
                            </arguments>
                            <msg html="yes" level="INFO" timestamp="20130409 15:06:57.908">&lt;a href=&quot;file:///Users/asyrjasalo/eficode/robot/robotframework/atest/results/python/output/run_keyword_variants_in_suite_teardown&quot;&gt;/Users/asyrjasalo/eficode/robot/robotframework/atest/results/python/output/run_keyword_variants_in_suite_teardown&lt;/a&gt;</msg>
                            <status endtime="20130409 15:06:57.908" starttime="20130409 15:06:57.907" status="PASS"/>
                        </kw>
                        <kw name="BuiltIn.Log" timeout="" type="kw">
                            <doc>Logs the given message with the given level.</doc>
                            <arguments>
                                <arg>&lt;a href=&quot;file://${OUTFILE}&quot;&gt;${OUTFILE}&lt;/a&gt;</arg>
                                <arg>HTML</arg>
                            </arguments>
                            <msg html="yes" level="INFO" timestamp="20130409 15:06:57.908">&lt;a href=&quot;file:///Users/asyrjasalo/eficode/robot/robotframework/atest/results/python/output/run_keyword_variants_in_suite_teardown/output.xml&quot;&gt;/Users/asyrjasalo/eficode/robot/robotframework/atest/results/python/output/run_keyword_variants_in_suite_teardown/output.xml&lt;/a&gt;</msg>
                            <status endtime="20130409 15:06:57.908" starttime="20130409 15:06:57.908" status="PASS"/>
                        </kw>
                        <kw name="BuiltIn.Log" timeout="" type="kw">
                            <doc>Logs the given message with the given level.</doc>
                            <arguments>
                                <arg>&lt;a href=&quot;file://${STDOUTFILE}&quot;&gt;${STDOUTFILE}&lt;/a&gt;</arg>
                                <arg>HTML</arg>
                            </arguments>
                            <msg html="yes" level="INFO" timestamp="20130409 15:06:57.909">&lt;a href=&quot;file:///Users/asyrjasalo/eficode/robot/robotframework/atest/results/python/output/run_keyword_variants_in_suite_teardown/stdout.txt&quot;&gt;/Users/asyrjasalo/eficode/robot/robotframework/atest/results/python/output/run_keyword_variants_in_suite_teardown/stdout.txt&lt;/a&gt;</msg>
                            <status endtime="20130409 15:06:57.909" starttime="20130409 15:06:57.909" status="PASS"/>
                        </kw>
                        <kw name="BuiltIn.Log" timeout="" type="kw">
                            <doc>Logs the given message with the given level.</doc>
                            <arguments>
                                <arg>&lt;a href=&quot;file://${STDERRFILE}&quot;&gt;${STDERRFILE}&lt;/a&gt;</arg>
                                <arg>HTML</arg>
                            </arguments>
                            <msg html="yes" level="INFO" timestamp="20130409 15:06:57.910">&lt;a href=&quot;file:///Users/asyrjasalo/eficode/robot/robotframework/atest/results/python/output/run_keyword_variants_in_suite_teardown/stderr.txt&quot;&gt;/Users/asyrjasalo/eficode/robot/robotframework/atest/results/python/output/run_keyword_variants_in_suite_teardown/stderr.txt&lt;/a&gt;</msg>
                            <status endtime="20130409 15:06:57.910" starttime="20130409 15:06:57.909" status="PASS"/>
                        </kw>
                        <kw name="BuiltIn.Log" timeout="" type="kw">
                            <doc>Logs the given message with the given level.</doc>
                            <arguments>
                                <arg>&lt;a href=&quot;file://${SYSLOGFILE}&quot;&gt;${SYSLOGFILE}&lt;/a&gt;</arg>
                                <arg>HTML</arg>
                            </arguments>
                            <msg html="yes" level="INFO" timestamp="20130409 15:06:57.910">&lt;a href=&quot;file:///Users/asyrjasalo/eficode/robot/robotframework/atest/results/python/output/run_keyword_variants_in_suite_teardown/syslog.txt&quot;&gt;/Users/asyrjasalo/eficode/robot/robotframework/atest/results/python/output/run_keyword_variants_in_suite_teardown/syslog.txt&lt;/a&gt;</msg>
                            <status endtime="20130409 15:06:57.910" starttime="20130409 15:06:57.910" status="PASS"/>
                        </kw>
                        <status endtime="20130409 15:06:57.910" starttime="20130409 15:06:57.647" status="PASS"/>
                    </kw>
                    <status endtime="20130409 15:06:57.911" starttime="20130409 15:06:57.630" status="PASS"/>
                </kw>
                <kw name="TestCheckerLibrary.Process Output" timeout="" type="kw">
                    <doc/>
                    <arguments>
                        <arg>${OUTFILE}</arg>
                    </arguments>
                    <msg level="INFO" timestamp="20130409 15:06:57.913">${SUITE} = Run Keyword Variants In Suite Teardown</msg>
                    <msg level="INFO" timestamp="20130409 15:06:57.914">${STATISTICS} = &lt;robot.model.statistics.Statistics object at 0x10518b950&gt;</msg>
                    <msg level="INFO" timestamp="20130409 15:06:57.914">${ERRORS} = &lt;robot.result.executionerrors.ExecutionErrors object at 0x105188c50&gt;</msg>
                    <msg level="INFO" timestamp="20130409 15:06:57.914">Processing output '/Users/asyrjasalo/eficode/robot/robotframework/atest/results/python/output/run_keyword_variants_in_suite_teardown/output.xml'</msg>
                    <status endtime="20130409 15:06:57.914" starttime="20130409 15:06:57.911" status="PASS"/>
                </kw>
                <status endtime="20130409 15:06:57.914" starttime="20130409 15:06:57.629" status="PASS"/>
            </kw>
            <test id="s1-s3-t1" name="Suite Teardown Related Run Keyword Variants" timeout="">
                <kw name="atest_resource.Check Test Case" timeout="" type="kw">
                    <doc/>
                    <arguments>
                        <arg>${TESTNAME}</arg>
                    </arguments>
                    <kw name="${test} = TestCheckerLibrary.Get Test From Suite" timeout="" type="kw">
                        <doc/>
                        <arguments>
                            <arg>${SUITE}</arg>
                            <arg>${name}</arg>
                        </arguments>
                        <msg level="INFO" timestamp="20130409 15:06:57.917">${test} = Suite Teardown Related Run Keyword Variants</msg>
                        <status endtime="20130409 15:06:57.917" starttime="20130409 15:06:57.917" status="PASS"/>
                    </kw>
                    <kw name="TestCheckerLibrary.Check Test Status" timeout="" type="kw">
                        <doc>Verifies that test's status and message are as expected.</doc>
                        <arguments>
                            <arg>${test}</arg>
                            <arg>${status}</arg>
                            <arg>${message}</arg>
                        </arguments>
                        <status endtime="20130409 15:06:57.918" starttime="20130409 15:06:57.917" status="PASS"/>
                    </kw>
                    <status endtime="20130409 15:06:57.918" starttime="20130409 15:06:57.915" status="PASS"/>
                </kw>
                <doc/>
                <tags>
                    <tag>jybot</tag>
                    <tag>pybot</tag>
                    <tag>regression</tag>
                </tags>
                <status critical="yes" endtime="20130409 15:06:57.918" starttime="20130409 15:06:57.914" status="PASS"/>
            </test>
            <doc/>
            <metadata/>
            <status endtime="20130409 15:06:57.919" starttime="20130409 15:06:57.615" status="PASS"/>
        </suite>
        <doc>Robot Framework acceptance tests</doc>
        <metadata>
            <item name="Interpreter">python</item>
            <item name="Platform">darwin</item>
        </metadata>
        <status endtime="20130409 15:06:57.920" starttime="20130409 15:06:56.309" status="PASS"/>
    </suite>
    <statistics>
        <total>
            <stat fail="0" pass="50">Critical Tests</stat>
            <stat fail="0" pass="50">All Tests</stat>
        </total>
        <tag>
            <stat combined="" doc="" fail="0" info="critical" links="" pass="50">regression</stat>
            <stat combined="jybot NOT pybot" doc="" fail="0" info="combined" links="" pass="0">jybot NOT pybot</stat>
            <stat combined="pybot NOT jybot" doc="" fail="0" info="combined" links="" pass="0">pybot NOT jybot</stat>
        </tag>
        <suite>
            <stat fail="0" id="s1" name="Dryrun" pass="50">Dryrun</stat>
            <stat fail="0" id="s1-s1" name="Dryrun" pass="19">Dryrun.Dryrun</stat>
            <stat fail="0" id="s1-s2" name="Run Keyword Variants" pass="30">Dryrun.Run Keyword Variants</stat>
            <stat fail="0" id="s1-s3" name="Run Keyword Variants In Suite Teardown" pass="1">Dryrun.Run Keyword Variants In Suite Teardown</stat>
        </suite>
    </statistics>
    <errors/>
</robot>
